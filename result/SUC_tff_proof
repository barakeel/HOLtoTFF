List((0 ≤ xb)) | selSimp | List((0 ≤ xb))
List((0 ≤ xa)) | selSimp | List((0 ≤ xa))
List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ) ∨ (xa ≤ xb)) | selSimp | List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ) ∨ (xa ≤ xb))
List() | Split | List((xa ≤ xb))
List((xa ≤ xb)) | selSimp | List((xa ≤ xb))
List((0 ≤ cSUC(xb))) | selSimp | List((0 ≤ cSUC(xb)))
List((0 ≤ cSUC(xb))) | Define on | List(cSUC(xb) →_ℤ #e_1, (0 ≤ #e_1))
List((0 ≤ #e_1)) | selSimp | List((0 ≤ #e_1))
List(cSUC(xb) →_ℤ #e_1) | selSimp | List(cSUC(xb) →_ℤ #e_1)
List(#e_1 ≈_ℤ #e_1 ∨ ¬(xb ≈_ℤ xb)) | Para1 | List(cSUC(xb) →_ℤ #e_1)
List(#e_1 ≈_ℤ #e_1 ∨ ¬(xb ≈_ℤ xb)) | Para2 | List(cSUC(xb) →_ℤ #e_1)
List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ) ∨ (Xxᵃ < cSUC(Xyᵃ)) ∨ ¬(Xxᵃ ≤ Xyᵃ)) | selSimp | List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ) ∨ (Xxᵃ < cSUC(Xyᵃ)) ∨ ¬(Xxᵃ ≤ Xyᵃ))
List(¬(0 ≤ xb) ∨ ¬(0 ≤ Xx_25ᵃ) ∨ (Xx_25ᵃ < #e_1) ∨ ¬(Xx_25ᵃ ≤ xb)) | Para1 | List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ) ∨ (Xxᵃ < cSUC(Xyᵃ)) ∨ ¬(Xxᵃ ≤ Xyᵃ))
List(¬(0 ≤ Xy_31ᵃ) ∨ ¬(0 ≤ Xx_30ᵃ) ∨ $$true ∨ ¬(Xx_30ᵃ ≤ Xy_31ᵃ) ∨ ¬(0 ≤ Xy_31ᵃ) ∨ ¬(0 ≤ Xx_30ᵃ) ∨ ¬(Xx_30ᵃ ≤ Xy_31ᵃ)) | Para1 | List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ) ∨ (Xxᵃ < cSUC(Xyᵃ)) ∨ ¬(Xxᵃ ≤ Xyᵃ))
List(¬(0 ≤ Xy_38ᵃ) ∨ ¬(0 ≤ Xx_37ᵃ) ∨ $$true ∨ ¬(Xx_37ᵃ ≤ Xy_38ᵃ) ∨ ¬(0 ≤ Xy_38ᵃ) ∨ ¬(0 ≤ Xx_37ᵃ) ∨ ¬(Xx_37ᵃ ≤ Xy_38ᵃ)) | Para2 | List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ) ∨ (Xxᵃ < cSUC(Xyᵃ)) ∨ ¬(Xxᵃ ≤ Xyᵃ))
List(¬(0 ≤ Xx_25ᵃ) ∨ (Xx_25ᵃ < #e_1) ∨ ¬(Xx_25ᵃ ≤ xb)) | selSimp | List(¬(0 ≤ xb) ∨ ¬(0 ≤ Xx_25ᵃ) ∨ (Xx_25ᵃ < #e_1) ∨ ¬(Xx_25ᵃ ≤ xb))
List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ) ∨ ¬(xa < cSUC(xb))) | selSimp | List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ) ∨ ¬(xa < cSUC(xb)))
List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ) ∨ ¬(xa < cSUC(xb))) | Define on | List(cSUC(xb) →_ℤ #e_1, ¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ) ∨ ¬(xa < #e_1))
List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ) ∨ ¬(xa < #e_1)) | selSimp | List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ) ∨ ¬(xa < #e_1))
List() | Split | List(¬(xa < #e_1))
List(¬(xa < #e_1)) | selSimp | List(¬(xa < #e_1))
List(¬(-1 < -#e_1) ∨ ¬(-1 < xb)) | selSimp | List(¬(-1 < -#e_1) ∨ ¬(-1 < xb))
List() | Split | List(¬(-1 < xb))
List(¬(-1 < #e_1) ∨ ¬(-1 < (-#e_1 + xb))) | selSimp | List(¬(-1 < #e_1) ∨ ¬(-1 < (-#e_1 + xb)))
List() | Split | List(¬(-1 < (-#e_1 + xb)))
List(¬(-1 < xb)) | selSimp | List(¬(-1 < xb))
List(¬(-1 < #e_1) ∨ ¬(-1 < (-#e_1 + xb))) | selSimp | List(¬(-1 < #e_1) ∨ ¬(-1 < (-#e_1 + xb)))
List() | Split | List(¬(-1 < (-#e_1 + xb)))
List((-1 < xb)) | selSimp | List((-1 < xb))
List(¬(-1 < (-#e_1 + xb))) | selSimp | List(¬(-1 < (-#e_1 + xb)))
List((-1 < xb)) | selSimp | List((-1 < xb))
List(¬(-1 < -#e_1)) | selSimp | List(¬(-1 < -#e_1))
List(¬(-1 < #e_1)) | selSimp | List(¬(-1 < #e_1))
List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ)) | selSimp | List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ))
List() | Split | List(¬(0 ≤ Xxᵃ))
List((xa < #e_1)) | selSimp | List((xa < #e_1))
List(¬(0 ≤ Xxᵃ)) | selSimp | List(¬(0 ≤ Xxᵃ))
List((xa < #e_1)) | selSimp | List((xa < #e_1))
List(¬(0 ≤ Xyᵃ)) | selSimp | List(¬(0 ≤ Xyᵃ))
List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ)) | selSimp | List(¬(0 ≤ Xyᵃ) ∨ ¬(0 ≤ Xxᵃ))
List() | Split | List(¬(0 ≤ Xxᵃ))
List(¬(xa ≤ xb)) | selSimp | List(¬(xa ≤ xb))
List(¬(0 ≤ Xxᵃ)) | selSimp | List(¬(0 ≤ Xxᵃ))
List(¬(xa ≤ xb)) | selSimp | List(¬(xa ≤ xb))
List(¬(0 ≤ Xyᵃ)) | selSimp | List(¬(0 ≤ Xyᵃ))
