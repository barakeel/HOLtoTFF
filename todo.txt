ISSUES

betaeta reduction 
  after beta-eta red use some trick to remove lambda abstraction.
  I forgot where eq alphaconv is to equate \x.x and \y.y
  
pretty printing
  just do it

functionnality
  boolTheory ( not even there )
  
type
  change substring and use String.size 
  

CODE QUESTIONS
  Instantiation of bound variables to specific types
    Why can't the user do it ? Because if we generate all the possible instantiation (possible but it will be big)
    nbty      number of different types ( generally 10 to 100 ) 
    nbalphaty number of different alpha type to be instantiate 
    nbty ^ nbalphaty number of instantiation
  Instantation of free variables
    2 layer ( is it a good idea? )
  How to make my functions look better ? (list) and name
   
TODO

monomorph: 
  to be extended to bound variables

testing:
- include examples from metis_tac
- create a call to beagle from inside the project (use shell script)

output:
- print boolean to two different type depending on the situation
- choose what to do inside the formula and what to do outside
- create all dict on a term list
- add boolean axioms 
- add numeral axioms 
- add function axioms 
- add app axioms
- add comments to be printed in the standard input when the file is generated
- add comments to the file if the user wants to  provide some 
- tptp comments; File Domain Problem Bersion English Refs: Source: Names Status
 
documentation:
- explanation of what each signature function does to be added easily to holdoc.

rewriting:   
  - abstraction:
  - boolean:
  - higher order: add app constant
 
product:
  verify if it's working correctly i think it 's not 

infer axiom from a theory:
  do it manually for each constant
  
