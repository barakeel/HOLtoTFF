Number: 1
Status: Unsatisfiable
Info: polymorph num higher-order proof 
Thm list: 
 [] |- ∀P l. LENGTH (SND (SPLITP P l)) ≤ LENGTH l
 [] |- a ≤ b ⇒ a < SUC b
Goal:  [¬P h] |- LENGTH (SND (SPLITP P t)) < SUC (LENGTH t)

Number: 2
Status: Unsatisfiable
Info: polymorph num proof 
Thm list: 
 [] |- ∀P l. LENGTH (SND (SPLITP P l)) ≤ LENGTH l
 [] |- a ≤ b ⇒ a < SUC b
Goal:  [P h] |- (l ≠ "" ∨ r ≠ STRING h t) ∨ (l = "")

Number: 3
Status: Unsatisfiable
Info: polymorph num higher-order proof 
Thm list: 
 [] |- ∀P l. LENGTH (SND (SPLITP P l)) ≤ LENGTH l
 [] |- ∀l. l ≠ [] ⇒ LENGTH (TL l) < LENGTH l
 [] |- ∀m n p. m < n ∧ n < p ⇒ m < p
 [] |- a ≤ b ⇒ a < SUC b
Goal:  [¬P h, SND (SPLITP P t) ≠ ""]
|- LENGTH (TL (SND (SPLITP P t))) < SUC (LENGTH t)

Number: 4
Status: Unsatisfiable
Info: proof 
Thm list: 
 [] |- EXPLODE (IMPLODE cs) = cs
 [] |- IMPLODE (EXPLODE s) = s
Goal:  [] |- ∀cs. ∃s. cs = EXPLODE s

Number: 5
Status: Unsatisfiable
Info: proof 
Thm list: 
 [] |- EXPLODE (IMPLODE cs) = cs
 [] |- IMPLODE (EXPLODE s) = s
Goal:  [] |- ∀s. ∃cs. s = IMPLODE cs

Number: 6
Status: Unsatisfiable
Info: proof 
Thm list: 
 [] |- EXPLODE (IMPLODE cs) = cs
 [] |- IMPLODE (EXPLODE s) = s
Goal:  [] |- (EXPLODE s1 = EXPLODE s2) ⇔ (s1 = s2)

Number: 7
Status: Unsatisfiable
Info: proof 
Thm list: 
 [] |- EXPLODE (IMPLODE cs) = cs
 [] |- IMPLODE (EXPLODE s) = s
Goal:  [] |- (IMPLODE cs1 = IMPLODE cs2) ⇔ (cs1 = cs2)

Number: 8
Status: Unsatisfiable
Info: proof 
Thm list: 
Goal: 
[∀s2 s3. s1 < s2 ∧ s2 < s3 ⇒ s1 < s3, ¬(ORD h'' < ORD h'),
 ORD h = ORD h', ORD h'' = ORD h, s1 < t, t < t'] |- s1 < t'

Number: 9
Status: Unsatisfiable
Info: num proof 
Thm list: 
Goal: 
[∀s2 s3. s1 < s2 ∧ s2 < s3 ⇒ s1 < s3, ∀m. m < ORD h ⇒ m < ORD h',
 ∀p. ORD h' < p ⇒ ORD h < p, ¬(ORD h'' < ORD h'), ORD h < ORD h',
 ORD h'' = ORD h, s1 < t] |- s1 < t'

Number: 10
Status: Unsatisfiable
Info: num proof 
Thm list: 
Goal: 
[∀s2 s3. s1 < s2 ∧ s2 < s3 ⇒ s1 < s3, ∀m. m < ORD h'' ⇒ m < ORD h,
 ∀p. ORD h < p ⇒ ORD h'' < p, ¬(ORD h'' < ORD h'), ORD h'' < ORD h,
 ORD h = ORD h', t < t'] |- s1 < t'

Number: 11
Status: Unsatisfiable
Info: bool num proof 
Thm list: 
 [] |- 0 < 256
 [] |- ∀n. 0 < n ⇒ ∀k. (k = k DIV n * n + k MOD n) ∧ k MOD n < n
 [] |- ∀m n. m + n = n + m
Goal: 
[∀m. m < n ⇒ (s2n (n2s m) = m),
 Abbrev (s0 = n2s ((n − n MOD 256) DIV 256)), n ≠ 0, n MOD 256 ≠ 0,
 0 < n MOD 256, (n − n MOD 256) DIV 256 < n,
 s2n s0 = (n − n MOD 256) DIV 256]
|- (n = n MOD 256 + n DIV 256 * 256) ∨ n ≤ n MOD 256 ∧ (n DIV 256 = 0)

Number: 12
Status: Unsatisfiable
Info: bool num proof 
Thm list: 
 [] |- 0 < 256
 [] |- ∀n. 0 < n ⇒ ∀k. (k = k DIV n * n + k MOD n) ∧ k MOD n < n
 [] |- ∀m n. m * n = n * m
Goal: 
[∀m. m < n ⇒ (s2n (n2s m) = m),
 Abbrev (s0 = n2s ((n − n MOD 256) DIV 256)), n ≠ 0, n MOD 256 ≠ 0,
 0 < n MOD 256, (n − n MOD 256) DIV 256 < n,
 s2n s0 = (n − n MOD 256) DIV 256, (n − n MOD 256) DIV 256 = n DIV 256]
|- 256 * (n DIV 256) + n MOD 256 = n

Number: 13
Status: Unsatisfiable
Info: bool num proof 
Thm list: 
 [] |- ∀n. 0 < n ⇒ ∀k. (k = k DIV n * n + k MOD n) ∧ k MOD n < n
 []
|- (0 + m = m) ∧ (m + 0 = m) ∧ (SUC m + n = SUC (m + n)) ∧
   (m + SUC n = SUC (m + n))
 [] |- 0 < 256
Goal: 
[∀m. m < n ⇒ (s2n (n2s m) = m), Abbrev (s0 = n2s ((n − r) DIV 256)),
 Abbrev (r = if r0 = 0 then 256 else r0), Abbrev (r0 = n MOD 256),
 n ≠ 0, 0 < r, (n − r) DIV 256 < n, n MOD 256 < 256, r0 = 0,
 s2n s0 = (n − r) DIV 256] |- ∃q. n = q * 256

Number: 15
Status: Unsatisfiable
Info: bool num proof 
Thm list: 
 [] |- ∀n. 0 < n ⇒ ∀k. (k = k DIV n * n + k MOD n) ∧ k MOD n < n
 []
|- (0 + m = m) ∧ (m + 0 = m) ∧ (SUC m + n = SUC (m + n)) ∧
   (m + SUC n = SUC (m + n))
 [] |- 0 < 256
Goal: 
[Abbrev (s0 = n2s ((s2n s * 256 + ORD c + 1 − r) DIV 256)),
 Abbrev (r = if r0 = 0 then 256 else r0), ORD c < 256, n2s (s2n s) = s,
 r0 = 0, r0 = (ORD c + 1) MOD 256] |- ∃q. ORD c + 1 = q * 256

Number: 16
Status: Unsatisfiable
Info: bool num proof 
Thm list: 
 [] |- ∀a. CHR (ORD a) = a
Goal: 
[T, Abbrev (s0 = n2s ((s2n s * 256 + ORD c + 1 − r) DIV 256)),
 Abbrev (r = 256), ORD c < 256, n2s (s2n s) = s, q = 1, r0 = 0,
 ORD c = 255, ORD c + 1 = 256] |- c = #"\255"

Number: 19
Status: Unsatisfiable
Info: proof 
Thm list: 
 [] |- n2s (s2n s) = s
Goal:  [] |- (s2n x = s2n y) ⇔ (x = y)

Number: 21
Status: Unsatisfiable
Info: num proof 
Thm list: 
 [] |- ∀n. s2n (n2s n) = n
Goal:  [] |- ∀n. ∃s. n = s2n s

Number: 22
Status: Unsatisfiable
Info: proof 
Thm list: 
Goal:  [(ALOOKUP l q = NONE) ⇔ ∀k v. MEM (k,v) l ⇒ k ≠ q]
|- ∃v. (v = r) ∨ MEM (q,v) l

Number: 23
Status: Unsatisfiable
Info: proof 
Thm list: 
Goal:  [] |- (y = fm ' x) ∧ x ∈ FDOM fm ⇔ x ∈ FDOM fm ∧ (fm ' x = y)

Number: 24
Status: Unsatisfiable
Info: proof 
Thm list: 
Goal: 
[∀l1 l2.
   (alist_to_fmap l1 = alist_to_fmap l2) ⇒
   (alist_to_fmap (ls ++ l1) = alist_to_fmap (ls ++ l2)),
 alist_to_fmap l1 = alist_to_fmap l2]
|- alist_to_fmap (ls ++ l1) |+ (q,r) = alist_to_fmap (ls ++ l2) |+ (q,r)

Number: 25
Status: Unsatisfiable
Info: polymorph proof 
Thm list: 
 [] |- ∀al k v. (ALOOKUP al k = SOME v) ⇒ MEM (k,v) al
Goal:  [¬∃p_2. MEM (k,p_2) ls, ALOOKUP ls k = SOME v] |- fm ' k = v

Number: 26
Status: Unsatisfiable
Info: polymorph proof 
Thm list: 
 [] |- ∀al k v. (ALOOKUP al k = SOME v) ⇒ MEM (k,v) al
Goal:  [¬∃p_2. MEM (k,p_2) ls, ALOOKUP ls k = SOME v] |- k ∈ FDOM fm

