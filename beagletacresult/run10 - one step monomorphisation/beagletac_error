Number: 14
Status: Unknown
Info: bool num proof 
Thm list: 
 [] |- ∀m n. m * n = n * m
 [] |- ∀n q. 0 < n ⇒ (q * n DIV n = q)
 [] |- 0 < 256
Goal: 
[Abbrev (s0 = n2s (256 * s2n s DIV 256)), r0 ≠ 0, ORD c + 1 < 256,
 n2s (s2n s) = s, r0 = ORD c + 1] |- s0 = s

Number: 17
Status: Unknown
Info: num proof 
Thm list: 
 [] |- ∀n q. 0 < n ⇒ (q * n DIV n = q)
 [] |- ∀m n. m * n = n * m
 [] |- 0 < 256
Goal: 
[ORD #"\255" < 256, n2s (s2n s) = s, ORD #"\255" = 255,
 ORD #"\255" + 1 = 256] |- n2s (256 * s2n s DIV 256) = s

Number: 18
Status: Unknown
Info: num proof 
Thm list: 
 [] |- ∀n. s2n (n2s n) = n
Goal:  [] |- (n2s x = n2s y) ⇔ (x = y)

Number: 20
Status: Unknown
Info: num proof 
Thm list: 
 [] |- n2s (s2n s) = s
Goal:  [] |- ∀s. ∃n. s = n2s n

Number: 27
Status: Time out
Info: polymorph lambda-lift bool num higher-order proof 
Thm list: 
 [] |- ∀n l. n < LENGTH l ⇒ ∀f. EL n (MAP f l) = f (EL n l)
Goal: 
[∀k'.
   ALOOKUP ls k' =
   if ∃y'. (k' = FST y') ∧ ∃n. n < LENGTH ls ∧ (y' = EL n ls) then
     SOME (EL (LEAST n. EL n (MAP FST ls) = k') (MAP SND ls))
   else NONE, ∀m'. m' < m ⇒ EL m' (MAP FST ls) ≠ FST (EL n ls),
 ∀m. m < n'' ⇒ EL m (q::MAP FST ls) ≠ FST (EL n ls), q ≠ FST (EL n ls),
 n < m, n < LENGTH ls, EL m (MAP FST ls) = FST (EL n ls),
 EL n'' (q::MAP FST ls) = FST (EL n ls)]
|- EL m (MAP SND ls) = EL n'' (r::MAP SND ls)

Number: 28
Status: Time out
Info: polymorph lambda-lift bool num higher-order proof 
Thm list: 
 [] |- ∀n l. n < LENGTH l ⇒ ∀f. EL n (MAP f l) = f (EL n l)
Goal: 
[∀k'.
   ALOOKUP ls k' =
   if ∃y'. (k' = FST y') ∧ ∃n. n < LENGTH ls ∧ (y' = EL n ls) then
     SOME (EL (LEAST n. EL n (MAP FST ls) = k') (MAP SND ls))
   else NONE, ∀m'. m' < m ⇒ EL m' (MAP FST ls) ≠ FST (EL n ls),
 ∀m. m < z ⇒ EL m (h::MAP FST ls) ≠ FST (EL n ls), ¬(n < m),
 h ≠ FST (EL n ls), EL n (MAP FST ls) ≠ FST (EL n ls), m < LENGTH ls,
 n < LENGTH ls, SUC n < z, FST (EL m ls) = FST (EL n ls),
 EL z (h::MAP FST ls) = FST (EL n ls)]
|- SND (EL m ls) = EL z (r::MAP SND ls)

Number: 29
Status: Time out
Info: polymorph lambda-lift bool num higher-order proof 
Thm list: 
 [] |- ∀n l. n < LENGTH l ⇒ ∀f. EL n (MAP f l) = f (EL n l)
Goal: 
[T,
 ∀k'.
   ALOOKUP ls k' =
   if ∃y'. (k' = FST y') ∧ ∃n. n < LENGTH ls ∧ (y' = EL n ls) then
     SOME (EL (LEAST n. EL n (MAP FST ls) = k') (MAP SND ls))
   else NONE, ∀m'. m' < m ⇒ EL m' (MAP FST ls) ≠ FST (EL n ls),
 ∀m. m < SUC z ⇒ EL m (h::MAP FST ls) ≠ FST (EL n ls), ¬(n < m),
 ¬(n < z), h ≠ FST (EL n ls), EL m (MAP FST ls) ≠ FST (EL n ls), m < z,
 m < LENGTH ls, n < LENGTH ls, z < LENGTH ls,
 FST (EL m ls) = FST (EL n ls), FST (EL z ls) = FST (EL n ls)]
|- SND (EL m ls) = SND (EL z ls)

Number: 30
Status: Time out
Info: polymorph lambda-lift bool num higher-order proof 
Thm list: 
 [] |- ∀n l. n < LENGTH l ⇒ ∀f. EL n (MAP f l) = f (EL n l)
Goal: 
[∀k'.
   ALOOKUP ls k' =
   if ∃y'. (k' = FST y') ∧ ∃n. n < LENGTH ls ∧ (y' = EL n ls) then
     SOME (EL (LEAST n. EL n (MAP FST ls) = k') (MAP SND ls))
   else NONE, ∀m'. m' < m ⇒ EL m' (MAP FST ls) ≠ FST (EL n ls),
 ∀m. m < SUC z ⇒ EL m (h::MAP FST ls) ≠ FST (EL n ls), ¬(m < z),
 ¬(n < m), ¬(n < z), h ≠ FST (EL n ls), m < LENGTH ls, n < LENGTH ls,
 z < m, z < LENGTH ls, FST (EL m ls) = FST (EL n ls),
 FST (EL z ls) = FST (EL n ls)] |- SND (EL m ls) = SND (EL z ls)

Number: 42
Status: Satisfiable
Info: polymorph lambda-lift higher-order proof 
Thm list: 
 [] |- ∀ft r1. relrec h ft r1 ⇒ ∀r2. relrec h ft r2 ⇒ (r1 = r2)
Goal: 
[∀d. d ∈ FDOM fm ⇒ relrec h (fm ' d) (rfm ' d), FDOM rfm = FDOM fm,
 x ∈ FDOM fm] |- rfm ' x = @r. relrec h (fm ' x) r

Number: 44
Status: Unknown
Info: polymorph bool num higher-order proof 
Thm list: 
 [] |- ∀l x. MEM x l ⇔ ∃n. n < LENGTH l ∧ (x = EL n l)
Goal: 
[Abbrev (m1 = LENGTH (FILTER ($= x) l1)),
 Abbrev (m2 = LENGTH (FILTER ($= x) l2)), x' < m1, x' < m2, m1 ≥ m2,
 m2 ≥ m1]
|- MEM (EL x' (FILTER ($= x) l1)) (FILTER ($= x) l1) ∧
   MEM (EL x' (FILTER ($= x) l2)) (FILTER ($= x) l2)

Number: 69
Status: Satisfiable
Info: polymorph bool higher-order proof 
Thm list: 
 [] |- ∀x y. x ∈ {y} ⇔ (x = y)
 [] |- ∀P x. x ∈ P ⇔ P x
Goal:  [] |- ∀x. (x = BIT1C) ⇔ {BIT1C} x

Number: 74
Status: Satisfiable
Info: polymorph bool higher-order proof 
Thm list: 
 [] |- ∀x y. x ∈ {y} ⇔ (x = y)
 [] |- ∀x. x ∈ 𝕌(:α)
 [] |- ∀P x. x ∈ P ⇔ P x
Goal:  [] |- 𝕌 ARB () ⇔ {()} ()

Number: 77
Status: Time out
Info: lambda-lift bool num higher-order proof 
Thm list: 
 [] |- (∀m. m ** 0 = 1) ∧ ∀m n. m ** SUC n = m * m ** n
 [] |- ∀a b c. a ≤ b ∧ c < b ⇒ a + c < 2 * b
Goal:  [∀f. SUM n (λi. SBIT (f i) i) < 2 ** n, SBIT (f n) n ≤ 2 ** n]
|- SBIT (f n) n + SUM n (λi. SBIT (f i) i) < 2 ** SUC n

Number: 78
Status: Unknown
Info: lambda-lift bool num higher-order proof 
Thm list: 
 [] |- ∀n f. SUM n (λi. SBIT (f i) i) < 2 ** n
Goal:  [n ≤ i, BIT i (SUM n (λj. SBIT (f j) j)) ⇔ f i ∧ i < n]
|- SUM n (λi. SBIT (f i) i) < 2 ** n

Number: 85
Status: Parsing failed
Info: lambda-lift bool num higher-order proof 
Thm list: 
 []
|- ∀a b n.
     ¬BIT n a ∨ ¬BIT n b ⇒
     (SBIT (BIT n a ∨ BIT n b) n = SBIT (BIT n a) n + SBIT (BIT n b) n)
 [] |- n < SUC n
Goal: 
[∀a b.
   (∀i. i < n ⇒ ¬BIT i a ∨ ¬BIT i b) ⇒
   (SUM n (λi. SBIT (BIT i a) i) + SUM n (λi. SBIT (BIT i b) i) =
    BITWISE n $\/ a b), ∀i. i < SUC n ⇒ ¬BIT i a ∨ ¬BIT i b]
|- SBIT (BIT n a) n + SBIT (BIT n b) n + BITWISE n $\/ a b =
   SBIT (BIT n a ∨ BIT n b) n + BITWISE n $\/ a b

Number: 99
Status: Unknown
Info: num proof 
Thm list: 
 [] |- ∀b n. n ≠ 0 ∧ n < 2 ** b ⇒ ∃i. i < b ∧ BIT i n
Goal:  [n ≠ 0, n < 2 ** dimindex (:α)] |- ∃i. i < dimindex (:α) ∧ BIT i n

Number: 156
Status: Time out
Info: lambda-lift bool num higher-order proof 
Thm list: 
 []
|- ∀n a b.
     BIT (SUC n) (a + b) ⇔
     if BIT (SUC n) (BITS n 0 a + BITS n 0 b) then
       BIT (SUC n) a ⇔ BIT (SUC n) b
     else BIT (SUC n) a ⇎ BIT (SUC n) b
 []
|- ∀n a b.
     BIT (SUC n) (a + b + 1) ⇔
     if BIT (SUC n) (BITS n 0 a + BITS n 0 b + 1) then
       BIT (SUC n) a ⇔ BIT (SUC n) b
     else BIT (SUC n) a ⇎ BIT (SUC n) b
Goal: 
[∀x y c.
   BSUM i (λi. BIT i x) (λi. BIT i y) c ⇔
   BIT i (x + y + if c then 1 else 0)]
|- ((BIT (SUC i) x ⇔ ¬BIT (SUC i) y) ⇔
    ¬BIT (SUC i) (BITS i 0 x + BITS i 0 y)) ⇔ BIT (SUC i) (x + y)

Number: 157
Status: Time out
Info: lambda-lift bool num higher-order proof 
Thm list: 
 []
|- ∀n a b.
     BIT (SUC n) (a + b) ⇔
     if BIT (SUC n) (BITS n 0 a + BITS n 0 b) then
       BIT (SUC n) a ⇔ BIT (SUC n) b
     else BIT (SUC n) a ⇎ BIT (SUC n) b
 []
|- ∀n a b.
     BIT (SUC n) (a + b + 1) ⇔
     if BIT (SUC n) (BITS n 0 a + BITS n 0 b + 1) then
       BIT (SUC n) a ⇔ BIT (SUC n) b
     else BIT (SUC n) a ⇎ BIT (SUC n) b
Goal: 
[∀x y c.
   BSUM i (λi. BIT i x) (λi. BIT i y) c ⇔
   BIT i (x + y + if c then 1 else 0)]
|- ((BIT (SUC i) x ⇔ ¬BIT (SUC i) y) ⇔
    ¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1)) ⇔
   BIT (SUC i) (x + y + 1)

Number: 158
Status: Unknown
Info: lambda-lift bool num higher-order proof 
Thm list: 
Goal: 
[∀P f.
   (∀j. j < n ⇒ ¬P j) ⇒
   (FOLDL (λa j. a ∨ P j ∧ f j) F (COUNT_LIST n) ⇔ F), ∀j. j < n ⇒ ¬P j,
 ∀j. j < SUC n ⇒ ¬P j] |- ¬FOLDL (λa j. a ∨ P j ∧ f j) F (COUNT_LIST n)

Number: 159
Status: Unknown
Info: lambda-lift bool num higher-order proof 
Thm list: 
Goal: 
[P i,
 ∀f P i.
   i < n ∧ P i ∧ (∀i j. P i ∧ P j ∧ i < n ∧ j < n ⇒ (i = j)) ⇒
   (FOLDL (λa j. a ∨ P j ∧ f j) F (COUNT_LIST n) ⇔ f i),
 ∀i j. P i ∧ P j ∧ i < n ∧ j < n ⇒ (i = j),
 ∀i j. P i ∧ P j ∧ i < SUC n ∧ j < SUC n ⇒ (i = j), i < n, i < SUC n]
|- FOLDL (λa j. a ∨ P j ∧ f j) F (COUNT_LIST n) ⇔ f i

Number: 168
Status: Time out
Info: num proof 
Thm list: 
 [] |- k ≠ 0 ⇒ (j % k % k = j % k)
 [] |- k ≠ 0 ⇒ ((i % k − j % k) % k = (i − j) % k)
Goal: 
[&(2 * INT_MIN (:α)) ≠ 0, n ≠ 0, 0 < dimword (:α),
 n MOD (2 * INT_MIN (:α)) < 2 * INT_MIN (:α), 1 ≤ INT_MIN (:α),
 1 ≤ dimword (:α), i = -&n, dimword (:α) = 2 * INT_MIN (:α), i < 0]
|- (&(2 * INT_MIN (:α)) − &n) % &(2 * INT_MIN (:α)) =
   (&(2 * INT_MIN (:α)) − &n % &(2 * INT_MIN (:α))) %
   &(2 * INT_MIN (:α))

Number: 206
Status: Satisfiable
Info: polymorph lambda-lift higher-order proof 
Thm list: 
 []
|- ∀f. ∃g. ∀x. g x = case f x of NONE => [||] | SOME (a,b) => b:::g a
Goal:  []
|- ∃LUNFOLD.
     ∀f x.
       LUNFOLD f x =
       case f x of NONE => [||] | SOME (v1,v2) => v2:::LUNFOLD f v1

Number: 214
Status: Unknown
Info: polymorph num proof 
Thm list: 
 []
|- llength_rel [||] 0 ∧
   ∀h n t. llength_rel t n ⇒ llength_rel (h:::t) (SUC n)
Goal:  [llength_rel t n] |- ∃n. llength_rel (h:::t) n

Number: 217
Status: Unknown
Info: polymorph num proof 
Thm list: 
 [] |- ∀t. LFINITE t ⇒ ∃n. llength_rel t n
Goal:  [LFINITE t] |- ∃n. llength_rel t n

Number: 224
Status: Unknown
Info: num higher-order proof 
Thm list: 
Goal:  []
|- (∀ll. exists P ll ⇒ ∃n a t. (LDROP n ll = SOME (a:::t)) ∧ P a) ⇒
   exists P ll ⇒
   ∃n a t. (LDROP n ll = SOME (a:::t)) ∧ P a

Number: 228
Status: Unknown
Info: num proof 
Thm list: 
 [] |- ∀m. (m = 0) ∨ ∃n. m = SUC n
Goal: 
[P n, P p, P (SUC n'), ∀m. m < n' ⇒ ¬P (SUC m), ∀m. m < p ⇒ ¬P m, ¬P 0,
 ¬(SUC n' < p), p < SUC n'] |- ∃p0. p = SUC p0

Number: 232
Status: Time out
Info: polymorph lambda-lift bool num higher-order proof 
Thm list: 
 [] |- ∀l. exists P l ⇔ ∃n e. (SOME e = LNTH n l) ∧ P e
Goal: 
[∀x.
   (case
      if exists P x then
        (let n = LEAST n. ∃e. (SOME e = LNTH n x) ∧ P e
         in
           SOME (THE (LDROP (SUC n) x),THE (LNTH n x)))
      else NONE
    of
      NONE => [||]
    | SOME (a,b) => b:::g P a) =
   g P x, ¬P h, exists P t] |- ∃m e. (SOME e = LNTH m t) ∧ P e

Number: 233
Status: Parsing failed
Info: polymorph lambda-lift bool num higher-order proof 
Thm list: 
 [] |- ∀x y. (SOME x = SOME y) ⇔ (x = y)
 []
|- (∀n. LNTH n [||] = NONE) ∧ (∀h t. LNTH 0 (h:::t) = SOME h) ∧
   ∀n h t. LNTH (SUC n) (h:::t) = LNTH n t
Goal: 
[P e, P h,
 ∀x.
   (case
      if exists P x then
        (let n = LEAST n. ∃e. (SOME e = LNTH n x) ∧ P e
         in
           SOME (THE (LDROP (SUC n) x),THE (LNTH n x)))
      else NONE
    of
      NONE => [||]
    | SOME (a,b) => b:::g P a) =
   g P x, ∀m. m < n ⇒ ∀e. SOME e ≠ LNTH m (h:::t) ∨ ¬P e, n ≠ 0, 0 < n,
 SOME e = LNTH n (h:::t)] |- F

Number: 234
Status: Time out
Info: polymorph lambda-lift bool num higher-order proof 
Thm list: 
 [] |- ∀l. (l = [||]) ∨ ∃h t. l = h:::t
 [] |- (every P [||] ⇔ T) ∧ (every P (h:::t) ⇔ P h ∧ every P t)
Goal: 
[∀x.
   LHD (g x) =
   OPTION_MAP SND
     ((λll.
         if every ($= [||]) ll then NONE
         else
           (let n = LEAST n. ∃e. (SOME e = LNTH n ll) ∧ e ≠ [||] in
            let nlist = THE (LNTH n ll)
            in
              SOME
                (THE (LTL nlist):::THE (LDROP (SUC n) ll),
                 THE (LHD nlist)))) x),
 ∀x.
   LTL (g x) =
   OPTION_MAP (g o FST)
     ((λll.
         if every ($= [||]) ll then NONE
         else
           (let n = LEAST n. ∃e. (SOME e = LNTH n ll) ∧ e ≠ [||] in
            let nlist = THE (LNTH n ll)
            in
              SOME
                (THE (LTL nlist):::THE (LDROP (SUC n) ll),
                 THE (LHD nlist)))) x), ¬every ($= [||]) ll]
|- ∃h t. ll = h:::t

Number: 246
Status: Time out
Info: lambda-lift bool higher-order proof 
Thm list: 
Goal: 
[∀x y z. (x,y) ∈ lo ∧ (y,z) ∈ lo ⇒ (x,z) ∈ lo,
 ∀x y. x ∈ X ∧ y ∈ X ⇒ (x,y) ∈ lo ∨ (y,x) ∈ lo,
 ∀x y. (x,y) ∈ lo ∧ (y,x) ∈ lo ⇒ (x = y),
 ∀x. x ∈ X ∧ (∀x''. x'' ∈ X ∧ (x'',x) ∈ lo ⇒ (x = x'')) ⇔ (x = x'),
 ∀s'.
   s' ⊂ {y | (y,x) ∈ lo} ⇒
   ∀lo' X' x''.
     x'' ∈ X' ∧ (∀x'''. x''' ∈ s' ⇔ (x''',x'') ∈ lo') ∧
     (domain lo' ⊆ X' ∧ range lo' ⊆ X' ∧
      (∀x y z. (x,y) ∈ lo' ∧ (y,z) ∈ lo' ⇒ (x,z) ∈ lo') ∧
      (∀x y. (x,y) ∈ lo' ∧ (y,x) ∈ lo' ⇒ (x = y)) ∧
      ∀x y. x ∈ X' ∧ y ∈ X' ⇒ (x,y) ∈ lo' ∨ (y,x) ∈ lo') ∧
     finite_prefixes lo' X' ⇒
     ∃i. LNTH i (LUNFOLD linear_order_to_list_f lo') = SOME x'',
 FINITE {y | (y,x) ∈ lo}, x ∈ X, domain lo ⊆ X, range lo ⊆ X,
 finite_prefixes lo X]
|- ∃x''. (x'',x) ∈ lo ∧ (x'' ∈ X ∧ x'' ≠ x') ∧ x ≠ x' ⇎ (x'',x) ∈ lo

Number: 247
Status: Time out
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 []
|- ∀r s s'. linear_order r s ∧ s' ⊆ s ⇒ linear_order (rrestrict r s') s'
Goal: 
[∀s'.
   s' ⊂ {y | (y,x) ∈ lo} ⇒
   ∀lo X x.
     x ∈ X ∧ (s' = {y | (y,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i. LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x,
 FINITE {y | (y,x) ∈ lo}, minimal_elements X lo = {x'}, x ∈ X,
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, X DIFF minimal_elements X lo ⊆ X,
 finite_prefixes lo X, linear_order lo X]
|- linear_order (rrestrict lo (X DIFF minimal_elements X lo))
     (X DIFF minimal_elements X lo)

Number: 248
Status: Time out
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 []
|- ∀r s s'.
     finite_prefixes r s ∧ s' ⊆ s ⇒
     finite_prefixes r s' ∧ finite_prefixes (rrestrict r s') s'
Goal: 
[∀s'.
   s' ⊂ {y | (y,x) ∈ lo} ⇒
   ∀lo X x.
     x ∈ X ∧ (s' = {y | (y,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i. LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x,
 FINITE {y | (y,x) ∈ lo}, minimal_elements X lo = {x'}, x ∈ X,
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, X DIFF minimal_elements X lo ⊆ X,
 finite_prefixes lo X, linear_order lo X,
 linear_order (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
     (X DIFF minimal_elements X lo)

Number: 249
Status: Unknown
Info: lambda-lift bool num higher-order proof 
Thm list: 
Goal: 
[∀s'.
   s' ⊂ {y | (y,x) ∈ lo} ⇒
   ∀lo X x.
     x ∈ X ∧ (s' = {y | (y,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i. LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x,
 FINITE {y | (y,x) ∈ lo}, ¬(x ∉ X DIFF minimal_elements X lo),
 minimal_elements X lo = {x'}, x ∈ X,
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, X DIFF minimal_elements X lo ⊆ X,
 finite_prefixes lo X,
 finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo), linear_order lo X,
 linear_order (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- ∃i.
     LNTH i
       (LUNFOLD linear_order_to_list_f
          (rrestrict lo (X DIFF minimal_elements X lo))) =
     SOME x

Number: 250
Status: Time out
Info: lambda-lift bool num higher-order proof 
Thm list: 
Goal: 
[T,
 ∀x' y.
   (x' ∈ X ∧ x' ∉ minimal_elements X lo) ∧ y ∈ X ∧
   y ∉ minimal_elements X lo ⇒
   (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo) ∨
   (y,x') ∈ rrestrict lo (X DIFF minimal_elements X lo),
 ∀x y. x ∈ X ∧ y ∈ X ⇒ (x,y) ∈ lo ∨ (y,x) ∈ lo,
 ∀x''. x'' ∈ minimal_elements X lo ⇔ (x'' = x'),
 ∀x''. (∃x. (x,x'') ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃x. (x,x') ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀x''. (∃y. (x'',y) ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃y. (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀s'.
   s' ⊂ {y | (y,x) ∈ lo} ⇒
   ∀lo' X' x''.
     x'' ∈ X' ∧ (∀x'''. x''' ∈ s' ⇔ (x''',x'') ∈ lo') ∧
     ((∀x''. (∃y. (x'',y) ∈ lo') ⇒ x'' ∈ X') ∧
      (∀x''. (∃x. (x,x'') ∈ lo') ⇒ x'' ∈ X') ∧ transitive lo' ∧
      antisym lo' ∧ ∀x y. x ∈ X' ∧ y ∈ X' ⇒ (x,y) ∈ lo' ∨ (y,x) ∈ lo') ∧
     finite_prefixes lo' X' ⇒
     ∃i. LNTH i (LUNFOLD linear_order_to_list_f lo') = SOME x'',
 FINITE {y | (y,x) ∈ lo}, antisym lo,
 antisym (rrestrict lo (X DIFF minimal_elements X lo)), transitive lo,
 transitive (rrestrict lo (X DIFF minimal_elements X lo)),
 x ∉ minimal_elements X lo,
 LNTH i
   (LUNFOLD linear_order_to_list_f
      (rrestrict lo (X DIFF minimal_elements X lo))) =
 SOME x, x ∈ X, x'' ∈ minimal_elements (domain lo ∪ range lo) lo,
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, finite_prefixes lo X,
 finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- ∀x'''. (∃y. (x''',y) ∈ lo) ∨ (∃x. (x,x''') ∈ lo) ⇔ x''' ∈ X

Number: 251
Status: Time out
Info: lambda-lift bool num higher-order proof 
Thm list: 
Goal: 
[T,
 ∀x' y.
   (x' ∈ X ∧ x' ∉ minimal_elements X lo) ∧ y ∈ X ∧
   y ∉ minimal_elements X lo ⇒
   (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo) ∨
   (y,x') ∈ rrestrict lo (X DIFF minimal_elements X lo),
 ∀x y. x ∈ X ∧ y ∈ X ⇒ (x,y) ∈ lo ∨ (y,x) ∈ lo,
 ∀x. x ∉ minimal_elements (domain lo ∪ range lo) lo,
 ∀x''. x'' ∈ minimal_elements X lo ⇔ (x'' = x'),
 ∀x''. (∃x. (x,x'') ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃x. (x,x') ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀x''. (∃y. (x'',y) ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃y. (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀s'.
   s' ⊂ {y | (y,x) ∈ lo} ⇒
   ∀lo' X' x''.
     x'' ∈ X' ∧ (∀x'''. x''' ∈ s' ⇔ (x''',x'') ∈ lo') ∧
     ((∀x''. (∃y. (x'',y) ∈ lo') ⇒ x'' ∈ X') ∧
      (∀x''. (∃x. (x,x'') ∈ lo') ⇒ x'' ∈ X') ∧ transitive lo' ∧
      antisym lo' ∧ ∀x y. x ∈ X' ∧ y ∈ X' ⇒ (x,y) ∈ lo' ∨ (y,x) ∈ lo') ∧
     finite_prefixes lo' X' ⇒
     ∃i. LNTH i (LUNFOLD linear_order_to_list_f lo') = SOME x'',
 FINITE {y | (y,x) ∈ lo}, antisym lo,
 antisym (rrestrict lo (X DIFF minimal_elements X lo)), transitive lo,
 transitive (rrestrict lo (X DIFF minimal_elements X lo)),
 x ∉ minimal_elements X lo,
 LNTH i
   (LUNFOLD linear_order_to_list_f
      (rrestrict lo (X DIFF minimal_elements X lo))) =
 SOME x, x ∈ X,
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, finite_prefixes lo X,
 finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- ∀x''. (∃y. (x'',y) ∈ lo) ∨ (∃x. (x,x'') ∈ lo) ⇔ x'' ∈ X

Number: 252
Status: Time out
Info: lambda-lift bool num higher-order proof 
Thm list: 
Goal: 
[T,
 ∀s'.
   s' ⊂ {y | (y,x) ∈ lo} ⇒
   ∀lo X x.
     x ∈ X ∧ (s' = {y | (y,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i. LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x,
 FINITE {y | (y,x) ∈ lo}, minimal_elements X lo ≠ ∅,
 x ∉ minimal_elements X lo, domain lo ∪ range lo = X,
 minimal_elements X lo = {x'},
 LNTH i
   (LUNFOLD linear_order_to_list_f
      (rrestrict lo (X DIFF minimal_elements X lo))) =
 SOME x, x ∈ X,
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, finite_prefixes lo X,
 finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo), linear_order lo X,
 linear_order (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- LNTH i
     (LUNFOLD linear_order_to_list_f (rrestrict lo (X DIFF {x'}))) =
   SOME x

Number: 253
Status: Time out
Info: lambda-lift bool higher-order proof 
Thm list: 
Goal: 
[T,
 ∀x' y.
   (x' ∈ X ∧ x' ∉ minimal_elements X lo) ∧ y ∈ X ∧
   y ∉ minimal_elements X lo ⇒
   (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo) ∨
   (y,x') ∈ rrestrict lo (X DIFF minimal_elements X lo),
 ∀x y. x ∈ X ∧ y ∈ X ⇒ (x,y) ∈ lo ∨ (y,x) ∈ lo,
 ∀x''. x'' ∈ minimal_elements X lo ⇔ (x'' = x'),
 ∀x''. (∃x. (x,x'') ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃x. (x,x') ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀x''. (∃y. (x'',y) ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃y. (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀s'.
   s' ⊂ {y | (y,x) ∈ lo} ⇒
   ∀lo' X' x''.
     x'' ∈ X' ∧ (∀x'''. x''' ∈ s' ⇔ (x''',x'') ∈ lo') ∧
     ((∀x''. (∃y. (x'',y) ∈ lo') ⇒ x'' ∈ X') ∧
      (∀x''. (∃x. (x,x'') ∈ lo') ⇒ x'' ∈ X') ∧ transitive lo' ∧
      antisym lo' ∧ ∀x y. x ∈ X' ∧ y ∈ X' ⇒ (x,y) ∈ lo' ∨ (y,x) ∈ lo') ∧
     finite_prefixes lo' X' ⇒
     ∃i. LNTH i (LUNFOLD linear_order_to_list_f lo') = SOME x'',
 FINITE {y | (y,x) ∈ lo}, antisym lo,
 antisym (rrestrict lo (X DIFF minimal_elements X lo)), transitive lo,
 transitive (rrestrict lo (X DIFF minimal_elements X lo)), x ∈ X,
 x ∈ minimal_elements X lo,
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, finite_prefixes lo X,
 finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- ∀x''. (∃y. (x'',y) ∈ lo) ∨ (∃x. (x,x'') ∈ lo) ⇔ x'' ∈ X

Number: 254
Status: Time out
Info: lambda-lift bool higher-order proof 
Thm list: 
Goal: 
[T,
 ∀x' y.
   (x' ∈ X ∧ x' ∉ minimal_elements X lo) ∧ y ∈ X ∧
   y ∉ minimal_elements X lo ⇒
   (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo) ∨
   (y,x') ∈ rrestrict lo (X DIFF minimal_elements X lo),
 ∀x y. x ∈ X ∧ y ∈ X ⇒ (x,y) ∈ lo ∨ (y,x) ∈ lo,
 ∀x''. x'' ∈ minimal_elements X lo ⇔ (x'' = x'),
 ∀x''. (∃x. (x,x'') ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃x. (x,x') ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀x''. (∃y. (x'',y) ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃y. (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀s'.
   s' ⊂ {y | (y,x) ∈ lo} ⇒
   ∀lo' X' x''.
     x'' ∈ X' ∧ (∀x'''. x''' ∈ s' ⇔ (x''',x'') ∈ lo') ∧
     ((∀x''. (∃y. (x'',y) ∈ lo') ⇒ x'' ∈ X') ∧
      (∀x''. (∃x. (x,x'') ∈ lo') ⇒ x'' ∈ X') ∧ transitive lo' ∧
      antisym lo' ∧ ∀x y. x ∈ X' ∧ y ∈ X' ⇒ (x,y) ∈ lo' ∨ (y,x) ∈ lo') ∧
     finite_prefixes lo' X' ⇒
     ∃i. LNTH i (LUNFOLD linear_order_to_list_f lo') = SOME x'',
 FINITE {y | (y,x) ∈ lo}, antisym lo,
 antisym (rrestrict lo (X DIFF minimal_elements X lo)), transitive lo,
 transitive (rrestrict lo (X DIFF minimal_elements X lo)), x ∉ X, x ∈ X,
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, finite_prefixes lo X,
 finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- ∀x''. (∃y. (x'',y) ∈ lo) ∨ (∃x. (x,x'') ∈ lo) ⇔ x'' ∈ X

Number: 255
Status: Time out
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 [] |- ∀x y. x ∈ {y} ⇔ (x = y)
Goal: 
[T,
 ∀s'.
   s' ⊂ {y | (y,x) ∈ lo} ⇒
   ∀lo X x.
     x ∈ X ∧ (s' = {y | (y,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i. LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x,
 FINITE {y | (y,x) ∈ lo},
 minimal_elements (domain lo ∪ range lo) lo = {x'}, x ∈ range lo,
 x ∈ minimal_elements (domain lo ∪ range lo) lo,
 {y |
  (y,x) ∈
  rrestrict lo
    (domain lo ∪ range lo DIFF
     minimal_elements (domain lo ∪ range lo) lo)} ⊂ {y | (y,x) ∈ lo},
 finite_prefixes lo (domain lo ∪ range lo),
 finite_prefixes
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo),
 linear_order lo (domain lo ∪ range lo),
 linear_order
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo)] |- x' = x

Number: 256
Status: Time out
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 [] |- ∀x y. x ∈ {y} ⇔ (x = y)
Goal: 
[T,
 ∀s'.
   s' ⊂ {y | (y,x) ∈ lo} ⇒
   ∀lo X x.
     x ∈ X ∧ (s' = {y | (y,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i. LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x,
 FINITE {y | (y,x) ∈ lo}, x ∉ domain lo, x ∉ range lo,
 minimal_elements (domain lo ∪ range lo) lo = {x'}, x ∈ range lo,
 {y |
  (y,x) ∈
  rrestrict lo
    (domain lo ∪ range lo DIFF
     minimal_elements (domain lo ∪ range lo) lo)} ⊂ {y | (y,x) ∈ lo},
 finite_prefixes lo (domain lo ∪ range lo),
 finite_prefixes
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo),
 linear_order lo (domain lo ∪ range lo),
 linear_order
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo)] |- x' = x

Number: 257
Status: Time out
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 [] |- ∀x y. x ∈ {y} ⇔ (x = y)
Goal: 
[T,
 ∀s'.
   s' ⊂ {y | (y,x) ∈ lo} ⇒
   ∀lo X x.
     x ∈ X ∧ (s' = {y | (y,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i. LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x,
 FINITE {y | (y,x) ∈ lo},
 minimal_elements (domain lo ∪ range lo) lo = {x'}, x ∈ domain lo,
 x ∈ minimal_elements (domain lo ∪ range lo) lo,
 {y |
  (y,x) ∈
  rrestrict lo
    (domain lo ∪ range lo DIFF
     minimal_elements (domain lo ∪ range lo) lo)} ⊂ {y | (y,x) ∈ lo},
 finite_prefixes lo (domain lo ∪ range lo),
 finite_prefixes
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo),
 linear_order lo (domain lo ∪ range lo),
 linear_order
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo)] |- x' = x

Number: 258
Status: Time out
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 [] |- ∀x y. x ∈ {y} ⇔ (x = y)
Goal: 
[T,
 ∀s'.
   s' ⊂ {y | (y,x) ∈ lo} ⇒
   ∀lo X x.
     x ∈ X ∧ (s' = {y | (y,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i. LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x,
 FINITE {y | (y,x) ∈ lo}, x ∉ domain lo, x ∉ range lo,
 minimal_elements (domain lo ∪ range lo) lo = {x'}, x ∈ domain lo,
 {y |
  (y,x) ∈
  rrestrict lo
    (domain lo ∪ range lo DIFF
     minimal_elements (domain lo ∪ range lo) lo)} ⊂ {y | (y,x) ∈ lo},
 finite_prefixes lo (domain lo ∪ range lo),
 finite_prefixes
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo),
 linear_order lo (domain lo ∪ range lo),
 linear_order
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo)] |- x' = x

Number: 264
Status: Time out
Info: lambda-lift bool higher-order proof 
Thm list: 
Goal: 
[∀x y. x ∈ X ∧ y ∈ X ⇒ (x,y) ∈ lo ∨ (y,x) ∈ lo,
 ∀x. (∃x'. (x',x) ∈ lo) ⇒ x ∈ X, ∀x. (∃y. (x,y) ∈ lo) ⇒ x ∈ X,
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo' X' x' y'.
     (x',y') ∈ lo' ∧ (s' = {z | (z,x') ∈ lo'}) ∧
     ((∀x'. (∃y. (x',y) ∈ lo') ⇒ x' ∈ X') ∧
      (∀x'. (∃x. (x,x') ∈ lo') ⇒ x' ∈ X') ∧ transitive lo' ∧
      antisym lo' ∧ ∀x y. x ∈ X' ∧ y ∈ X' ⇒ (x,y) ∈ lo' ∨ (y,x) ∈ lo') ∧
     finite_prefixes lo' X' ⇒
     ∃i j.
       i ≤ j ∧ (LNTH i (LUNFOLD linear_order_to_list_f lo') = SOME x') ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo') = SOME y'),
 FINITE {z | (z,x) ∈ lo}, antisym lo, transitive lo, (x,y) ∈ lo,
 finite_prefixes lo X] |- x ∈ X ∧ y ∈ X

Number: 266
Status: Undefined
Info: lambda-lift bool higher-order proof 
Thm list: 
Goal: 
[∀x y z. (x,y) ∈ lo ∧ (y,z) ∈ lo ⇒ (x,z) ∈ lo,
 ∀x y. x ∈ X ∧ y ∈ X ⇒ (x,y) ∈ lo ∨ (y,x) ∈ lo,
 ∀x y. (x,y) ∈ lo ∧ (y,x) ∈ lo ⇒ (x = y),
 ∀x. x ∈ X ∧ (∀x''. x'' ∈ X ∧ (x'',x) ∈ lo ⇒ (x = x'')) ⇔ (x = x'),
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo' X' x'' y'.
     (x'',y') ∈ lo' ∧ (∀x'''. x''' ∈ s' ⇔ (x''',x'') ∈ lo') ∧
     (domain lo' ⊆ X' ∧ range lo' ⊆ X' ∧
      (∀x y z. (x,y) ∈ lo' ∧ (y,z) ∈ lo' ⇒ (x,z) ∈ lo') ∧
      (∀x y. (x,y) ∈ lo' ∧ (y,x) ∈ lo' ⇒ (x = y)) ∧
      ∀x y. x ∈ X' ∧ y ∈ X' ⇒ (x,y) ∈ lo' ∨ (y,x) ∈ lo') ∧
     finite_prefixes lo' X' ⇒
     ∃i j.
       i ≤ j ∧
       (LNTH i (LUNFOLD linear_order_to_list_f lo') = SOME x'') ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo') = SOME y'),
 FINITE {z | (z,x) ∈ lo}, x ∈ X, y ∈ X, (x,y) ∈ lo, domain lo ⊆ X,
 range lo ⊆ X, finite_prefixes lo X]
|- ∃x''. (x'',x) ∈ lo ∧ (x'' ∈ X ∧ x'' ≠ x') ∧ x ≠ x' ⇎ (x'',x) ∈ lo

Number: 267
Status: Undefined
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 []
|- ∀r s s'. linear_order r s ∧ s' ⊆ s ⇒ linear_order (rrestrict r s') s'
Goal: 
[∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo X x y.
     (x,y) ∈ lo ∧ (s' = {z | (z,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i j.
       i ≤ j ∧ (LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x) ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo) = SOME y),
 FINITE {z | (z,x) ∈ lo}, minimal_elements X lo = {x'}, x ∈ X, y ∈ X,
 (x,y) ∈ lo,
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, X DIFF minimal_elements X lo ⊆ X,
 finite_prefixes lo X, linear_order lo X]
|- linear_order (rrestrict lo (X DIFF minimal_elements X lo))
     (X DIFF minimal_elements X lo)

Number: 268
Status: Undefined
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 []
|- ∀r s s'.
     finite_prefixes r s ∧ s' ⊆ s ⇒
     finite_prefixes r s' ∧ finite_prefixes (rrestrict r s') s'
Goal: 
[∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo X x y.
     (x,y) ∈ lo ∧ (s' = {z | (z,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i j.
       i ≤ j ∧ (LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x) ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo) = SOME y),
 FINITE {z | (z,x) ∈ lo}, minimal_elements X lo = {x'}, x ∈ X, y ∈ X,
 (x,y) ∈ lo,
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, X DIFF minimal_elements X lo ⊆ X,
 finite_prefixes lo X, linear_order lo X,
 linear_order (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
     (X DIFF minimal_elements X lo)

Number: 269
Status: Undefined
Info: lambda-lift bool higher-order proof 
Thm list: 
Goal: 
[T,
 ∀x''.
   x'' ∈ X ∧ (∀x'. x' ∈ X ∧ (x',x'') ∈ lo ⇒ (x'' = x')) ⇔ (x'' = x'),
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo' X' x'' y'.
     (x'',y') ∈ lo' ∧ (∀x'''. x''' ∈ s' ⇔ (x''',x'') ∈ lo') ∧
     linear_order lo' X' ∧ finite_prefixes lo' X' ⇒
     ∃i j.
       i ≤ j ∧
       (LNTH i (LUNFOLD linear_order_to_list_f lo') = SOME x'') ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo') = SOME y'),
 FINITE {z | (z,x) ∈ lo}, x ≠ x'', x ∈ X, x'' ∈ X, y ∈ X, (x,y) ∈ lo,
 (x'',x) ∈ lo,
 {y |
  (y,x) ∈
  rrestrict lo
    (X DIFF {x | x ∈ X ∧ ∀x'. x' ∈ X ∧ (x',x) ∈ lo ⇒ (x = x')})} ⊂
 {y | (y,x) ∈ lo}, finite_prefixes lo X,
 finite_prefixes
   (rrestrict lo
      (X DIFF {x | x ∈ X ∧ ∀x'. x' ∈ X ∧ (x',x) ∈ lo ⇒ (x = x')}))
   (X DIFF {x | x ∈ X ∧ ∀x'. x' ∈ X ∧ (x',x) ∈ lo ⇒ (x = x')}),
 linear_order lo X,
 linear_order
   (rrestrict lo
      (X DIFF {x | x ∈ X ∧ ∀x'. x' ∈ X ∧ (x',x) ∈ lo ⇒ (x = x')}))
   (X DIFF {x | x ∈ X ∧ ∀x'. x' ∈ X ∧ (x',x) ∈ lo ⇒ (x = x')})]
|- y ≠ x'

Number: 270
Status: Parsing failed
Info: lambda-lift bool higher-order proof 
Thm list: 
Goal: 
[T,
 ∀x''.
   x'' ∈ X ∧ (∀x'. x' ∈ X ∧ (x',x'') ∈ lo ⇒ (x'' = x')) ⇔ (x'' = x'),
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo' X' x'' y'.
     (x'',y') ∈ lo' ∧ (∀x'''. x''' ∈ s' ⇔ (x''',x'') ∈ lo') ∧
     linear_order lo' X' ∧ finite_prefixes lo' X' ⇒
     ∃i j.
       i ≤ j ∧
       (LNTH i (LUNFOLD linear_order_to_list_f lo') = SOME x'') ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo') = SOME y'),
 FINITE {z | (z,x) ∈ lo}, x ∉ X, x ∈ X, y ∈ X, (x,y) ∈ lo,
 {y |
  (y,x) ∈
  rrestrict lo
    (X DIFF {x | x ∈ X ∧ ∀x'. x' ∈ X ∧ (x',x) ∈ lo ⇒ (x = x')})} ⊂
 {y | (y,x) ∈ lo}, finite_prefixes lo X,
 finite_prefixes
   (rrestrict lo
      (X DIFF {x | x ∈ X ∧ ∀x'. x' ∈ X ∧ (x',x) ∈ lo ⇒ (x = x')}))
   (X DIFF {x | x ∈ X ∧ ∀x'. x' ∈ X ∧ (x',x) ∈ lo ⇒ (x = x')}),
 linear_order lo X,
 linear_order
   (rrestrict lo
      (X DIFF {x | x ∈ X ∧ ∀x'. x' ∈ X ∧ (x',x) ∈ lo ⇒ (x = x')}))
   (X DIFF {x | x ∈ X ∧ ∀x'. x' ∈ X ∧ (x',x) ∈ lo ⇒ (x = x')})]
|- y ≠ x'

Number: 271
Status: Parsing failed
Info: lambda-lift bool num higher-order proof 
Thm list: 
Goal: 
[∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo X x y.
     (x,y) ∈ lo ∧ (s' = {z | (z,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i j.
       i ≤ j ∧ (LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x) ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo) = SOME y),
 FINITE {z | (z,x) ∈ lo}, ¬(x ∉ X DIFF minimal_elements X lo),
 y ∉ minimal_elements X lo, minimal_elements X lo = {x'}, x ∈ X, y ∈ X,
 (x,y) ∈ lo, (x,y) ∈ rrestrict lo (X DIFF minimal_elements X lo),
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, X DIFF minimal_elements X lo ⊆ X,
 finite_prefixes lo X,
 finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo), linear_order lo X,
 linear_order (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- ∃i j.
     i ≤ j ∧
     (LNTH i
        (LUNFOLD linear_order_to_list_f
           (rrestrict lo (X DIFF minimal_elements X lo))) =
      SOME x) ∧
     (LNTH j
        (LUNFOLD linear_order_to_list_f
           (rrestrict lo (X DIFF minimal_elements X lo))) =
      SOME y)

Number: 272
Status: Undefined
Info: lambda-lift bool num higher-order proof 
Thm list: 
Goal: 
[T,
 ∀x' y'.
   (x' ∈ X ∧ x' ∉ minimal_elements X lo) ∧ y' ∈ X ∧
   y' ∉ minimal_elements X lo ⇒
   (x',y') ∈ rrestrict lo (X DIFF minimal_elements X lo) ∨
   (y',x') ∈ rrestrict lo (X DIFF minimal_elements X lo),
 ∀x y. x ∈ X ∧ y ∈ X ⇒ (x,y) ∈ lo ∨ (y,x) ∈ lo,
 ∀x''. x'' ∈ minimal_elements X lo ⇔ (x'' = x'),
 ∀x''. (∃x. (x,x'') ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃x. (x,x') ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀x''. (∃y. (x'',y) ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃y. (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo' X' x'' y'.
     (x'',y') ∈ lo' ∧ (∀x'''. x''' ∈ s' ⇔ (x''',x'') ∈ lo') ∧
     ((∀x''. (∃y. (x'',y) ∈ lo') ⇒ x'' ∈ X') ∧
      (∀x''. (∃x. (x,x'') ∈ lo') ⇒ x'' ∈ X') ∧ transitive lo' ∧
      antisym lo' ∧ ∀x y. x ∈ X' ∧ y ∈ X' ⇒ (x,y) ∈ lo' ∨ (y,x) ∈ lo') ∧
     finite_prefixes lo' X' ⇒
     ∃i j.
       i ≤ j ∧
       (LNTH i (LUNFOLD linear_order_to_list_f lo') = SOME x'') ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo') = SOME y'),
 Abbrev (∀x. x ∈ min ⇔ x ∈ minimal_elements (domain lo ∪ range lo) lo),
 FINITE {z | (z,x) ∈ lo}, antisym lo,
 antisym (rrestrict lo (X DIFF minimal_elements X lo)), transitive lo,
 transitive (rrestrict lo (X DIFF minimal_elements X lo)),
 x ∉ minimal_elements X lo, y ∉ minimal_elements X lo, i ≤ j,
 LNTH i
   (LUNFOLD linear_order_to_list_f
      (rrestrict lo (X DIFF minimal_elements X lo))) =
 SOME x,
 LNTH j
   (LUNFOLD linear_order_to_list_f
      (rrestrict lo (X DIFF minimal_elements X lo))) =
 SOME y, x ∈ X, x'' ∈ min, y ∈ X, (x,y) ∈ lo,
 (x,y) ∈ rrestrict lo (X DIFF minimal_elements X lo),
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, finite_prefixes lo X,
 finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- ∀x'''. (∃y. (x''',y) ∈ lo) ∨ (∃x. (x,x''') ∈ lo) ⇔ x''' ∈ X

Number: 273
Status: Parsing failed
Info: lambda-lift bool num higher-order proof 
Thm list: 
Goal: 
[T,
 ∀x' y'.
   (x' ∈ X ∧ x' ∉ minimal_elements X lo) ∧ y' ∈ X ∧
   y' ∉ minimal_elements X lo ⇒
   (x',y') ∈ rrestrict lo (X DIFF minimal_elements X lo) ∨
   (y',x') ∈ rrestrict lo (X DIFF minimal_elements X lo),
 ∀x y. x ∈ X ∧ y ∈ X ⇒ (x,y) ∈ lo ∨ (y,x) ∈ lo,
 ∀x''. x'' ∈ minimal_elements X lo ⇔ (x'' = x'),
 ∀x''. (∃x. (x,x'') ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃x. (x,x') ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀x''. (∃y. (x'',y) ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃y. (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo' X' x'' y'.
     (x'',y') ∈ lo' ∧ (∀x'''. x''' ∈ s' ⇔ (x''',x'') ∈ lo') ∧
     ((∀x''. (∃y. (x'',y) ∈ lo') ⇒ x'' ∈ X') ∧
      (∀x''. (∃x. (x,x'') ∈ lo') ⇒ x'' ∈ X') ∧ transitive lo' ∧
      antisym lo' ∧ ∀x y. x ∈ X' ∧ y ∈ X' ⇒ (x,y) ∈ lo' ∨ (y,x) ∈ lo') ∧
     finite_prefixes lo' X' ⇒
     ∃i j.
       i ≤ j ∧
       (LNTH i (LUNFOLD linear_order_to_list_f lo') = SOME x'') ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo') = SOME y'),
 Abbrev (∀x. x ∉ minimal_elements (domain lo ∪ range lo) lo),
 FINITE {z | (z,x) ∈ lo}, antisym lo,
 antisym (rrestrict lo (X DIFF minimal_elements X lo)), transitive lo,
 transitive (rrestrict lo (X DIFF minimal_elements X lo)),
 x ∉ minimal_elements X lo, y ∉ minimal_elements X lo, i ≤ j,
 LNTH i
   (LUNFOLD linear_order_to_list_f
      (rrestrict lo (X DIFF minimal_elements X lo))) =
 SOME x,
 LNTH j
   (LUNFOLD linear_order_to_list_f
      (rrestrict lo (X DIFF minimal_elements X lo))) =
 SOME y, x ∈ X, y ∈ X, (x,y) ∈ lo,
 (x,y) ∈ rrestrict lo (X DIFF minimal_elements X lo),
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, finite_prefixes lo X,
 finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- ∀x''. (∃y. (x'',y) ∈ lo) ∨ (∃x. (x,x'') ∈ lo) ⇔ x'' ∈ X

Number: 274
Status: Undefined
Info: lambda-lift bool num higher-order proof 
Thm list: 
Goal: 
[T,
 ∀x' y'.
   (x' ∈ X ∧ x' ∉ minimal_elements X lo) ∧ y' ∈ X ∧
   y' ∉ minimal_elements X lo ⇒
   (x',y') ∈ rrestrict lo (X DIFF minimal_elements X lo) ∨
   (y',x') ∈ rrestrict lo (X DIFF minimal_elements X lo),
 ∀x y. x ∈ X ∧ y ∈ X ⇒ (x,y) ∈ lo ∨ (y,x) ∈ lo,
 ∀x''. x'' ∈ minimal_elements X lo ⇔ (x'' = x'),
 ∀x''. (∃x. (x,x'') ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃x. (x,x') ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀x''. (∃y. (x'',y) ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃y. (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo' X' x'' y'.
     (x'',y') ∈ lo' ∧ (∀x'''. x''' ∈ s' ⇔ (x''',x'') ∈ lo') ∧
     ((∀x''. (∃y. (x'',y) ∈ lo') ⇒ x'' ∈ X') ∧
      (∀x''. (∃x. (x,x'') ∈ lo') ⇒ x'' ∈ X') ∧ transitive lo' ∧
      antisym lo' ∧ ∀x y. x ∈ X' ∧ y ∈ X' ⇒ (x,y) ∈ lo' ∨ (y,x) ∈ lo') ∧
     finite_prefixes lo' X' ⇒
     ∃i j.
       i ≤ j ∧
       (LNTH i (LUNFOLD linear_order_to_list_f lo') = SOME x'') ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo') = SOME y'),
 Abbrev (∀x. x ∈ min ⇔ x ∈ minimal_elements (domain lo ∪ range lo) lo),
 FINITE {z | (z,x) ∈ lo}, antisym lo,
 antisym (rrestrict lo (X DIFF minimal_elements X lo)), transitive lo,
 transitive (rrestrict lo (X DIFF minimal_elements X lo)),
 x ∉ minimal_elements X lo, y ∉ minimal_elements X lo, i ≤ j,
 LNTH i
   (LUNFOLD linear_order_to_list_f
      (rrestrict lo (X DIFF minimal_elements X lo))) =
 SOME x,
 LNTH j
   (LUNFOLD linear_order_to_list_f
      (rrestrict lo (X DIFF minimal_elements X lo))) =
 SOME y, x ∈ X, x'' ∈ min, y ∈ X, (x,y) ∈ lo,
 (x,y) ∈ rrestrict lo (X DIFF minimal_elements X lo),
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, finite_prefixes lo X,
 finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- ∀x'''. (∃y. (x''',y) ∈ lo) ∨ (∃x. (x,x''') ∈ lo) ⇔ x''' ∈ X

Number: 275
Status: Undefined
Info: lambda-lift bool num higher-order proof 
Thm list: 
Goal: 
[T,
 ∀x' y'.
   (x' ∈ X ∧ x' ∉ minimal_elements X lo) ∧ y' ∈ X ∧
   y' ∉ minimal_elements X lo ⇒
   (x',y') ∈ rrestrict lo (X DIFF minimal_elements X lo) ∨
   (y',x') ∈ rrestrict lo (X DIFF minimal_elements X lo),
 ∀x y. x ∈ X ∧ y ∈ X ⇒ (x,y) ∈ lo ∨ (y,x) ∈ lo,
 ∀x''. x'' ∈ minimal_elements X lo ⇔ (x'' = x'),
 ∀x''. (∃x. (x,x'') ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃x. (x,x') ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀x''. (∃y. (x'',y) ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃y. (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo' X' x'' y'.
     (x'',y') ∈ lo' ∧ (∀x'''. x''' ∈ s' ⇔ (x''',x'') ∈ lo') ∧
     ((∀x''. (∃y. (x'',y) ∈ lo') ⇒ x'' ∈ X') ∧
      (∀x''. (∃x. (x,x'') ∈ lo') ⇒ x'' ∈ X') ∧ transitive lo' ∧
      antisym lo' ∧ ∀x y. x ∈ X' ∧ y ∈ X' ⇒ (x,y) ∈ lo' ∨ (y,x) ∈ lo') ∧
     finite_prefixes lo' X' ⇒
     ∃i j.
       i ≤ j ∧
       (LNTH i (LUNFOLD linear_order_to_list_f lo') = SOME x'') ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo') = SOME y'),
 Abbrev (∀x. x ∉ minimal_elements (domain lo ∪ range lo) lo),
 FINITE {z | (z,x) ∈ lo}, antisym lo,
 antisym (rrestrict lo (X DIFF minimal_elements X lo)), transitive lo,
 transitive (rrestrict lo (X DIFF minimal_elements X lo)),
 x ∉ minimal_elements X lo, y ∉ minimal_elements X lo, i ≤ j,
 LNTH i
   (LUNFOLD linear_order_to_list_f
      (rrestrict lo (X DIFF minimal_elements X lo))) =
 SOME x,
 LNTH j
   (LUNFOLD linear_order_to_list_f
      (rrestrict lo (X DIFF minimal_elements X lo))) =
 SOME y, x ∈ X, y ∈ X, (x,y) ∈ lo,
 (x,y) ∈ rrestrict lo (X DIFF minimal_elements X lo),
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, finite_prefixes lo X,
 finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- ∀x''. (∃y. (x'',y) ∈ lo) ∨ (∃x. (x,x'') ∈ lo) ⇔ x'' ∈ X

structure: tactic - tactic - conv function: BEAGLE_CONV_TAC - BOOL_CONV_TAC - bool_conv message:  -  - 
Number: 276
Status: Undefined
Info: polymorph lambda-lift 
Thm list: 
 []
|- ∀s.
     FINITE s ⇒
     ∀lo X x.
       x ∈ X ∧ (s = {y | (y,x) ∈ lo}) ∧ linear_order lo X ∧
       finite_prefixes lo X ⇒
       ∃i. LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x
 [] |- ∀r s. finite_prefixes r s ⇔ ∀e. e ∈ s ⇒ FINITE {e' | (e',e) ∈ r}
Goal: 
[∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo X x y.
     (x,y) ∈ lo ∧ (s' = {z | (z,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i j.
       i ≤ j ∧ (LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x) ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo) = SOME y),
 FINITE {z | (z,x) ∈ lo}, x ∉ X DIFF minimal_elements X lo,
 minimal_elements X lo = {x'}, x ∈ X, y ∈ X, (x,y) ∈ lo,
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, X DIFF minimal_elements X lo ⊆ X,
 finite_prefixes lo X,
 finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo), linear_order lo X,
 linear_order (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- ∃j. LNTH j (LUNFOLD linear_order_to_list_f lo) = SOME y

Number: 277
Status: Parsing failed
Info: lambda-lift bool higher-order proof 
Thm list: 
Goal: 
[T,
 ∀x' y.
   (x' ∈ X ∧ x' ∉ minimal_elements X lo) ∧ y ∈ X ∧
   y ∉ minimal_elements X lo ⇒
   (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo) ∨
   (y,x') ∈ rrestrict lo (X DIFF minimal_elements X lo),
 ∀x y. x ∈ X ∧ y ∈ X ⇒ (x,y) ∈ lo ∨ (y,x) ∈ lo,
 ∀x''. x'' ∈ minimal_elements X lo ⇔ (x'' = x'),
 ∀x''. (∃x. (x,x'') ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃x. (x,x') ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀x''. (∃y. (x'',y) ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃y. (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo' X' x'' y'.
     (x'',y') ∈ lo' ∧ (∀x'''. x''' ∈ s' ⇔ (x''',x'') ∈ lo') ∧
     ((∀x''. (∃y. (x'',y) ∈ lo') ⇒ x'' ∈ X') ∧
      (∀x''. (∃x. (x,x'') ∈ lo') ⇒ x'' ∈ X') ∧ transitive lo' ∧
      antisym lo' ∧ ∀x y. x ∈ X' ∧ y ∈ X' ⇒ (x,y) ∈ lo' ∨ (y,x) ∈ lo') ∧
     finite_prefixes lo' X' ⇒
     ∃i j.
       i ≤ j ∧
       (LNTH i (LUNFOLD linear_order_to_list_f lo') = SOME x'') ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo') = SOME y'),
 FINITE {z | (z,x) ∈ lo}, antisym lo,
 antisym (rrestrict lo (X DIFF minimal_elements X lo)), transitive lo,
 transitive (rrestrict lo (X DIFF minimal_elements X lo)), x ∈ X,
 x ∈ minimal_elements X lo, y ∈ X, (x,y) ∈ lo,
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, finite_prefixes lo X,
 finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- ∀x''. (∃y. (x'',y) ∈ lo) ∨ (∃x. (x,x'') ∈ lo) ⇔ x'' ∈ X

Number: 278
Status: Parsing failed
Info: lambda-lift bool higher-order proof 
Thm list: 
Goal: 
[T,
 ∀x' y.
   (x' ∈ X ∧ x' ∉ minimal_elements X lo) ∧ y ∈ X ∧
   y ∉ minimal_elements X lo ⇒
   (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo) ∨
   (y,x') ∈ rrestrict lo (X DIFF minimal_elements X lo),
 ∀x y. x ∈ X ∧ y ∈ X ⇒ (x,y) ∈ lo ∨ (y,x) ∈ lo,
 ∀x''. x'' ∈ minimal_elements X lo ⇔ (x'' = x'),
 ∀x''. (∃x. (x,x'') ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃x. (x,x') ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀x''. (∃y. (x'',y) ∈ lo) ⇒ x'' ∈ X,
 ∀x'.
   (∃y. (x',y) ∈ rrestrict lo (X DIFF minimal_elements X lo)) ⇒
   x' ∈ X ∧ x' ∉ minimal_elements X lo,
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo' X' x'' y'.
     (x'',y') ∈ lo' ∧ (∀x'''. x''' ∈ s' ⇔ (x''',x'') ∈ lo') ∧
     ((∀x''. (∃y. (x'',y) ∈ lo') ⇒ x'' ∈ X') ∧
      (∀x''. (∃x. (x,x'') ∈ lo') ⇒ x'' ∈ X') ∧ transitive lo' ∧
      antisym lo' ∧ ∀x y. x ∈ X' ∧ y ∈ X' ⇒ (x,y) ∈ lo' ∨ (y,x) ∈ lo') ∧
     finite_prefixes lo' X' ⇒
     ∃i j.
       i ≤ j ∧
       (LNTH i (LUNFOLD linear_order_to_list_f lo') = SOME x'') ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo') = SOME y'),
 FINITE {z | (z,x) ∈ lo}, antisym lo,
 antisym (rrestrict lo (X DIFF minimal_elements X lo)), transitive lo,
 transitive (rrestrict lo (X DIFF minimal_elements X lo)), x ∉ X, x ∈ X,
 y ∈ X, (x,y) ∈ lo,
 {y | (y,x) ∈ rrestrict lo (X DIFF minimal_elements X lo)} ⊂
 {y | (y,x) ∈ lo}, finite_prefixes lo X,
 finite_prefixes (rrestrict lo (X DIFF minimal_elements X lo))
   (X DIFF minimal_elements X lo)]
|- ∀x''. (∃y. (x'',y) ∈ lo) ∨ (∃x. (x,x'') ∈ lo) ⇔ x'' ∈ X

Number: 279
Status: Parsing failed
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 [] |- ∀x y. x ∈ {y} ⇔ (x = y)
Goal: 
[T,
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo X x y.
     (x,y) ∈ lo ∧ (s' = {z | (z,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i j.
       i ≤ j ∧ (LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x) ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo) = SOME y),
 FINITE {z | (z,x) ∈ lo},
 minimal_elements (domain lo ∪ range lo) lo = {x'}, x ∈ range lo,
 x ∈ minimal_elements (domain lo ∪ range lo) lo, y ∈ range lo,
 (x,y) ∈ lo,
 {y |
  (y,x) ∈
  rrestrict lo
    (domain lo ∪ range lo DIFF
     minimal_elements (domain lo ∪ range lo) lo)} ⊂ {y | (y,x) ∈ lo},
 finite_prefixes lo (domain lo ∪ range lo),
 finite_prefixes
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo),
 linear_order lo (domain lo ∪ range lo),
 linear_order
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo)] |- x' = x

Number: 280
Status: Parsing failed
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 [] |- ∀x y. x ∈ {y} ⇔ (x = y)
Goal: 
[T,
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo X x y.
     (x,y) ∈ lo ∧ (s' = {z | (z,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i j.
       i ≤ j ∧ (LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x) ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo) = SOME y),
 FINITE {z | (z,x) ∈ lo}, x ∉ domain lo, x ∉ range lo,
 minimal_elements (domain lo ∪ range lo) lo = {x'}, x ∈ range lo,
 y ∈ range lo, (x,y) ∈ lo,
 {y |
  (y,x) ∈
  rrestrict lo
    (domain lo ∪ range lo DIFF
     minimal_elements (domain lo ∪ range lo) lo)} ⊂ {y | (y,x) ∈ lo},
 finite_prefixes lo (domain lo ∪ range lo),
 finite_prefixes
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo),
 linear_order lo (domain lo ∪ range lo),
 linear_order
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo)] |- x' = x

Number: 281
Status: Parsing failed
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 [] |- ∀x y. x ∈ {y} ⇔ (x = y)
Goal: 
[T,
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo X x y.
     (x,y) ∈ lo ∧ (s' = {z | (z,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i j.
       i ≤ j ∧ (LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x) ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo) = SOME y),
 FINITE {z | (z,x) ∈ lo},
 minimal_elements (domain lo ∪ range lo) lo = {x'}, x ∈ range lo,
 x ∈ minimal_elements (domain lo ∪ range lo) lo, y ∈ domain lo,
 (x,y) ∈ lo,
 {y |
  (y,x) ∈
  rrestrict lo
    (domain lo ∪ range lo DIFF
     minimal_elements (domain lo ∪ range lo) lo)} ⊂ {y | (y,x) ∈ lo},
 finite_prefixes lo (domain lo ∪ range lo),
 finite_prefixes
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo),
 linear_order lo (domain lo ∪ range lo),
 linear_order
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo)] |- x' = x

Number: 282
Status: Parsing failed
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 [] |- ∀x y. x ∈ {y} ⇔ (x = y)
Goal: 
[T,
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo X x y.
     (x,y) ∈ lo ∧ (s' = {z | (z,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i j.
       i ≤ j ∧ (LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x) ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo) = SOME y),
 FINITE {z | (z,x) ∈ lo}, x ∉ domain lo, x ∉ range lo,
 minimal_elements (domain lo ∪ range lo) lo = {x'}, x ∈ range lo,
 y ∈ domain lo, (x,y) ∈ lo,
 {y |
  (y,x) ∈
  rrestrict lo
    (domain lo ∪ range lo DIFF
     minimal_elements (domain lo ∪ range lo) lo)} ⊂ {y | (y,x) ∈ lo},
 finite_prefixes lo (domain lo ∪ range lo),
 finite_prefixes
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo),
 linear_order lo (domain lo ∪ range lo),
 linear_order
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo)] |- x' = x

Number: 283
Status: Parsing failed
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 [] |- ∀x y. x ∈ {y} ⇔ (x = y)
Goal: 
[T,
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo X x y.
     (x,y) ∈ lo ∧ (s' = {z | (z,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i j.
       i ≤ j ∧ (LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x) ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo) = SOME y),
 FINITE {z | (z,x) ∈ lo},
 minimal_elements (domain lo ∪ range lo) lo = {x'}, x ∈ domain lo,
 x ∈ minimal_elements (domain lo ∪ range lo) lo, y ∈ range lo,
 (x,y) ∈ lo,
 {y |
  (y,x) ∈
  rrestrict lo
    (domain lo ∪ range lo DIFF
     minimal_elements (domain lo ∪ range lo) lo)} ⊂ {y | (y,x) ∈ lo},
 finite_prefixes lo (domain lo ∪ range lo),
 finite_prefixes
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo),
 linear_order lo (domain lo ∪ range lo),
 linear_order
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo)] |- x' = x

Number: 284
Status: Parsing failed
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 [] |- ∀x y. x ∈ {y} ⇔ (x = y)
Goal: 
[T,
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo X x y.
     (x,y) ∈ lo ∧ (s' = {z | (z,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i j.
       i ≤ j ∧ (LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x) ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo) = SOME y),
 FINITE {z | (z,x) ∈ lo}, x ∉ domain lo, x ∉ range lo,
 minimal_elements (domain lo ∪ range lo) lo = {x'}, x ∈ domain lo,
 y ∈ range lo, (x,y) ∈ lo,
 {y |
  (y,x) ∈
  rrestrict lo
    (domain lo ∪ range lo DIFF
     minimal_elements (domain lo ∪ range lo) lo)} ⊂ {y | (y,x) ∈ lo},
 finite_prefixes lo (domain lo ∪ range lo),
 finite_prefixes
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo),
 linear_order lo (domain lo ∪ range lo),
 linear_order
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo)] |- x' = x

Number: 285
Status: Parsing failed
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 [] |- ∀x y. x ∈ {y} ⇔ (x = y)
Goal: 
[T,
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo X x y.
     (x,y) ∈ lo ∧ (s' = {z | (z,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i j.
       i ≤ j ∧ (LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x) ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo) = SOME y),
 FINITE {z | (z,x) ∈ lo},
 minimal_elements (domain lo ∪ range lo) lo = {x'}, x ∈ domain lo,
 x ∈ minimal_elements (domain lo ∪ range lo) lo, y ∈ domain lo,
 (x,y) ∈ lo,
 {y |
  (y,x) ∈
  rrestrict lo
    (domain lo ∪ range lo DIFF
     minimal_elements (domain lo ∪ range lo) lo)} ⊂ {y | (y,x) ∈ lo},
 finite_prefixes lo (domain lo ∪ range lo),
 finite_prefixes
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo),
 linear_order lo (domain lo ∪ range lo),
 linear_order
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo)] |- x' = x

Number: 286
Status: Parsing failed
Info: polymorph lambda-lift bool higher-order proof 
Thm list: 
 [] |- ∀x y. x ∈ {y} ⇔ (x = y)
Goal: 
[T,
 ∀s'.
   s' ⊂ {z | (z,x) ∈ lo} ⇒
   ∀lo X x y.
     (x,y) ∈ lo ∧ (s' = {z | (z,x) ∈ lo}) ∧ linear_order lo X ∧
     finite_prefixes lo X ⇒
     ∃i j.
       i ≤ j ∧ (LNTH i (LUNFOLD linear_order_to_list_f lo) = SOME x) ∧
       (LNTH j (LUNFOLD linear_order_to_list_f lo) = SOME y),
 FINITE {z | (z,x) ∈ lo}, x ∉ domain lo, x ∉ range lo,
 minimal_elements (domain lo ∪ range lo) lo = {x'}, x ∈ domain lo,
 y ∈ domain lo, (x,y) ∈ lo,
 {y |
  (y,x) ∈
  rrestrict lo
    (domain lo ∪ range lo DIFF
     minimal_elements (domain lo ∪ range lo) lo)} ⊂ {y | (y,x) ∈ lo},
 finite_prefixes lo (domain lo ∪ range lo),
 finite_prefixes
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo),
 linear_order lo (domain lo ∪ range lo),
 linear_order
   (rrestrict lo
      (domain lo ∪ range lo DIFF
       minimal_elements (domain lo ∪ range lo) lo))
   (domain lo ∪ range lo DIFF
    minimal_elements (domain lo ∪ range lo) lo)] |- x' = x

