User theorems:  [] |- ∀P l. LENGTH (SND (SPLITP P l)) ≤ LENGTH l
 [] |- a ≤ b ⇒ a < SUC b

Goal: [¬P h] ?- LENGTH (SND (SPLITP P t)) < SUC (LENGTH t)
CNF1: ∀P' l.
  (a < SUC b ∨ ¬(a ≤ b)) ∧ LENGTH (SND (SPLITP P' l)) ≤ LENGTH l ∧
  ¬P h ∧ ¬(LENGTH (SND (SPLITP P t)) < SUC (LENGTH t))
Numeral: (0 ≤ SUC b ∧ 0 ≤ a ∧ 0 ≤ b ∧ 0 ≤ LENGTH (SND (SPLITP P t)) ∧
 0 ≤ SUC (LENGTH t) ∧ 0 ≤ LENGTH t) ∧
∀P' l.
  (0 ≤ LENGTH (SND (SPLITP P' l)) ∧ 0 ≤ LENGTH l) ∧
  (a < SUC b ∨ ¬(a ≤ b)) ∧ LENGTH (SND (SPLITP P' l)) ≤ LENGTH l ∧
  ¬P h ∧ ¬(LENGTH (SND (SPLITP P t)) < SUC (LENGTH t))
CNF2: ∀P' l.
  0 ≤ LENGTH t ∧ 0 ≤ SUC (LENGTH t) ∧ 0 ≤ LENGTH (SND (SPLITP P t)) ∧
  0 ≤ b ∧ 0 ≤ a ∧ 0 ≤ SUC b ∧ 0 ≤ LENGTH l ∧
  0 ≤ LENGTH (SND (SPLITP P' l)) ∧ (a < SUC b ∨ ¬(a ≤ b)) ∧
  LENGTH (SND (SPLITP P' l)) ≤ LENGTH l ∧ ¬P h ∧
  ¬(LENGTH (SND (SPLITP P t)) < SUC (LENGTH t))
Status: Unknown

User theorems:  [] |- ∀P l. LENGTH (SND (SPLITP P l)) ≤ LENGTH l
 [] |- a ≤ b ⇒ a < SUC b

Goal: [P h] ?- (l ≠ "" ∨ r ≠ STRING h t) ∨ (l = "")
CNF1: ∀P' l'.
  (a < SUC b ∨ ¬(a ≤ b)) ∧ LENGTH (SND (SPLITP P' l')) ≤ LENGTH l' ∧
  P h ∧ (r = STRING h t) ∧ (l = "") ∧ l ≠ ""
Numeral: (0 ≤ SUC b ∧ 0 ≤ a ∧ 0 ≤ b) ∧
∀P' l'.
  (0 ≤ LENGTH (SND (SPLITP P' l')) ∧ 0 ≤ LENGTH l') ∧
  (a < SUC b ∨ ¬(a ≤ b)) ∧ LENGTH (SND (SPLITP P' l')) ≤ LENGTH l' ∧
  P h ∧ (r = STRING h t) ∧ (l = "") ∧ l ≠ ""
CNF2: F
Status: Unsatisfiable

User theorems:  [] |- ∀P l. LENGTH (SND (SPLITP P l)) ≤ LENGTH l
 [] |- ∀l. l ≠ [] ⇒ LENGTH (TL l) < LENGTH l
 [] |- ∀m n p. m < n ∧ n < p ⇒ m < p
 [] |- a ≤ b ⇒ a < SUC b

Goal: [SND (SPLITP P t) ≠ "",¬P h] ?- LENGTH (TL (SND (SPLITP P t))) < SUC (LENGTH t)
CNF1: ∀P' l m n p.
  (a < SUC b ∨ ¬(a ≤ b)) ∧ (m < p ∨ ¬(m < n) ∨ ¬(n < p)) ∧
  (LENGTH (TL l) < LENGTH l ∨ (l = [])) ∧
  LENGTH (SND (SPLITP P' l)) ≤ LENGTH l ∧ ¬P h ∧ SND (SPLITP P t) ≠ "" ∧
  ¬(LENGTH (TL (SND (SPLITP P t))) < SUC (LENGTH t))
Numeral: (0 ≤ SUC b ∧ 0 ≤ a ∧ 0 ≤ b ∧ 0 ≤ LENGTH (TL (SND (SPLITP P t))) ∧
 0 ≤ SUC (LENGTH t) ∧ 0 ≤ LENGTH t) ∧
∀P' l m n p.
  0 ≤ m ∧ 0 ≤ n ∧ 0 ≤ p ⇒
  (0 ≤ LENGTH (TL l) ∧ 0 ≤ LENGTH (SND (SPLITP P' l)) ∧ 0 ≤ LENGTH l) ∧
  (a < SUC b ∨ ¬(a ≤ b)) ∧ (m < p ∨ ¬(m < n) ∨ ¬(n < p)) ∧
  (LENGTH (TL l) < LENGTH l ∨ (l = [])) ∧
  LENGTH (SND (SPLITP P' l)) ≤ LENGTH l ∧ ¬P h ∧ SND (SPLITP P t) ≠ "" ∧
  ¬(LENGTH (TL (SND (SPLITP P t))) < SUC (LENGTH t))
CNF2: ∀P' l m n p.
  0 ≤ LENGTH t ∧ 0 ≤ SUC (LENGTH t) ∧
  0 ≤ LENGTH (TL (SND (SPLITP P t))) ∧ 0 ≤ b ∧ 0 ≤ a ∧ 0 ≤ SUC b ∧
  (0 ≤ LENGTH l ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (0 ≤ LENGTH (SND (SPLITP P' l)) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (0 ≤ LENGTH (TL l) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (¬(a ≤ b) ∨ a < SUC b ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (¬(n < p) ∨ ¬(m < n) ∨ m < p ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  ((l = []) ∨ LENGTH (TL l) < LENGTH l ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨
   ¬(0 ≤ p)) ∧
  (LENGTH (SND (SPLITP P' l)) ≤ LENGTH l ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨
   ¬(0 ≤ p)) ∧ (¬P h ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (SND (SPLITP P t) ≠ "" ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (¬(LENGTH (TL (SND (SPLITP P t))) < SUC (LENGTH t)) ∨ ¬(0 ≤ m) ∨
   ¬(0 ≤ n) ∨ ¬(0 ≤ p))
Status: Unknown

User theorems:  [] |- EXPLODE (IMPLODE cs) = cs
 [] |- IMPLODE (EXPLODE s) = s

Goal: [] ?- ∀cs. ∃s. cs = EXPLODE s
CNF1: ∃cs'.
  ∀s'.
    (IMPLODE (EXPLODE s) = s) ∧ (EXPLODE (IMPLODE cs) = cs) ∧
    cs' ≠ EXPLODE s'
Status: Satisfiable

User theorems:  [] |- EXPLODE (IMPLODE cs) = cs
 [] |- IMPLODE (EXPLODE s) = s

Goal: [] ?- ∀s. ∃cs. s = IMPLODE cs
CNF1: ∃s'.
  ∀cs'.
    (IMPLODE (EXPLODE s) = s) ∧ (EXPLODE (IMPLODE cs) = cs) ∧
    s' ≠ IMPLODE cs'
Status: Satisfiable

User theorems:  [] |- EXPLODE (IMPLODE cs) = cs
 [] |- IMPLODE (EXPLODE s) = s

Goal: [] ?- (EXPLODE s1 = EXPLODE s2) ⇔ (s1 = s2)
CNF1: (IMPLODE (EXPLODE s) = s) ∧ (EXPLODE (IMPLODE cs) = cs) ∧
((EXPLODE s1 = EXPLODE s2) ∨ (s1 = s2)) ∧
(EXPLODE s1 ≠ EXPLODE s2 ∨ s1 ≠ s2)
Status: Satisfiable

User theorems:  [] |- EXPLODE (IMPLODE cs) = cs
 [] |- IMPLODE (EXPLODE s) = s

Goal: [] ?- (IMPLODE cs1 = IMPLODE cs2) ⇔ (cs1 = cs2)
CNF1: (IMPLODE (EXPLODE s) = s) ∧ (EXPLODE (IMPLODE cs) = cs) ∧
((IMPLODE cs1 = IMPLODE cs2) ∨ (cs1 = cs2)) ∧
(IMPLODE cs1 ≠ IMPLODE cs2 ∨ cs1 ≠ cs2)
Status: Satisfiable

User theorems: 
Goal: [t < t',ORD h = ORD h',s1 < t,ORD h'' = ORD h,¬(ORD h'' < ORD h'),∀s2 s3. s1 < s2 ∧ s2 < s3 ⇒ s1 < s3] ?- s1 < t'
CNF1: ∀s2 s3.
  (s1 < s3 ∨ ¬(s1 < s2) ∨ ¬(s2 < s3)) ∧ ¬(ORD h'' < ORD h') ∧
  (ORD h'' = ORD h) ∧ s1 < t ∧ (ORD h = ORD h') ∧ t < t' ∧ ¬(s1 < t')
Numeral: (0 ≤ ORD h'' ∧ 0 ≤ ORD h ∧ 0 ≤ ORD h') ∧
∀s2 s3.
  (s1 < s3 ∨ ¬(s1 < s2) ∨ ¬(s2 < s3)) ∧ ¬(ORD h'' < ORD h') ∧
  (ORD h'' = ORD h) ∧ s1 < t ∧ (ORD h = ORD h') ∧ t < t' ∧ ¬(s1 < t')
CNF2: ∀s2 s3.
  0 ≤ ORD h' ∧ 0 ≤ ORD h ∧ 0 ≤ ORD h'' ∧
  (s1 < s3 ∨ ¬(s1 < s2) ∨ ¬(s2 < s3)) ∧ ¬(ORD h'' < ORD h') ∧
  (ORD h'' = ORD h) ∧ s1 < t ∧ (ORD h = ORD h') ∧ t < t' ∧ ¬(s1 < t')
Status: Unsatisfiable

User theorems: 
Goal: [∀m. m < ORD h ⇒ m < ORD h',∀p. ORD h' < p ⇒ ORD h < p,ORD h < ORD h',s1 < t,ORD h'' = ORD h,¬(ORD h'' < ORD h'),∀s2 s3. s1 < s2 ∧ s2 < s3 ⇒ s1 < s3] ?- s1 < t'
CNF1: ∀p s2 s3.
  (s1 < s3 ∨ ¬(s1 < s2) ∨ ¬(s2 < s3)) ∧ ¬(ORD h'' < ORD h') ∧
  (ORD h'' = ORD h) ∧ s1 < t ∧ ORD h < ORD h' ∧
  (ORD h < p ∨ ¬(ORD h' < p)) ∧ (p < ORD h' ∨ ¬(p < ORD h)) ∧ ¬(s1 < t')
Numeral: (0 ≤ ORD h'' ∧ 0 ≤ ORD h' ∧ 0 ≤ ORD h) ∧
∀p s2 s3.
  0 ≤ p ⇒
  (s1 < s3 ∨ ¬(s1 < s2) ∨ ¬(s2 < s3)) ∧ ¬(ORD h'' < ORD h') ∧
  (ORD h'' = ORD h) ∧ s1 < t ∧ ORD h < ORD h' ∧
  (ORD h < p ∨ ¬(ORD h' < p)) ∧ (p < ORD h' ∨ ¬(p < ORD h)) ∧ ¬(s1 < t')
CNF2: ∀p s2 s3.
  0 ≤ ORD h ∧ 0 ≤ ORD h' ∧ 0 ≤ ORD h'' ∧
  (¬(s2 < s3) ∨ ¬(s1 < s2) ∨ s1 < s3 ∨ ¬(0 ≤ p)) ∧
  (¬(ORD h'' < ORD h') ∨ ¬(0 ≤ p)) ∧ ((ORD h'' = ORD h) ∨ ¬(0 ≤ p)) ∧
  (s1 < t ∨ ¬(0 ≤ p)) ∧ (ORD h < ORD h' ∨ ¬(0 ≤ p)) ∧
  (¬(ORD h' < p) ∨ ORD h < p ∨ ¬(0 ≤ p)) ∧
  (¬(p < ORD h) ∨ p < ORD h' ∨ ¬(0 ≤ p)) ∧ (¬(s1 < t') ∨ ¬(0 ≤ p))
Status: Unsatisfiable

User theorems: 
Goal: [∀m. m < ORD h'' ⇒ m < ORD h,∀p. ORD h < p ⇒ ORD h'' < p,t < t',ORD h = ORD h',ORD h'' < ORD h,¬(ORD h'' < ORD h'),∀s2 s3. s1 < s2 ∧ s2 < s3 ⇒ s1 < s3] ?- s1 < t'
CNF1: ∀p s2 s3.
  (s1 < s3 ∨ ¬(s1 < s2) ∨ ¬(s2 < s3)) ∧ ¬(ORD h'' < ORD h') ∧
  ORD h'' < ORD h ∧ (ORD h = ORD h') ∧ t < t' ∧
  (ORD h'' < p ∨ ¬(ORD h < p)) ∧ (p < ORD h ∨ ¬(p < ORD h'')) ∧
  ¬(s1 < t')
Numeral: (0 ≤ ORD h' ∧ 0 ≤ ORD h ∧ 0 ≤ ORD h'') ∧
∀p s2 s3.
  0 ≤ p ⇒
  (s1 < s3 ∨ ¬(s1 < s2) ∨ ¬(s2 < s3)) ∧ ¬(ORD h'' < ORD h') ∧
  ORD h'' < ORD h ∧ (ORD h = ORD h') ∧ t < t' ∧
  (ORD h'' < p ∨ ¬(ORD h < p)) ∧ (p < ORD h ∨ ¬(p < ORD h'')) ∧
  ¬(s1 < t')
CNF2: ∀p s2 s3.
  0 ≤ ORD h'' ∧ 0 ≤ ORD h ∧ 0 ≤ ORD h' ∧
  (¬(s2 < s3) ∨ ¬(s1 < s2) ∨ s1 < s3 ∨ ¬(0 ≤ p)) ∧
  (¬(ORD h'' < ORD h') ∨ ¬(0 ≤ p)) ∧ (ORD h'' < ORD h ∨ ¬(0 ≤ p)) ∧
  ((ORD h = ORD h') ∨ ¬(0 ≤ p)) ∧ (t < t' ∨ ¬(0 ≤ p)) ∧
  (¬(ORD h < p) ∨ ORD h'' < p ∨ ¬(0 ≤ p)) ∧
  (¬(p < ORD h'') ∨ p < ORD h ∨ ¬(0 ≤ p)) ∧ (¬(s1 < t') ∨ ¬(0 ≤ p))
Status: Unsatisfiable

User theorems:  [] |- 0 < 256
 [] |- ∀n. 0 < n ⇒ ∀k. (k = k DIV n * n + k MOD n) ∧ k MOD n < n
 [] |- ∀m n. m + n = n + m

Goal: [n MOD 256 ≠ 0,0 < n MOD 256,s2n s0 = (n − n MOD 256) DIV 256,(n − n MOD 256) DIV 256 < n,Abbrev (s0 = n2s ((n − n MOD 256) DIV 256)),n ≠ 0,∀m. m < n ⇒ (s2n (n2s m) = m)] ?- (n = n MOD 256 + n DIV 256 * 256) ∨ n ≤ n MOD 256 ∧ (n DIV 256 = 0)
CNF1: ∀m n'.
  (m + n' = n' + m) ∧ ((n' = n' DIV m * m + n' MOD m) ∨ ¬(0 < m)) ∧
  (n' MOD m < m ∨ ¬(0 < m)) ∧ 0 < 256 ∧ ((s2n (n2s m) = m) ∨ ¬(m < n)) ∧
  n ≠ 0 ∧ Abbrev (s0 = n2s ((n − n MOD 256) DIV 256)) ∧
  (n − n MOD 256) DIV 256 < n ∧ (s2n s0 = (n − n MOD 256) DIV 256) ∧
  0 < n MOD 256 ∧ n MOD 256 ≠ 0 ∧ n ≠ n MOD 256 + n DIV 256 * 256 ∧
  (¬(n ≤ n MOD 256) ∨ n DIV 256 ≠ 0)
Numeral: (0 ≤ s2n s0 ∧ 0 ≤ (n − n MOD 256) DIV 256 ∧ 0 ≤ n − n MOD 256 ∧
 0 ≤ n MOD 256 + n DIV 256 * 256 ∧ 0 ≤ n DIV 256 * 256 ∧ 0 ≤ n MOD 256 ∧
 0 ≤ n DIV 256 ∧ 0 ≤ n) ∧
∀m n'.
  0 ≤ n' ∧ 0 ≤ m ⇒
  (0 ≤ m + n' ∧ 0 ≤ n' + m ∧ 0 ≤ n' DIV m * m + n' MOD m ∧
   0 ≤ n' DIV m * m ∧ 0 ≤ n' DIV m ∧ 0 ≤ n' MOD m ∧ 0 ≤ s2n (n2s m)) ∧
  (m + n' = n' + m) ∧ ((n' = n' DIV m * m + n' MOD m) ∨ ¬(0 < m)) ∧
  (n' MOD m < m ∨ ¬(0 < m)) ∧ 0 < 256 ∧ ((s2n (n2s m) = m) ∨ ¬(m < n)) ∧
  n ≠ 0 ∧ Abbrev (s0 = n2s ((n − n MOD 256) DIV 256)) ∧
  (n − n MOD 256) DIV 256 < n ∧ (s2n s0 = (n − n MOD 256) DIV 256) ∧
  0 < n MOD 256 ∧ n MOD 256 ≠ 0 ∧ n ≠ n MOD 256 + n DIV 256 * 256 ∧
  (¬(n ≤ n MOD 256) ∨ n DIV 256 ≠ 0)
CNF2: ∀m n'.
  0 ≤ n ∧ 0 ≤ n DIV 256 ∧ 0 ≤ n MOD 256 ∧ 0 ≤ n DIV 256 * 256 ∧
  0 ≤ n MOD 256 + n DIV 256 * 256 ∧ 0 ≤ n − n MOD 256 ∧
  0 ≤ (n − n MOD 256) DIV 256 ∧ 0 ≤ s2n s0 ∧
  (0 ≤ s2n (n2s m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 ≤ n' MOD m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 ≤ n' DIV m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 ≤ n' DIV m * m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 ≤ n' DIV m * m + n' MOD m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 ≤ n' + m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 ≤ m + n' ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  ((m + n' = n' + m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (¬(0 < m) ∨ (n' = n' DIV m * m + n' MOD m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (¬(0 < m) ∨ n' MOD m < m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 < 256 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (¬(m < n) ∨ (s2n (n2s m) = m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (n ≠ 0 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (Abbrev (s0 = n2s ((n − n MOD 256) DIV 256)) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  ((n − n MOD 256) DIV 256 < n ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  ((s2n s0 = (n − n MOD 256) DIV 256) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 < n MOD 256 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (n MOD 256 ≠ 0 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (n ≠ n MOD 256 + n DIV 256 * 256 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (n DIV 256 ≠ 0 ∨ ¬(n ≤ n MOD 256) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m))
Status: Unsatisfiable

User theorems:  [] |- 0 < 256
 [] |- ∀n. 0 < n ⇒ ∀k. (k = k DIV n * n + k MOD n) ∧ k MOD n < n
 [] |- ∀m n. m * n = n * m

Goal: [(n − n MOD 256) DIV 256 = n DIV 256,n MOD 256 ≠ 0,0 < n MOD 256,s2n s0 = (n − n MOD 256) DIV 256,(n − n MOD 256) DIV 256 < n,Abbrev (s0 = n2s ((n − n MOD 256) DIV 256)),n ≠ 0,∀m. m < n ⇒ (s2n (n2s m) = m)] ?- 256 * (n DIV 256) + n MOD 256 = n
CNF1: ∀m n'.
  (m * n' = n' * m) ∧ ((n' = n' DIV m * m + n' MOD m) ∨ ¬(0 < m)) ∧
  (n' MOD m < m ∨ ¬(0 < m)) ∧ 0 < 256 ∧ ((s2n (n2s m) = m) ∨ ¬(m < n)) ∧
  n ≠ 0 ∧ Abbrev (s0 = n2s ((n − n MOD 256) DIV 256)) ∧
  (n − n MOD 256) DIV 256 < n ∧ (s2n s0 = (n − n MOD 256) DIV 256) ∧
  0 < n MOD 256 ∧ n MOD 256 ≠ 0 ∧
  ((n − n MOD 256) DIV 256 = n DIV 256) ∧
  256 * (n DIV 256) + n MOD 256 ≠ n
Numeral: (0 ≤ s2n s0 ∧ 0 ≤ (n − n MOD 256) DIV 256 ∧ 0 ≤ n − n MOD 256 ∧
 0 ≤ 256 * (n DIV 256) + n MOD 256 ∧ 0 ≤ 256 * (n DIV 256) ∧
 0 ≤ n DIV 256 ∧ 0 ≤ n MOD 256 ∧ 0 ≤ n) ∧
∀m n'.
  0 ≤ n' ∧ 0 ≤ m ⇒
  (0 ≤ m * n' ∧ 0 ≤ n' * m ∧ 0 ≤ n' DIV m * m + n' MOD m ∧
   0 ≤ n' DIV m * m ∧ 0 ≤ n' DIV m ∧ 0 ≤ n' MOD m ∧ 0 ≤ s2n (n2s m)) ∧
  (m * n' = n' * m) ∧ ((n' = n' DIV m * m + n' MOD m) ∨ ¬(0 < m)) ∧
  (n' MOD m < m ∨ ¬(0 < m)) ∧ 0 < 256 ∧ ((s2n (n2s m) = m) ∨ ¬(m < n)) ∧
  n ≠ 0 ∧ Abbrev (s0 = n2s ((n − n MOD 256) DIV 256)) ∧
  (n − n MOD 256) DIV 256 < n ∧ (s2n s0 = (n − n MOD 256) DIV 256) ∧
  0 < n MOD 256 ∧ n MOD 256 ≠ 0 ∧
  ((n − n MOD 256) DIV 256 = n DIV 256) ∧
  256 * (n DIV 256) + n MOD 256 ≠ n
CNF2: ∀m n'.
  0 ≤ n ∧ 0 ≤ n MOD 256 ∧ 0 ≤ n DIV 256 ∧ 0 ≤ 256 * (n DIV 256) ∧
  0 ≤ 256 * (n DIV 256) + n MOD 256 ∧ 0 ≤ n − n MOD 256 ∧
  0 ≤ (n − n MOD 256) DIV 256 ∧ 0 ≤ s2n s0 ∧
  (0 ≤ s2n (n2s m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 ≤ n' MOD m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 ≤ n' DIV m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 ≤ n' DIV m * m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 ≤ n' DIV m * m + n' MOD m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 ≤ n' * m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 ≤ m * n' ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  ((m * n' = n' * m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (¬(0 < m) ∨ (n' = n' DIV m * m + n' MOD m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (¬(0 < m) ∨ n' MOD m < m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 < 256 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (¬(m < n) ∨ (s2n (n2s m) = m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (n ≠ 0 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (Abbrev (s0 = n2s ((n − n MOD 256) DIV 256)) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  ((n − n MOD 256) DIV 256 < n ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  ((s2n s0 = (n − n MOD 256) DIV 256) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 < n MOD 256 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (n MOD 256 ≠ 0 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (((n − n MOD 256) DIV 256 = n DIV 256) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (256 * (n DIV 256) + n MOD 256 ≠ n ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m))
Status: Unsatisfiable

User theorems:  [] |- ∀n. 0 < n ⇒ ∀k. (k = k DIV n * n + k MOD n) ∧ k MOD n < n
 []
|- (0 + m = m) ∧ (m + 0 = m) ∧ (SUC m + n = SUC (m + n)) ∧
   (m + SUC n = SUC (m + n))
 [] |- 0 < 256

Goal: [r0 = 0,0 < r,s2n s0 = (n − r) DIV 256,(n − r) DIV 256 < n,n MOD 256 < 256,Abbrev (s0 = n2s ((n − r) DIV 256)),Abbrev (r = if r0 = 0 then 256 else r0),Abbrev (r0 = n MOD 256),n ≠ 0,∀m. m < n ⇒ (s2n (n2s m) = m)] ?- ∃q. n = q * 256
CNF1: ∀q k.
  0 < 256 ∧ (0 + m = m) ∧ (m + 0 = m) ∧ (SUC m + n = SUC (m + n)) ∧
  (m + SUC n = SUC (m + n)) ∧ ((k = k DIV q * q + k MOD q) ∨ ¬(0 < q)) ∧
  (k MOD q < q ∨ ¬(0 < q)) ∧ ((s2n (n2s q) = q) ∨ ¬(q < n)) ∧ n ≠ 0 ∧
  Abbrev (r0 = n MOD 256) ∧ Abbrev (r = if r0 = 0 then 256 else r0) ∧
  Abbrev (s0 = n2s ((n − r) DIV 256)) ∧ n MOD 256 < 256 ∧
  (n − r) DIV 256 < n ∧ (s2n s0 = (n − r) DIV 256) ∧ 0 < r ∧ (r0 = 0) ∧
  n ≠ q * 256
Numeral: (0 ≤ 0 + m ∧ 0 ≤ m + 0 ∧ 0 ≤ SUC m + n ∧ 0 ≤ SUC m ∧ 0 ≤ m + SUC n ∧
 0 ≤ SUC n ∧ 0 ≤ SUC (m + n) ∧ 0 ≤ m + n ∧ 0 ≤ m ∧
 0 ≤ (if r0 = 0 then 256 else r0) ∧ 0 ≤ n MOD 256 ∧ 0 ≤ s2n s0 ∧
 0 ≤ (n − r) DIV 256 ∧ 0 ≤ n − r ∧ 0 ≤ r ∧ 0 ≤ r0 ∧ 0 ≤ n) ∧
∀q k.
  0 ≤ k ∧ 0 ≤ q ⇒
  (0 ≤ k DIV q * q + k MOD q ∧ 0 ≤ k DIV q * q ∧ 0 ≤ k DIV q ∧
   0 ≤ k MOD q ∧ 0 ≤ s2n (n2s q) ∧ 0 ≤ q * 256) ∧ 0 < 256 ∧
  (0 + m = m) ∧ (m + 0 = m) ∧ (SUC m + n = SUC (m + n)) ∧
  (m + SUC n = SUC (m + n)) ∧ ((k = k DIV q * q + k MOD q) ∨ ¬(0 < q)) ∧
  (k MOD q < q ∨ ¬(0 < q)) ∧ ((s2n (n2s q) = q) ∨ ¬(q < n)) ∧ n ≠ 0 ∧
  Abbrev (r0 = n MOD 256) ∧ Abbrev (r = if r0 = 0 then 256 else r0) ∧
  Abbrev (s0 = n2s ((n − r) DIV 256)) ∧ n MOD 256 < 256 ∧
  (n − r) DIV 256 < n ∧ (s2n s0 = (n − r) DIV 256) ∧ 0 < r ∧ (r0 = 0) ∧
  n ≠ q * 256
CNF2: ∀q k.
  0 ≤ n ∧ 0 ≤ r0 ∧ 0 ≤ r ∧ 0 ≤ n − r ∧ 0 ≤ (n − r) DIV 256 ∧
  0 ≤ s2n s0 ∧ 0 ≤ n MOD 256 ∧ 0 ≤ (if r0 = 0 then 256 else r0) ∧
  0 ≤ m ∧ 0 ≤ m + n ∧ 0 ≤ SUC (m + n) ∧ 0 ≤ SUC n ∧ 0 ≤ m + SUC n ∧
  0 ≤ SUC m ∧ 0 ≤ SUC m + n ∧ 0 ≤ m + 0 ∧ 0 ≤ 0 + m ∧
  (0 ≤ q * 256 ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (0 ≤ s2n (n2s q) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (0 ≤ k MOD q ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (0 ≤ k DIV q ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (0 ≤ k DIV q * q ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (0 ≤ k DIV q * q + k MOD q ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (0 < 256 ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  ((0 + m = m) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  ((m + 0 = m) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  ((SUC m + n = SUC (m + n)) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  ((m + SUC n = SUC (m + n)) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (¬(0 < q) ∨ (k = k DIV q * q + k MOD q) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (¬(0 < q) ∨ k MOD q < q ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (¬(q < n) ∨ (s2n (n2s q) = q) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (n ≠ 0 ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (Abbrev (r0 = n MOD 256) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (Abbrev (r = if r0 = 0 then 256 else r0) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (Abbrev (s0 = n2s ((n − r) DIV 256)) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (n MOD 256 < 256 ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  ((n − r) DIV 256 < n ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  ((s2n s0 = (n − r) DIV 256) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (0 < r ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧ ((r0 = 0) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (n ≠ q * 256 ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q))
Status: Unsatisfiable

User theorems:  [] |- ∀m n. m * n = n * m
 [] |- ∀n q. 0 < n ⇒ (q * n DIV n = q)
 [] |- 0 < 256

Goal: [ORD c + 1 < 256,r0 ≠ 0,r0 = ORD c + 1,Abbrev (s0 = n2s (256 * s2n s DIV 256)),n2s (s2n s) = s] ?- s0 = s
CNF1: ∀n q.
  0 < 256 ∧ ((q * n DIV n = q) ∨ ¬(0 < n)) ∧ (n * q = q * n) ∧
  (n2s (s2n s) = s) ∧ Abbrev (s0 = n2s (256 * s2n s DIV 256)) ∧
  (r0 = ORD c + 1) ∧ r0 ≠ 0 ∧ ORD c + 1 < 256 ∧ s0 ≠ s
Numeral: (0 ≤ 256 * s2n s DIV 256 ∧ 0 ≤ 256 * s2n s ∧ 0 ≤ s2n s ∧ 0 ≤ r0 ∧
 0 ≤ ORD c + 1 ∧ 0 ≤ ORD c) ∧
∀n q.
  0 ≤ q ∧ 0 ≤ n ⇒
  (0 ≤ q * n DIV n ∧ 0 ≤ n * q ∧ 0 ≤ q * n) ∧ 0 < 256 ∧
  ((q * n DIV n = q) ∨ ¬(0 < n)) ∧ (n * q = q * n) ∧ (n2s (s2n s) = s) ∧
  Abbrev (s0 = n2s (256 * s2n s DIV 256)) ∧ (r0 = ORD c + 1) ∧ r0 ≠ 0 ∧
  ORD c + 1 < 256 ∧ s0 ≠ s
CNF2: ∀n q.
  0 ≤ ORD c ∧ 0 ≤ ORD c + 1 ∧ 0 ≤ r0 ∧ 0 ≤ s2n s ∧ 0 ≤ 256 * s2n s ∧
  0 ≤ 256 * s2n s DIV 256 ∧ (0 ≤ q * n ∨ ¬(0 ≤ q) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ n * q ∨ ¬(0 ≤ q) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ q * n DIV n ∨ ¬(0 ≤ q) ∨ ¬(0 ≤ n)) ∧
  (0 < 256 ∨ ¬(0 ≤ q) ∨ ¬(0 ≤ n)) ∧
  (¬(0 < n) ∨ (q * n DIV n = q) ∨ ¬(0 ≤ q) ∨ ¬(0 ≤ n)) ∧
  ((n * q = q * n) ∨ ¬(0 ≤ q) ∨ ¬(0 ≤ n)) ∧
  ((n2s (s2n s) = s) ∨ ¬(0 ≤ q) ∨ ¬(0 ≤ n)) ∧
  (Abbrev (s0 = n2s (256 * s2n s DIV 256)) ∨ ¬(0 ≤ q) ∨ ¬(0 ≤ n)) ∧
  ((r0 = ORD c + 1) ∨ ¬(0 ≤ q) ∨ ¬(0 ≤ n)) ∧
  (r0 ≠ 0 ∨ ¬(0 ≤ q) ∨ ¬(0 ≤ n)) ∧
  (ORD c + 1 < 256 ∨ ¬(0 ≤ q) ∨ ¬(0 ≤ n)) ∧
  (s0 ≠ s ∨ ¬(0 ≤ q) ∨ ¬(0 ≤ n))
Status: Unsatisfiable

User theorems:  [] |- ∀n. 0 < n ⇒ ∀k. (k = k DIV n * n + k MOD n) ∧ k MOD n < n
 []
|- (0 + m = m) ∧ (m + 0 = m) ∧ (SUC m + n = SUC (m + n)) ∧
   (m + SUC n = SUC (m + n))
 [] |- 0 < 256

Goal: [ORD c < 256,r0 = 0,r0 = (ORD c + 1) MOD 256,Abbrev (s0 = n2s ((s2n s * 256 + ORD c + 1 − r) DIV 256)),Abbrev (r = if r0 = 0 then 256 else r0),n2s (s2n s) = s] ?- ∃q. ORD c + 1 = q * 256
CNF1: ∀q k.
  0 < 256 ∧ (0 + m = m) ∧ (m + 0 = m) ∧ (SUC m + n = SUC (m + n)) ∧
  (m + SUC n = SUC (m + n)) ∧ ((k = k DIV q * q + k MOD q) ∨ ¬(0 < q)) ∧
  (k MOD q < q ∨ ¬(0 < q)) ∧ (n2s (s2n s) = s) ∧
  Abbrev (r = if r0 = 0 then 256 else r0) ∧
  Abbrev (s0 = n2s ((s2n s * 256 + ORD c + 1 − r) DIV 256)) ∧
  (r0 = (ORD c + 1) MOD 256) ∧ (r0 = 0) ∧ ORD c < 256 ∧
  ORD c + 1 ≠ q * 256
Numeral: (0 ≤ 0 + m ∧ 0 ≤ m + 0 ∧ 0 ≤ SUC m + n ∧ 0 ≤ SUC m ∧ 0 ≤ m + SUC n ∧
 0 ≤ SUC n ∧ 0 ≤ SUC (m + n) ∧ 0 ≤ m + n ∧ 0 ≤ m ∧ 0 ≤ n ∧
 0 ≤ (if r0 = 0 then 256 else r0) ∧
 0 ≤ (s2n s * 256 + ORD c + 1 − r) DIV 256 ∧
 0 ≤ s2n s * 256 + ORD c + 1 − r ∧ 0 ≤ s2n s * 256 + ORD c + 1 ∧
 0 ≤ s2n s * 256 + ORD c ∧ 0 ≤ s2n s * 256 ∧ 0 ≤ s2n s ∧ 0 ≤ r ∧
 0 ≤ (ORD c + 1) MOD 256 ∧ 0 ≤ r0 ∧ 0 ≤ ORD c + 1 ∧ 0 ≤ ORD c) ∧
∀q k.
  0 ≤ k ∧ 0 ≤ q ⇒
  (0 ≤ k DIV q * q + k MOD q ∧ 0 ≤ k DIV q * q ∧ 0 ≤ k DIV q ∧
   0 ≤ k MOD q ∧ 0 ≤ q * 256) ∧ 0 < 256 ∧ (0 + m = m) ∧ (m + 0 = m) ∧
  (SUC m + n = SUC (m + n)) ∧ (m + SUC n = SUC (m + n)) ∧
  ((k = k DIV q * q + k MOD q) ∨ ¬(0 < q)) ∧ (k MOD q < q ∨ ¬(0 < q)) ∧
  (n2s (s2n s) = s) ∧ Abbrev (r = if r0 = 0 then 256 else r0) ∧
  Abbrev (s0 = n2s ((s2n s * 256 + ORD c + 1 − r) DIV 256)) ∧
  (r0 = (ORD c + 1) MOD 256) ∧ (r0 = 0) ∧ ORD c < 256 ∧
  ORD c + 1 ≠ q * 256
CNF2: ∀q k.
  0 ≤ ORD c ∧ 0 ≤ ORD c + 1 ∧ 0 ≤ r0 ∧ 0 ≤ (ORD c + 1) MOD 256 ∧ 0 ≤ r ∧
  0 ≤ s2n s ∧ 0 ≤ s2n s * 256 ∧ 0 ≤ s2n s * 256 + ORD c ∧
  0 ≤ s2n s * 256 + ORD c + 1 ∧ 0 ≤ s2n s * 256 + ORD c + 1 − r ∧
  0 ≤ (s2n s * 256 + ORD c + 1 − r) DIV 256 ∧
  0 ≤ (if r0 = 0 then 256 else r0) ∧ 0 ≤ n ∧ 0 ≤ m ∧ 0 ≤ m + n ∧
  0 ≤ SUC (m + n) ∧ 0 ≤ SUC n ∧ 0 ≤ m + SUC n ∧ 0 ≤ SUC m ∧
  0 ≤ SUC m + n ∧ 0 ≤ m + 0 ∧ 0 ≤ 0 + m ∧
  (0 ≤ q * 256 ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (0 ≤ k MOD q ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (0 ≤ k DIV q ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (0 ≤ k DIV q * q ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (0 ≤ k DIV q * q + k MOD q ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (0 < 256 ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  ((0 + m = m) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  ((m + 0 = m) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  ((SUC m + n = SUC (m + n)) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  ((m + SUC n = SUC (m + n)) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (¬(0 < q) ∨ (k = k DIV q * q + k MOD q) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (¬(0 < q) ∨ k MOD q < q ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  ((n2s (s2n s) = s) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (Abbrev (r = if r0 = 0 then 256 else r0) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (Abbrev (s0 = n2s ((s2n s * 256 + ORD c + 1 − r) DIV 256)) ∨
   ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  ((r0 = (ORD c + 1) MOD 256) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  ((r0 = 0) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (ORD c < 256 ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q)) ∧
  (ORD c + 1 ≠ q * 256 ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ q))
Status: Unsatisfiable

User theorems:  [] |- ∀a. CHR (ORD a) = a

Goal: [ORD c = 255,q = 1,ORD c + 1 = 256,ORD c < 256,r0 = 0,T,Abbrev (s0 = n2s ((s2n s * 256 + ORD c + 1 − r) DIV 256)),Abbrev (r = 256),n2s (s2n s) = s] ?- c = #"\255"
CNF1: ∀a.
  (CHR (ORD a) = a) ∧ (n2s (s2n s) = s) ∧ Abbrev (r = 256) ∧
  Abbrev (s0 = n2s ((s2n s * 256 + ORD c + 1 − r) DIV 256)) ∧ (r0 = 0) ∧
  ORD c < 256 ∧ (ORD c + 1 = 256) ∧ (q = 1) ∧ (ORD c = 255) ∧
  c ≠ #"\255"
Numeral: (0 ≤ (s2n s * 256 + ORD c + 1 − r) DIV 256 ∧
 0 ≤ s2n s * 256 + ORD c + 1 − r ∧ 0 ≤ s2n s * 256 + ORD c + 1 ∧
 0 ≤ s2n s * 256 + ORD c ∧ 0 ≤ s2n s * 256 ∧ 0 ≤ s2n s ∧ 0 ≤ r ∧
 0 ≤ r0 ∧ 0 ≤ ORD c + 1 ∧ 0 ≤ q ∧ 0 ≤ ORD c) ∧
∀a.
  0 ≤ ORD a ∧ (CHR (ORD a) = a) ∧ (n2s (s2n s) = s) ∧ Abbrev (r = 256) ∧
  Abbrev (s0 = n2s ((s2n s * 256 + ORD c + 1 − r) DIV 256)) ∧ (r0 = 0) ∧
  ORD c < 256 ∧ (ORD c + 1 = 256) ∧ (q = 1) ∧ (ORD c = 255) ∧
  c ≠ #"\255"
CNF2: ∀a.
  0 ≤ ORD c ∧ 0 ≤ q ∧ 0 ≤ ORD c + 1 ∧ 0 ≤ r0 ∧ 0 ≤ r ∧ 0 ≤ s2n s ∧
  0 ≤ s2n s * 256 ∧ 0 ≤ s2n s * 256 + ORD c ∧
  0 ≤ s2n s * 256 + ORD c + 1 ∧ 0 ≤ s2n s * 256 + ORD c + 1 − r ∧
  0 ≤ (s2n s * 256 + ORD c + 1 − r) DIV 256 ∧ 0 ≤ ORD a ∧
  (CHR (ORD a) = a) ∧ (n2s (s2n s) = s) ∧ Abbrev (r = 256) ∧
  Abbrev (s0 = n2s ((s2n s * 256 + ORD c + 1 − r) DIV 256)) ∧ (r0 = 0) ∧
  ORD c < 256 ∧ (ORD c + 1 = 256) ∧ (q = 1) ∧ (ORD c = 255) ∧
  c ≠ #"\255"
Status: Unsatisfiable

User theorems:  [] |- ∀n q. 0 < n ⇒ (q * n DIV n = q)
 [] |- ∀m n. m * n = n * m
 [] |- 0 < 256

Goal: [ORD #"\255" = 255,ORD #"\255" + 1 = 256,ORD #"\255" < 256,n2s (s2n s) = s] ?- n2s (256 * s2n s DIV 256) = s
CNF1: ∀m n.
  0 < 256 ∧ (m * n = n * m) ∧ ((n * m DIV m = n) ∨ ¬(0 < m)) ∧
  (n2s (s2n s) = s) ∧ ORD #"\255" < 256 ∧ (ORD #"\255" + 1 = 256) ∧
  (ORD #"\255" = 255) ∧ n2s (256 * s2n s DIV 256) ≠ s
Numeral: (0 ≤ ORD #"\255" + 1 ∧ 0 ≤ ORD #"\255" ∧ 0 ≤ 256 * s2n s DIV 256 ∧
 0 ≤ 256 * s2n s ∧ 0 ≤ s2n s) ∧
∀m n.
  0 ≤ n ∧ 0 ≤ m ⇒
  (0 ≤ m * n ∧ 0 ≤ n * m DIV m ∧ 0 ≤ n * m) ∧ 0 < 256 ∧
  (m * n = n * m) ∧ ((n * m DIV m = n) ∨ ¬(0 < m)) ∧ (n2s (s2n s) = s) ∧
  ORD #"\255" < 256 ∧ (ORD #"\255" + 1 = 256) ∧ (ORD #"\255" = 255) ∧
  n2s (256 * s2n s DIV 256) ≠ s
CNF2: ∀m n.
  0 ≤ s2n s ∧ 0 ≤ 256 * s2n s ∧ 0 ≤ 256 * s2n s DIV 256 ∧
  0 ≤ ORD #"\255" ∧ 0 ≤ ORD #"\255" + 1 ∧
  (0 ≤ n * m ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (0 ≤ n * m DIV m ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (0 ≤ m * n ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧ (0 < 256 ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  ((m * n = n * m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (¬(0 < m) ∨ (n * m DIV m = n) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  ((n2s (s2n s) = s) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (ORD #"\255" < 256 ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  ((ORD #"\255" + 1 = 256) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  ((ORD #"\255" = 255) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (n2s (256 * s2n s DIV 256) ≠ s ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m))
Status: Time Out

User theorems:  [] |- ∀n. s2n (n2s n) = n

Goal: [] ?- (n2s x = n2s y) ⇔ (x = y)
CNF1: ∀n.
  (s2n (n2s n) = n) ∧ ((n2s x = n2s y) ∨ (x = y)) ∧
  (n2s x ≠ n2s y ∨ x ≠ y)
Numeral: (0 ≤ x ∧ 0 ≤ y) ∧
∀n.
  0 ≤ n ⇒
  0 ≤ s2n (n2s n) ∧ (s2n (n2s n) = n) ∧ ((n2s x = n2s y) ∨ (x = y)) ∧
  (n2s x ≠ n2s y ∨ x ≠ y)
CNF2: ∀n.
  0 ≤ y ∧ 0 ≤ x ∧ (0 ≤ s2n (n2s n) ∨ ¬(0 ≤ n)) ∧
  ((s2n (n2s n) = n) ∨ ¬(0 ≤ n)) ∧
  ((x = y) ∨ (n2s x = n2s y) ∨ ¬(0 ≤ n)) ∧
  (x ≠ y ∨ n2s x ≠ n2s y ∨ ¬(0 ≤ n))
Status: Unsatisfiable

User theorems:  [] |- n2s (s2n s) = s

Goal: [] ?- (s2n x = s2n y) ⇔ (x = y)
CNF1: (n2s (s2n s) = s) ∧ ((s2n x = s2n y) ∨ (x = y)) ∧
(s2n x ≠ s2n y ∨ x ≠ y)
Numeral: (0 ≤ s2n s ∧ 0 ≤ s2n x ∧ 0 ≤ s2n y) ∧ (n2s (s2n s) = s) ∧
((s2n x = s2n y) ∨ (x = y)) ∧ (s2n x ≠ s2n y ∨ x ≠ y)
CNF2: 0 ≤ s2n y ∧ 0 ≤ s2n x ∧ 0 ≤ s2n s ∧ (n2s (s2n s) = s) ∧
((s2n x = s2n y) ∨ (x = y)) ∧ (s2n x ≠ s2n y ∨ x ≠ y)
Status: Unknown

User theorems:  [] |- n2s (s2n s) = s

Goal: [] ?- ∀s. ∃n. s = n2s n
CNF1: ∃s'. ∀n. (n2s (s2n s) = s) ∧ s' ≠ n2s n
Numeral: 0 ≤ s2n s ∧ ∃s'. ∀n. 0 ≤ n ⇒ (n2s (s2n s) = s) ∧ s' ≠ n2s n
CNF2: ∃s'.
  ∀n.
    0 ≤ s2n s ∧ ((n2s (s2n s) = s) ∨ ¬(0 ≤ n)) ∧ (s' ≠ n2s n ∨ ¬(0 ≤ n))
Status: Unknown

User theorems:  [] |- ∀n. s2n (n2s n) = n

Goal: [] ?- ∀n. ∃s. n = s2n s
CNF1: ∃n. ∀n' s. (s2n (n2s n') = n') ∧ n ≠ s2n s
Numeral: ∃n.
  0 ≤ n ∧
  ∀n' s.
    0 ≤ n' ⇒
    (0 ≤ s2n (n2s n') ∧ 0 ≤ s2n s) ∧ (s2n (n2s n') = n') ∧ n ≠ s2n s
CNF2: ∃n.
  ∀n' s.
    0 ≤ n ∧ (0 ≤ s2n s ∨ ¬(0 ≤ n')) ∧ (0 ≤ s2n (n2s n') ∨ ¬(0 ≤ n')) ∧
    ((s2n (n2s n') = n') ∨ ¬(0 ≤ n')) ∧ (n ≠ s2n s ∨ ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems: 
Goal: [(ALOOKUP l q = NONE) ⇔ ∀k v. MEM (k,v) l ⇒ k ≠ q] ?- ∃v. (v = r) ∨ MEM (q,v) l
CNF1: ∃k v.
  ∀k' v'.
    (ALOOKUP l q ≠ NONE ∨ k' ≠ q ∨ (k',v') ∉ set l) ∧
    ((ALOOKUP l q = NONE) ∨ MEM (k,v) l) ∧
    ((ALOOKUP l q = NONE) ∨ (k = q)) ∧ v' ≠ r ∧ (q,v') ∉ set l
Status: Unsatisfiable

User theorems: 
Goal: [] ?- (y = fm ' x) ∧ x ∈ FDOM fm ⇔ x ∈ FDOM fm ∧ (fm ' x = y)
CNF1: (x ∈ FDOM fm ∨ (fm ' x = y)) ∧ ((y = fm ' x) ∨ (fm ' x = y)) ∧
((y = fm ' x) ∨ x ∈ FDOM fm) ∧ x ∈ FDOM fm ∧
(x ∉ FDOM fm ∨ y ≠ fm ' x ∨ fm ' x ≠ y)
Status: Unsatisfiable

User theorems: 
Goal: [alist_to_fmap l1 = alist_to_fmap l2,∀l1 l2.
  (alist_to_fmap l1 = alist_to_fmap l2) ⇒
  (alist_to_fmap (ls ++ l1) = alist_to_fmap (ls ++ l2))] ?- alist_to_fmap (ls ++ l1) |+ (q,r) = alist_to_fmap (ls ++ l2) |+ (q,r)
CNF1: ∀l1' l2'.
  ((alist_to_fmap (ls ++ l1') = alist_to_fmap (ls ++ l2')) ∨
   alist_to_fmap l1' ≠ alist_to_fmap l2') ∧
  (alist_to_fmap l1 = alist_to_fmap l2) ∧
  alist_to_fmap (ls ++ l1) |+ (q,r) ≠ alist_to_fmap (ls ++ l2) |+ (q,r)
Status: Unsatisfiable

User theorems:  [] |- ∀al k v. (ALOOKUP al k = SOME v) ⇒ MEM (k,v) al

Goal: [ALOOKUP ls k = SOME v,¬∃p_2. MEM (k,p_2) ls] ?- fm ' k = v
CNF1: ∀al p_2 v'.
  (MEM (p_2,v') al ∨ ALOOKUP al p_2 ≠ SOME v') ∧ (k,p_2) ∉ set ls ∧
  (ALOOKUP ls k = SOME v) ∧ fm ' k ≠ v
Status: Satisfiable

User theorems:  [] |- ∀al k v. (ALOOKUP al k = SOME v) ⇒ MEM (k,v) al

Goal: [ALOOKUP ls k = SOME v,¬∃p_2. MEM (k,p_2) ls] ?- k ∈ FDOM fm
CNF1: ∀al p_2 v'.
  (MEM (p_2,v') al ∨ ALOOKUP al p_2 ≠ SOME v') ∧ (k,p_2) ∉ set ls ∧
  (ALOOKUP ls k = SOME v) ∧ k ∉ FDOM fm
Status: Satisfiable

User theorems:  [] |- ∀n l. n < LENGTH l ⇒ ∀f. EL n (MAP f l) = f (EL n l)

Goal: [n < m,EL n'' (q::MAP FST ls) = FST (EL n ls),∀m. m < n'' ⇒ EL m (q::MAP FST ls) ≠ FST (EL n ls),EL m (MAP FST ls) = FST (EL n ls),∀m'. m' < m ⇒ EL m' (MAP FST ls) ≠ FST (EL n ls),n < LENGTH ls,q ≠ FST (EL n ls),∀k'.
  ALOOKUP ls k' =
  if ∃y'. (k' = FST y') ∧ ∃n. n < LENGTH ls ∧ (y' = EL n ls) then
    SOME (EL (LEAST n. EL n (MAP FST ls) = k') (MAP SND ls))
  else NONE] ?- EL m (MAP SND ls) = EL n'' (r::MAP SND ls)
CNF1: ∀m' l f k'.
  ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
  (ALOOKUP ls k' =
   if ∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls) then
     SOME (EL (LEAST n. EL n (MAP FST ls) = k') (MAP SND ls))
   else NONE) ∧ q ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
  (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
  (EL m (MAP FST ls) = FST (EL n ls)) ∧
  (EL m' (q::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < n'')) ∧
  (EL n'' (q::MAP FST ls) = FST (EL n ls)) ∧ n < m ∧
  EL m (MAP SND ls) ≠ EL n'' (r::MAP SND ls)
Lambda: ∀m' l f k'.
  ∃f1.
    (∀n. f1 n ⇔ (EL n (MAP FST ls) = k')) ∧
    ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
    (ALOOKUP ls k' =
     if ∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls) then
       SOME (EL ($LEAST f1) (MAP SND ls))
     else NONE) ∧ q ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
    (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
    (EL m (MAP FST ls) = FST (EL n ls)) ∧
    (EL m' (q::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < n'')) ∧
    (EL n'' (q::MAP FST ls) = FST (EL n ls)) ∧ n < m ∧
    EL m (MAP SND ls) ≠ EL n'' (r::MAP SND ls)
Boolean: ∀m' l f k'.
  ((∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     (∀n. f1 n ⇔ (EL n (MAP FST ls) = k')) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if T then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     q ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (EL m (MAP FST ls) = FST (EL n ls)) ∧
     (EL m' (q::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < n'')) ∧
     (EL n'' (q::MAP FST ls) = FST (EL n ls)) ∧ n < m ∧
     EL m (MAP SND ls) ≠ EL n'' (r::MAP SND ls)) ∧
  (¬(∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     (∀n. f1 n ⇔ (EL n (MAP FST ls) = k')) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if F then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     q ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (EL m (MAP FST ls) = FST (EL n ls)) ∧
     (EL m' (q::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < n'')) ∧
     (EL n'' (q::MAP FST ls) = FST (EL n ls)) ∧ n < m ∧
     EL m (MAP SND ls) ≠ EL n'' (r::MAP SND ls))
Numeral: (0 ≤ LENGTH ls ∧ 0 ≤ n ∧ 0 ≤ m ∧ 0 ≤ n'') ∧
∀m' l f k'.
  0 ≤ m' ⇒
  0 ≤ LENGTH l ∧
  ((∃y' n. 0 ≤ n ∧ (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     0 ≤ $LEAST f1 ∧ (∀n. 0 ≤ n ⇒ (f1 n ⇔ (EL n (MAP FST ls) = k'))) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if T then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     q ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (EL m (MAP FST ls) = FST (EL n ls)) ∧
     (EL m' (q::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < n'')) ∧
     (EL n'' (q::MAP FST ls) = FST (EL n ls)) ∧ n < m ∧
     EL m (MAP SND ls) ≠ EL n'' (r::MAP SND ls)) ∧
  (¬(∃y' n. 0 ≤ n ∧ (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     0 ≤ $LEAST f1 ∧ (∀n. 0 ≤ n ⇒ (f1 n ⇔ (EL n (MAP FST ls) = k'))) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if F then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     q ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (EL m (MAP FST ls) = FST (EL n ls)) ∧
     (EL m' (q::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < n'')) ∧
     (EL n'' (q::MAP FST ls) = FST (EL n ls)) ∧ n < m ∧
     EL m (MAP SND ls) ≠ EL n'' (r::MAP SND ls))
CNF2: ∃f1 f1' y' n'.
  ∀m' l f k' n''' y'' n''''.
    0 ≤ n'' ∧ 0 ≤ m ∧ 0 ≤ n ∧ 0 ≤ LENGTH ls ∧
    (0 ≤ LENGTH l ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n'''' ls ∨ ¬(n'''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n'''') ∨ EL m (MAP SND ls) ≠ EL n'' (r::MAP SND ls) ∨
     ¬(0 ≤ m')) ∧
    (y'' ≠ EL n'''' ls ∨ ¬(n'''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n'''') ∨ n < m ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n'''' ls ∨ ¬(n'''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n'''') ∨ (EL n'' (q::MAP FST ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    (y'' ≠ EL n'''' ls ∨ ¬(n'''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n'''') ∨ EL m' (q::MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < n'') ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n'''' ls ∨ ¬(n'''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n'''') ∨ (EL m (MAP FST ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n'''' ls ∨ ¬(n'''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n'''') ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m) ∨
     ¬(0 ≤ m')) ∧
    (y'' ≠ EL n'''' ls ∨ ¬(n'''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n'''') ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n'''' ls ∨ ¬(n'''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n'''') ∨ q ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n'''' ls ∨ ¬(n'''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n'''') ∨
     (ALOOKUP ls k' = SOME (EL ($LEAST (f1 m' l f k')) (MAP SND ls))) ∨
     ¬(0 ≤ m')) ∧
    (y'' ≠ EL n'''' ls ∨ ¬(n'''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n'''') ∨ (EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l) ∨
     ¬(0 ≤ m')) ∧
    (y'' ≠ EL n'''' ls ∨ ¬(n'''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n'''') ∨ EL n''' (MAP FST ls) ≠ k' ∨ f1 m' l f k' n''' ∨
     ¬(0 ≤ n''') ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n'''' ls ∨ ¬(n'''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n'''') ∨ (EL n''' (MAP FST ls) = k') ∨ ¬f1 m' l f k' n''' ∨
     ¬(0 ≤ n''') ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n'''' ls ∨ ¬(n'''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n'''') ∨ 0 ≤ $LEAST (f1 m' l f k') ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ EL m (MAP SND ls) ≠ EL n'' (r::MAP SND ls) ∨
     ¬(0 ≤ m')) ∧ (0 ≤ n' m' l f k' ∨ n < m ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (EL n'' (q::MAP FST ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ EL m' (q::MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < n'') ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (EL m (MAP FST ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m) ∨
     ¬(0 ≤ m')) ∧ (0 ≤ n' m' l f k' ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ q ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (ALOOKUP ls k' = NONE) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (EL m' (MAP f l) = f (EL m' l)) ∨
     ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ EL n''' (MAP FST ls) ≠ k' ∨ f1' m' l f k' n''' ∨
     ¬(0 ≤ n''') ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (EL n''' (MAP FST ls) = k') ∨
     ¬f1' m' l f k' n''' ∨ ¬(0 ≤ n''') ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ 0 ≤ $LEAST (f1' m' l f k') ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨
     EL m (MAP SND ls) ≠ EL n'' (r::MAP SND ls) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ n < m ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨
     (EL n'' (q::MAP FST ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ EL m' (q::MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < n'') ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (EL m (MAP FST ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < m) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ q ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (ALOOKUP ls k' = NONE) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (EL m' (MAP f l) = f (EL m' l)) ∨
     ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ EL n''' (MAP FST ls) ≠ k' ∨
     f1' m' l f k' n''' ∨ ¬(0 ≤ n''') ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (EL n''' (MAP FST ls) = k') ∨
     ¬f1' m' l f k' n''' ∨ ¬(0 ≤ n''') ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ 0 ≤ $LEAST (f1' m' l f k') ∨
     ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨
     EL m (MAP SND ls) ≠ EL n'' (r::MAP SND ls) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ n < m ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨
     (EL n'' (q::MAP FST ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ EL m' (q::MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < n'') ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (EL m (MAP FST ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < m) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ q ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (ALOOKUP ls k' = NONE) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (EL m' (MAP f l) = f (EL m' l)) ∨
     ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ EL n''' (MAP FST ls) ≠ k' ∨
     f1' m' l f k' n''' ∨ ¬(0 ≤ n''') ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (EL n''' (MAP FST ls) = k') ∨
     ¬f1' m' l f k' n''' ∨ ¬(0 ≤ n''') ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ 0 ≤ $LEAST (f1' m' l f k') ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     0 ≤ $LEAST (f1' m' l f k') ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (EL n''' (MAP FST ls) = k') ∨ ¬f1' m' l f k' n''' ∨ ¬(0 ≤ n''') ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ EL n''' (MAP FST ls) ≠ k' ∨
     f1' m' l f k' n''' ∨ ¬(0 ≤ n''') ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ (ALOOKUP ls k' = NONE) ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ q ≠ FST (EL n ls) ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ n < LENGTH ls ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (EL m (MAP FST ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     EL m' (q::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < n'') ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (EL n'' (q::MAP FST ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ n < m ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     EL m (MAP SND ls) ≠ EL n'' (r::MAP SND ls) ∨ ¬(0 ≤ m'))
Status: Unknown

User theorems:  [] |- ∀n l. n < LENGTH l ⇒ ∀f. EL n (MAP f l) = f (EL n l)

Goal: [EL n (MAP FST ls) ≠ FST (EL n ls),SUC n < z,m < LENGTH ls,¬(n < m),EL z (h::MAP FST ls) = FST (EL n ls),∀m. m < z ⇒ EL m (h::MAP FST ls) ≠ FST (EL n ls),FST (EL m ls) = FST (EL n ls),∀m'. m' < m ⇒ EL m' (MAP FST ls) ≠ FST (EL n ls),n < LENGTH ls,h ≠ FST (EL n ls),∀k'.
  ALOOKUP ls k' =
  if ∃y'. (k' = FST y') ∧ ∃n. n < LENGTH ls ∧ (y' = EL n ls) then
    SOME (EL (LEAST n. EL n (MAP FST ls) = k') (MAP SND ls))
  else NONE] ?- SND (EL m ls) = EL z (r::MAP SND ls)
CNF1: ∀m' l f k'.
  ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
  (ALOOKUP ls k' =
   if ∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls) then
     SOME (EL (LEAST n. EL n (MAP FST ls) = k') (MAP SND ls))
   else NONE) ∧ h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
  (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
  (FST (EL m ls) = FST (EL n ls)) ∧
  (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < z)) ∧
  (EL z (h::MAP FST ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
  SUC n < z ∧ EL n (MAP FST ls) ≠ FST (EL n ls) ∧
  SND (EL m ls) ≠ EL z (r::MAP SND ls)
Lambda: ∀m' l f k'.
  ∃f1.
    (∀n. f1 n ⇔ (EL n (MAP FST ls) = k')) ∧
    ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
    (ALOOKUP ls k' =
     if ∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls) then
       SOME (EL ($LEAST f1) (MAP SND ls))
     else NONE) ∧ h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
    (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
    (FST (EL m ls) = FST (EL n ls)) ∧
    (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < z)) ∧
    (EL z (h::MAP FST ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
    SUC n < z ∧ EL n (MAP FST ls) ≠ FST (EL n ls) ∧
    SND (EL m ls) ≠ EL z (r::MAP SND ls)
Boolean: ∀m' l f k'.
  ((∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     (∀n. f1 n ⇔ (EL n (MAP FST ls) = k')) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if T then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (FST (EL m ls) = FST (EL n ls)) ∧
     (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < z)) ∧
     (EL z (h::MAP FST ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
     SUC n < z ∧ EL n (MAP FST ls) ≠ FST (EL n ls) ∧
     SND (EL m ls) ≠ EL z (r::MAP SND ls)) ∧
  (¬(∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     (∀n. f1 n ⇔ (EL n (MAP FST ls) = k')) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if F then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (FST (EL m ls) = FST (EL n ls)) ∧
     (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < z)) ∧
     (EL z (h::MAP FST ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
     SUC n < z ∧ EL n (MAP FST ls) ≠ FST (EL n ls) ∧
     SND (EL m ls) ≠ EL z (r::MAP SND ls))
Numeral: (0 ≤ LENGTH ls ∧ 0 ≤ SUC n ∧ 0 ≤ n ∧ 0 ≤ m ∧ 0 ≤ z) ∧
∀m' l f k'.
  0 ≤ m' ⇒
  0 ≤ LENGTH l ∧
  ((∃y' n. 0 ≤ n ∧ (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     0 ≤ $LEAST f1 ∧ (∀n. 0 ≤ n ⇒ (f1 n ⇔ (EL n (MAP FST ls) = k'))) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if T then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (FST (EL m ls) = FST (EL n ls)) ∧
     (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < z)) ∧
     (EL z (h::MAP FST ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
     SUC n < z ∧ EL n (MAP FST ls) ≠ FST (EL n ls) ∧
     SND (EL m ls) ≠ EL z (r::MAP SND ls)) ∧
  (¬(∃y' n. 0 ≤ n ∧ (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     0 ≤ $LEAST f1 ∧ (∀n. 0 ≤ n ⇒ (f1 n ⇔ (EL n (MAP FST ls) = k'))) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if F then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (FST (EL m ls) = FST (EL n ls)) ∧
     (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < z)) ∧
     (EL z (h::MAP FST ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
     SUC n < z ∧ EL n (MAP FST ls) ≠ FST (EL n ls) ∧
     SND (EL m ls) ≠ EL z (r::MAP SND ls))
CNF2: ∃f1 f1' y' n'.
  ∀m' l f k' n'' y'' n'''.
    0 ≤ z ∧ 0 ≤ m ∧ 0 ≤ n ∧ 0 ≤ SUC n ∧ 0 ≤ LENGTH ls ∧
    (0 ≤ LENGTH l ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ SND (EL m ls) ≠ EL z (r::MAP SND ls) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ EL n (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ SUC n < z ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ m < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ ¬(n < m) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ (EL z (h::MAP FST ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < z) ∨
     ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ (FST (EL m ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m) ∨
     ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ h ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨
     (ALOOKUP ls k' = SOME (EL ($LEAST (f1 m' l f k')) (MAP SND ls))) ∨
     ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ (EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l) ∨
     ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ EL n'' (MAP FST ls) ≠ k' ∨ f1 m' l f k' n'' ∨
     ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ (EL n'' (MAP FST ls) = k') ∨ ¬f1 m' l f k' n'' ∨
     ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ 0 ≤ $LEAST (f1 m' l f k') ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ SND (EL m ls) ≠ EL z (r::MAP SND ls) ∨
     ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ EL n (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ SUC n < z ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ m < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ ¬(n < m) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (EL z (h::MAP FST ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < z) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (FST (EL m ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m) ∨
     ¬(0 ≤ m')) ∧ (0 ≤ n' m' l f k' ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ h ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (ALOOKUP ls k' = NONE) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (EL m' (MAP f l) = f (EL m' l)) ∨
     ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ EL n'' (MAP FST ls) ≠ k' ∨ f1' m' l f k' n'' ∨
     ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (EL n'' (MAP FST ls) = k') ∨
     ¬f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ 0 ≤ $LEAST (f1' m' l f k') ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ SND (EL m ls) ≠ EL z (r::MAP SND ls) ∨
     ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ EL n (MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(0 ≤ m')) ∧ ((k' = FST (y' m' l f k')) ∨ SUC n < z ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ m < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ ¬(n < m) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨
     (EL z (h::MAP FST ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < z) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (FST (EL m ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < m) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ h ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (ALOOKUP ls k' = NONE) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (EL m' (MAP f l) = f (EL m' l)) ∨
     ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ EL n'' (MAP FST ls) ≠ k' ∨
     f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (EL n'' (MAP FST ls) = k') ∨
     ¬f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ 0 ≤ $LEAST (f1' m' l f k') ∨
     ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ SND (EL m ls) ≠ EL z (r::MAP SND ls) ∨
     ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ EL n (MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(0 ≤ m')) ∧ (n' m' l f k' < LENGTH ls ∨ SUC n < z ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ m < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ ¬(n < m) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (EL z (h::MAP FST ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < z) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (FST (EL m ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < m) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ h ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (ALOOKUP ls k' = NONE) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (EL m' (MAP f l) = f (EL m' l)) ∨
     ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ EL n'' (MAP FST ls) ≠ k' ∨
     f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (EL n'' (MAP FST ls) = k') ∨
     ¬f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ 0 ≤ $LEAST (f1' m' l f k') ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     0 ≤ $LEAST (f1' m' l f k') ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (EL n'' (MAP FST ls) = k') ∨ ¬f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ EL n'' (MAP FST ls) ≠ k' ∨
     f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ (ALOOKUP ls k' = NONE) ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ h ≠ FST (EL n ls) ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ n < LENGTH ls ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (FST (EL m ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < z) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (EL z (h::MAP FST ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ ¬(n < m) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ m < LENGTH ls ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ SUC n < z ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     EL n (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     SND (EL m ls) ≠ EL z (r::MAP SND ls) ∨ ¬(0 ≤ m'))
Status: Unknown

User theorems:  [] |- ∀n l. n < LENGTH l ⇒ ∀f. EL n (MAP f l) = f (EL n l)

Goal: [EL m (MAP FST ls) ≠ FST (EL n ls),m < z,T,z < LENGTH ls,¬(n < z),m < LENGTH ls,¬(n < m),FST (EL z ls) = FST (EL n ls),∀m. m < SUC z ⇒ EL m (h::MAP FST ls) ≠ FST (EL n ls),FST (EL m ls) = FST (EL n ls),∀m'. m' < m ⇒ EL m' (MAP FST ls) ≠ FST (EL n ls),n < LENGTH ls,h ≠ FST (EL n ls),∀k'.
  ALOOKUP ls k' =
  if ∃y'. (k' = FST y') ∧ ∃n. n < LENGTH ls ∧ (y' = EL n ls) then
    SOME (EL (LEAST n. EL n (MAP FST ls) = k') (MAP SND ls))
  else NONE] ?- SND (EL m ls) = SND (EL z ls)
CNF1: ∀m' l f k'.
  ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
  (ALOOKUP ls k' =
   if ∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls) then
     SOME (EL (LEAST n. EL n (MAP FST ls) = k') (MAP SND ls))
   else NONE) ∧ h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
  (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
  (FST (EL m ls) = FST (EL n ls)) ∧
  (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < SUC z)) ∧
  (FST (EL z ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
  ¬(n < z) ∧ z < LENGTH ls ∧ m < z ∧ EL m (MAP FST ls) ≠ FST (EL n ls) ∧
  SND (EL m ls) ≠ SND (EL z ls)
Lambda: ∀m' l f k'.
  ∃f1.
    (∀n. f1 n ⇔ (EL n (MAP FST ls) = k')) ∧
    ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
    (ALOOKUP ls k' =
     if ∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls) then
       SOME (EL ($LEAST f1) (MAP SND ls))
     else NONE) ∧ h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
    (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
    (FST (EL m ls) = FST (EL n ls)) ∧
    (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < SUC z)) ∧
    (FST (EL z ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
    ¬(n < z) ∧ z < LENGTH ls ∧ m < z ∧
    EL m (MAP FST ls) ≠ FST (EL n ls) ∧ SND (EL m ls) ≠ SND (EL z ls)
Boolean: ∀m' l f k'.
  ((∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     (∀n. f1 n ⇔ (EL n (MAP FST ls) = k')) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if T then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (FST (EL m ls) = FST (EL n ls)) ∧
     (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < SUC z)) ∧
     (FST (EL z ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
     ¬(n < z) ∧ z < LENGTH ls ∧ m < z ∧
     EL m (MAP FST ls) ≠ FST (EL n ls) ∧
     SND (EL m ls) ≠ SND (EL z ls)) ∧
  (¬(∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     (∀n. f1 n ⇔ (EL n (MAP FST ls) = k')) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if F then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (FST (EL m ls) = FST (EL n ls)) ∧
     (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < SUC z)) ∧
     (FST (EL z ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
     ¬(n < z) ∧ z < LENGTH ls ∧ m < z ∧
     EL m (MAP FST ls) ≠ FST (EL n ls) ∧ SND (EL m ls) ≠ SND (EL z ls))
Numeral: (0 ≤ SUC z ∧ 0 ≤ LENGTH ls ∧ 0 ≤ n ∧ 0 ≤ m ∧ 0 ≤ z) ∧
∀m' l f k'.
  0 ≤ m' ⇒
  0 ≤ LENGTH l ∧
  ((∃y' n. 0 ≤ n ∧ (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     0 ≤ $LEAST f1 ∧ (∀n. 0 ≤ n ⇒ (f1 n ⇔ (EL n (MAP FST ls) = k'))) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if T then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (FST (EL m ls) = FST (EL n ls)) ∧
     (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < SUC z)) ∧
     (FST (EL z ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
     ¬(n < z) ∧ z < LENGTH ls ∧ m < z ∧
     EL m (MAP FST ls) ≠ FST (EL n ls) ∧
     SND (EL m ls) ≠ SND (EL z ls)) ∧
  (¬(∃y' n. 0 ≤ n ∧ (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     0 ≤ $LEAST f1 ∧ (∀n. 0 ≤ n ⇒ (f1 n ⇔ (EL n (MAP FST ls) = k'))) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if F then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (FST (EL m ls) = FST (EL n ls)) ∧
     (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < SUC z)) ∧
     (FST (EL z ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
     ¬(n < z) ∧ z < LENGTH ls ∧ m < z ∧
     EL m (MAP FST ls) ≠ FST (EL n ls) ∧ SND (EL m ls) ≠ SND (EL z ls))
CNF2: ∃f1 f1' y' n'.
  ∀m' l f k' n'' y'' n'''.
    0 ≤ z ∧ 0 ≤ m ∧ 0 ≤ n ∧ 0 ≤ LENGTH ls ∧ 0 ≤ SUC z ∧
    (0 ≤ LENGTH l ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ SND (EL m ls) ≠ SND (EL z ls) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ EL m (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ m < z ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ z < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ ¬(n < z) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ m < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ ¬(n < m) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ (FST (EL z ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < SUC z) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ (FST (EL m ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m) ∨
     ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ h ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨
     (ALOOKUP ls k' = SOME (EL ($LEAST (f1 m' l f k')) (MAP SND ls))) ∨
     ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ (EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l) ∨
     ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ EL n'' (MAP FST ls) ≠ k' ∨ f1 m' l f k' n'' ∨
     ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ (EL n'' (MAP FST ls) = k') ∨ ¬f1 m' l f k' n'' ∨
     ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ 0 ≤ $LEAST (f1 m' l f k') ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ SND (EL m ls) ≠ SND (EL z ls) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ EL m (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ m < z ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ z < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ ¬(n < z) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ m < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ ¬(n < m) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (FST (EL z ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < SUC z) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (FST (EL m ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m) ∨
     ¬(0 ≤ m')) ∧ (0 ≤ n' m' l f k' ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ h ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (ALOOKUP ls k' = NONE) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (EL m' (MAP f l) = f (EL m' l)) ∨
     ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ EL n'' (MAP FST ls) ≠ k' ∨ f1' m' l f k' n'' ∨
     ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (EL n'' (MAP FST ls) = k') ∨
     ¬f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ 0 ≤ $LEAST (f1' m' l f k') ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ SND (EL m ls) ≠ SND (EL z ls) ∨
     ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ EL m (MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(0 ≤ m')) ∧ ((k' = FST (y' m' l f k')) ∨ m < z ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ z < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ ¬(n < z) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ m < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ ¬(n < m) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (FST (EL z ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < SUC z) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (FST (EL m ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < m) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ h ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (ALOOKUP ls k' = NONE) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (EL m' (MAP f l) = f (EL m' l)) ∨
     ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ EL n'' (MAP FST ls) ≠ k' ∨
     f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (EL n'' (MAP FST ls) = k') ∨
     ¬f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ 0 ≤ $LEAST (f1' m' l f k') ∨
     ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ SND (EL m ls) ≠ SND (EL z ls) ∨
     ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ EL m (MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(0 ≤ m')) ∧ (n' m' l f k' < LENGTH ls ∨ m < z ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ z < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ ¬(n < z) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ m < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ ¬(n < m) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (FST (EL z ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < SUC z) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (FST (EL m ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < m) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ h ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (ALOOKUP ls k' = NONE) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (EL m' (MAP f l) = f (EL m' l)) ∨
     ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ EL n'' (MAP FST ls) ≠ k' ∨
     f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (EL n'' (MAP FST ls) = k') ∨
     ¬f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ 0 ≤ $LEAST (f1' m' l f k') ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     0 ≤ $LEAST (f1' m' l f k') ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (EL n'' (MAP FST ls) = k') ∨ ¬f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ EL n'' (MAP FST ls) ≠ k' ∨
     f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ (ALOOKUP ls k' = NONE) ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ h ≠ FST (EL n ls) ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ n < LENGTH ls ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (FST (EL m ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < SUC z) ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (FST (EL z ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ ¬(n < m) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ m < LENGTH ls ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ ¬(n < z) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ z < LENGTH ls ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ m < z ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     EL m (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     SND (EL m ls) ≠ SND (EL z ls) ∨ ¬(0 ≤ m'))
Status: Unknown

User theorems:  [] |- ∀n l. n < LENGTH l ⇒ ∀f. EL n (MAP f l) = f (EL n l)

Goal: [z < m,¬(m < z),z < LENGTH ls,¬(n < z),m < LENGTH ls,¬(n < m),FST (EL z ls) = FST (EL n ls),∀m. m < SUC z ⇒ EL m (h::MAP FST ls) ≠ FST (EL n ls),FST (EL m ls) = FST (EL n ls),∀m'. m' < m ⇒ EL m' (MAP FST ls) ≠ FST (EL n ls),n < LENGTH ls,h ≠ FST (EL n ls),∀k'.
  ALOOKUP ls k' =
  if ∃y'. (k' = FST y') ∧ ∃n. n < LENGTH ls ∧ (y' = EL n ls) then
    SOME (EL (LEAST n. EL n (MAP FST ls) = k') (MAP SND ls))
  else NONE] ?- SND (EL m ls) = SND (EL z ls)
CNF1: ∀m' l f k'.
  ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
  (ALOOKUP ls k' =
   if ∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls) then
     SOME (EL (LEAST n. EL n (MAP FST ls) = k') (MAP SND ls))
   else NONE) ∧ h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
  (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
  (FST (EL m ls) = FST (EL n ls)) ∧
  (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < SUC z)) ∧
  (FST (EL z ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
  ¬(n < z) ∧ z < LENGTH ls ∧ ¬(m < z) ∧ z < m ∧
  SND (EL m ls) ≠ SND (EL z ls)
Lambda: ∀m' l f k'.
  ∃f1.
    (∀n. f1 n ⇔ (EL n (MAP FST ls) = k')) ∧
    ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
    (ALOOKUP ls k' =
     if ∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls) then
       SOME (EL ($LEAST f1) (MAP SND ls))
     else NONE) ∧ h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
    (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
    (FST (EL m ls) = FST (EL n ls)) ∧
    (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < SUC z)) ∧
    (FST (EL z ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
    ¬(n < z) ∧ z < LENGTH ls ∧ ¬(m < z) ∧ z < m ∧
    SND (EL m ls) ≠ SND (EL z ls)
Boolean: ∀m' l f k'.
  ((∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     (∀n. f1 n ⇔ (EL n (MAP FST ls) = k')) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if T then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (FST (EL m ls) = FST (EL n ls)) ∧
     (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < SUC z)) ∧
     (FST (EL z ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
     ¬(n < z) ∧ z < LENGTH ls ∧ ¬(m < z) ∧ z < m ∧
     SND (EL m ls) ≠ SND (EL z ls)) ∧
  (¬(∃y' n. (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     (∀n. f1 n ⇔ (EL n (MAP FST ls) = k')) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if F then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (FST (EL m ls) = FST (EL n ls)) ∧
     (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < SUC z)) ∧
     (FST (EL z ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
     ¬(n < z) ∧ z < LENGTH ls ∧ ¬(m < z) ∧ z < m ∧
     SND (EL m ls) ≠ SND (EL z ls))
Numeral: (0 ≤ SUC z ∧ 0 ≤ n ∧ 0 ≤ LENGTH ls ∧ 0 ≤ m ∧ 0 ≤ z) ∧
∀m' l f k'.
  0 ≤ m' ⇒
  0 ≤ LENGTH l ∧
  ((∃y' n. 0 ≤ n ∧ (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     0 ≤ $LEAST f1 ∧ (∀n. 0 ≤ n ⇒ (f1 n ⇔ (EL n (MAP FST ls) = k'))) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if T then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (FST (EL m ls) = FST (EL n ls)) ∧
     (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < SUC z)) ∧
     (FST (EL z ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
     ¬(n < z) ∧ z < LENGTH ls ∧ ¬(m < z) ∧ z < m ∧
     SND (EL m ls) ≠ SND (EL z ls)) ∧
  (¬(∃y' n. 0 ≤ n ∧ (k' = FST y') ∧ n < LENGTH ls ∧ (y' = EL n ls)) ⇒
   ∃f1.
     0 ≤ $LEAST f1 ∧ (∀n. 0 ≤ n ⇒ (f1 n ⇔ (EL n (MAP FST ls) = k'))) ∧
     ((EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l)) ∧
     (ALOOKUP ls k' =
      if F then SOME (EL ($LEAST f1) (MAP SND ls)) else NONE) ∧
     h ≠ FST (EL n ls) ∧ n < LENGTH ls ∧
     (EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m)) ∧
     (FST (EL m ls) = FST (EL n ls)) ∧
     (EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < SUC z)) ∧
     (FST (EL z ls) = FST (EL n ls)) ∧ ¬(n < m) ∧ m < LENGTH ls ∧
     ¬(n < z) ∧ z < LENGTH ls ∧ ¬(m < z) ∧ z < m ∧
     SND (EL m ls) ≠ SND (EL z ls))
CNF2: ∃f1 f1' y' n'.
  ∀m' l f k' n'' y'' n'''.
    0 ≤ z ∧ 0 ≤ m ∧ 0 ≤ LENGTH ls ∧ 0 ≤ n ∧ 0 ≤ SUC z ∧
    (0 ≤ LENGTH l ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ SND (EL m ls) ≠ SND (EL z ls) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ z < m ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ ¬(m < z) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ z < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ ¬(n < z) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ m < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ ¬(n < m) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ (FST (EL z ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < SUC z) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ (FST (EL m ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m) ∨
     ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ h ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨
     (ALOOKUP ls k' = SOME (EL ($LEAST (f1 m' l f k')) (MAP SND ls))) ∨
     ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ (EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l) ∨
     ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ EL n'' (MAP FST ls) ≠ k' ∨ f1 m' l f k' n'' ∨
     ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ (EL n'' (MAP FST ls) = k') ∨ ¬f1 m' l f k' n'' ∨
     ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (y'' ≠ EL n''' ls ∨ ¬(n''' < LENGTH ls) ∨ k' ≠ FST y'' ∨
     ¬(0 ≤ n''') ∨ 0 ≤ $LEAST (f1 m' l f k') ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ SND (EL m ls) ≠ SND (EL z ls) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ z < m ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ ¬(m < z) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ z < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ ¬(n < z) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ m < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ ¬(n < m) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (FST (EL z ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < SUC z) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (FST (EL m ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m) ∨
     ¬(0 ≤ m')) ∧ (0 ≤ n' m' l f k' ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ h ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (ALOOKUP ls k' = NONE) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (EL m' (MAP f l) = f (EL m' l)) ∨
     ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ EL n'' (MAP FST ls) ≠ k' ∨ f1' m' l f k' n'' ∨
     ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ (EL n'' (MAP FST ls) = k') ∨
     ¬f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (0 ≤ n' m' l f k' ∨ 0 ≤ $LEAST (f1' m' l f k') ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ SND (EL m ls) ≠ SND (EL z ls) ∨
     ¬(0 ≤ m')) ∧ ((k' = FST (y' m' l f k')) ∨ z < m ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ ¬(m < z) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ z < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ ¬(n < z) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ m < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ ¬(n < m) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (FST (EL z ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < SUC z) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (FST (EL m ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < m) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ h ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (ALOOKUP ls k' = NONE) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (EL m' (MAP f l) = f (EL m' l)) ∨
     ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ EL n'' (MAP FST ls) ≠ k' ∨
     f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ (EL n'' (MAP FST ls) = k') ∨
     ¬f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    ((k' = FST (y' m' l f k')) ∨ 0 ≤ $LEAST (f1' m' l f k') ∨
     ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ SND (EL m ls) ≠ SND (EL z ls) ∨
     ¬(0 ≤ m')) ∧ (n' m' l f k' < LENGTH ls ∨ z < m ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ ¬(m < z) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ z < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ ¬(n < z) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ m < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ ¬(n < m) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (FST (EL z ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < SUC z) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (FST (EL m ls) = FST (EL n ls)) ∨
     ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ EL m' (MAP FST ls) ≠ FST (EL n ls) ∨
     ¬(m' < m) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ n < LENGTH ls ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ h ≠ FST (EL n ls) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (ALOOKUP ls k' = NONE) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (EL m' (MAP f l) = f (EL m' l)) ∨
     ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ EL n'' (MAP FST ls) ≠ k' ∨
     f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ (EL n'' (MAP FST ls) = k') ∨
     ¬f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    (n' m' l f k' < LENGTH ls ∨ 0 ≤ $LEAST (f1' m' l f k') ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     0 ≤ $LEAST (f1' m' l f k') ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (EL n'' (MAP FST ls) = k') ∨ ¬f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ EL n'' (MAP FST ls) ≠ k' ∨
     f1' m' l f k' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (EL m' (MAP f l) = f (EL m' l)) ∨ ¬(m' < LENGTH l) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ (ALOOKUP ls k' = NONE) ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ h ≠ FST (EL n ls) ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ n < LENGTH ls ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     EL m' (MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < m) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (FST (EL m ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     EL m' (h::MAP FST ls) ≠ FST (EL n ls) ∨ ¬(m' < SUC z) ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     (FST (EL z ls) = FST (EL n ls)) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ ¬(n < m) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ m < LENGTH ls ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ ¬(n < z) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ z < LENGTH ls ∨
     ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ ¬(m < z) ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨ z < m ∨ ¬(0 ≤ m')) ∧
    ((y' m' l f k' = EL (n' m' l f k') ls) ∨
     SND (EL m ls) ≠ SND (EL z ls) ∨ ¬(0 ≤ m'))
Status: Unknown

User theorems:  [] |- wf f ⇒ ∃a. f [] = SOME a

Goal: [x ∈ FDOM g,x ∉ FDOM f,∀k. k ∈ FDOM g ⇒ wf (g ' k),∀k. k ∈ FDOM f ⇒ wf (f ' k)] ?- ∃a. g ' x [] = SOME a
CNF1: ∃a.
  ∀k a'.
    ((f [] = SOME a) ∨ ¬wf f) ∧ (wf (f ' k) ∨ k ∉ FDOM f) ∧
    (wf (g ' k) ∨ k ∉ FDOM g) ∧ x ∉ FDOM f ∧ x ∈ FDOM g ∧
    g ' x [] ≠ SOME a'
Status: Satisfiable

User theorems:  [] |- wf f ⇒ ∃a. f [] = SOME a

Goal: [x ∉ FDOM g,x ∈ FDOM f,∀k. k ∈ FDOM g ⇒ wf (g ' k),∀k. k ∈ FDOM f ⇒ wf (f ' k)] ?- ∃a. f ' x [] = SOME a
CNF1: ∃a.
  ∀k a'.
    ((f [] = SOME a) ∨ ¬wf f) ∧ (wf (f ' k) ∨ k ∉ FDOM f) ∧
    (wf (g ' k) ∨ k ∉ FDOM g) ∧ x ∈ FDOM f ∧ x ∉ FDOM g ∧
    f ' x [] ≠ SOME a'
Status: Satisfiable

User theorems:  [] |- (∀a. fromF (toF a) = a) ∧ ∀r. wf r ⇔ (toF (fromF r) = r)

Goal: [] ?- ∀a. ∃c. wf c ∧ (a = fromF c)
CNF1: ∃a.
  ∀a' r c.
    (¬wf r ∨ (toF (fromF r) = r)) ∧ (wf r ∨ toF (fromF r) ≠ r) ∧
    (fromF (toF a') = a') ∧ (¬wf c ∨ a ≠ fromF c)
Status: Satisfiable

User theorems:  [] |- (∀a. fromF (toF a) = a) ∧ ∀r. wf r ⇔ (toF (fromF r) = r)

Goal: [] ?- wf x ∧ wf y ⇒ ((fromF x = fromF y) ⇔ (x = y))
CNF1: ∀a r.
  (¬wf r ∨ (toF (fromF r) = r)) ∧ (wf r ∨ toF (fromF r) ≠ r) ∧
  (fromF (toF a) = a) ∧ wf y ∧ wf x ∧ ((fromF x = fromF y) ∨ (x = y)) ∧
  (fromF x ≠ fromF y ∨ x ≠ y)
Status: Satisfiable

User theorems:  [] |- (∀a. fromF (toF a) = a) ∧ ∀r. wf r ⇔ (toF (fromF r) = r)

Goal: [] ?- (toF f = toF g) ⇔ (f = g)
CNF1: ∀a r.
  (¬wf r ∨ (toF (fromF r) = r)) ∧ (wf r ∨ toF (fromF r) ≠ r) ∧
  (fromF (toF a) = a) ∧ ((toF f = toF g) ∨ (f = g)) ∧
  (toF f ≠ toF g ∨ f ≠ g)
Status: Satisfiable

User theorems:  [] |- ∀f g x. x ∈ FDOM g ⇒ ((f o_f g) ' x = f (g ' x))

Goal: [∀x. x ∈ FDOM f ⇒ (toF (f ' x) = (toF o_f g) ' x),FDOM f = FDOM g] ?- ∀x. x ∈ FDOM g ⇒ (toF (f ' x) = toF (g ' x))
CNF1: ∃x.
  ∀f' g' x'.
    (((f' o_f g') ' x' = f' (g' ' x')) ∨ x' ∉ FDOM g') ∧
    (FDOM f = FDOM g) ∧
    ((toF (f ' x') = (toF o_f g) ' x') ∨ x' ∉ FDOM f) ∧ x ∈ FDOM g ∧
    toF (f ' x) ≠ toF (g ' x)
Status: Satisfiable

User theorems:  [] |- (∀a. fromF (toF a) = a) ∧ ∀r. wf r ⇔ (toF (fromF r) = r)

Goal: [x ∈ FDOM fm,∀k. k ∈ FDOM fm ⇒ wf (fm ' k)] ?- fm ' x = toF (fromF (fm ' x))
CNF1: ∀a r k.
  (¬wf r ∨ (toF (fromF r) = r)) ∧ (wf r ∨ toF (fromF r) ≠ r) ∧
  (fromF (toF a) = a) ∧ (wf (fm ' k) ∨ k ∉ FDOM fm) ∧ x ∈ FDOM fm ∧
  fm ' x ≠ toF (fromF (fm ' x))
Status: Satisfiable

User theorems:  [] |- (∀a. fromF (toF a) = a) ∧ ∀r. wf r ⇔ (toF (fromF r) = r)

Goal: [] ?- (∀ft. P ft) ⇔ ∀f. wf f ⇒ P (fromF f)
CNF1: ∃ft f.
  ∀a r ft' f'.
    (¬wf r ∨ (toF (fromF r) = r)) ∧ (wf r ∨ toF (fromF r) ≠ r) ∧
    (fromF (toF a) = a) ∧ (P ft' ∨ P (fromF f') ∨ ¬wf f') ∧
    (¬P ft ∨ wf f) ∧ (¬P ft ∨ ¬P (fromF f))
Status: Satisfiable

User theorems:  [] |- (∀a. fromF (toF a) = a) ∧ ∀r. wf r ⇔ (toF (fromF r) = r)

Goal: [x ∈ FDOM fm,P (fromF (construct a (toF o fromF o_f fm))),∀k. k ∈ FDOM fm ⇒ wf (fm ' k) ∧ P (fromF (fm ' k))] ?- toF (fromF (fm ' x)) = fm ' x
CNF1: ∀a' r k.
  (¬wf r ∨ (toF (fromF r) = r)) ∧ (wf r ∨ toF (fromF r) ≠ r) ∧
  (fromF (toF a') = a') ∧ (P (fromF (fm ' k)) ∨ k ∉ FDOM fm) ∧
  (wf (fm ' k) ∨ k ∉ FDOM fm) ∧
  P (fromF (construct a (toF o fromF o_f fm))) ∧ x ∈ FDOM fm ∧
  toF (fromF (fm ' x)) ≠ fm ' x
Status: Satisfiable

User theorems: 
Goal: [∀k. k ∈ FDOM fm ⇒ FINITE {p | ∃ft'. apply_path p (fm ' k) = SOME ft'}] ?- (∃h t ft'.
   (x = h::t) ∧ (apply_path t (fm ' h) = SOME ft') ∧ h ∈ FDOM fm) ⇔
∃k x' ft'.
  ((x = k::x') ∧ (apply_path x' (fm ' k) = SOME ft')) ∧ k ∈ FDOM fm
CNF1: ∃h t ft' k x' ft''.
  ∀h' t' ft''' k' x'' ft''''.
    (FINITE {p | ∃ft'. apply_path p (fm ' h') = SOME ft'} ∨
     h' ∉ FDOM fm) ∧ (h ∈ FDOM fm ∨ k ∈ FDOM fm) ∧
    ((apply_path t (fm ' h) = SOME ft') ∨ k ∈ FDOM fm) ∧
    ((x = h::t) ∨ k ∈ FDOM fm) ∧ (h ∈ FDOM fm ∨ (x = k::x')) ∧
    ((apply_path t (fm ' h) = SOME ft') ∨ (x = k::x')) ∧
    ((x = h::t) ∨ (x = k::x')) ∧
    ((x = h::t) ∨ (apply_path x' (fm ' k) = SOME ft'')) ∧
    ((apply_path t (fm ' h) = SOME ft') ∨
     (apply_path x' (fm ' k) = SOME ft'')) ∧
    (h ∈ FDOM fm ∨ (apply_path x' (fm ' k) = SOME ft'')) ∧
    (h' ∉ FDOM fm ∨ apply_path t' (fm ' h') ≠ SOME ft''' ∨ x ≠ h'::t' ∨
     apply_path x'' (fm ' k') ≠ SOME ft'''' ∨ x ≠ k'::x'' ∨
     k' ∉ FDOM fm)
Lambda: ∃h t ft' k x' ft''.
  ∀h' t' ft''' k' x'' ft''''.
    ∃f.
      (∀p. f p = (p,∃ft'. apply_path p (fm ' h') = SOME ft')) ∧
      (FINITE (GSPEC f) ∨ h' ∉ FDOM fm) ∧ (h ∈ FDOM fm ∨ k ∈ FDOM fm) ∧
      ((apply_path t (fm ' h) = SOME ft') ∨ k ∈ FDOM fm) ∧
      ((x = h::t) ∨ k ∈ FDOM fm) ∧ (h ∈ FDOM fm ∨ (x = k::x')) ∧
      ((apply_path t (fm ' h) = SOME ft') ∨ (x = k::x')) ∧
      ((x = h::t) ∨ (x = k::x')) ∧
      ((x = h::t) ∨ (apply_path x' (fm ' k) = SOME ft'')) ∧
      ((apply_path t (fm ' h) = SOME ft') ∨
       (apply_path x' (fm ' k) = SOME ft'')) ∧
      (h ∈ FDOM fm ∨ (apply_path x' (fm ' k) = SOME ft'')) ∧
      (h' ∉ FDOM fm ∨ apply_path t' (fm ' h') ≠ SOME ft''' ∨
       x ≠ h'::t' ∨ apply_path x'' (fm ' k') ≠ SOME ft'''' ∨
       x ≠ k'::x'' ∨ k' ∉ FDOM fm)
Boolean: ∃h t ft' k x' ft''.
  ∀h' t' ft''' k' x'' ft''''.
    ∃f.
      (∀p.
         ((∃ft'. apply_path p (fm ' h') = SOME ft') ⇒ (f p = (p,T))) ∧
         (¬(∃ft'. apply_path p (fm ' h') = SOME ft') ⇒ (f p = (p,F)))) ∧
      (FINITE (GSPEC f) ∨ h' ∉ FDOM fm) ∧ (h ∈ FDOM fm ∨ k ∈ FDOM fm) ∧
      ((apply_path t (fm ' h) = SOME ft') ∨ k ∈ FDOM fm) ∧
      ((x = h::t) ∨ k ∈ FDOM fm) ∧ (h ∈ FDOM fm ∨ (x = k::x')) ∧
      ((apply_path t (fm ' h) = SOME ft') ∨ (x = k::x')) ∧
      ((x = h::t) ∨ (x = k::x')) ∧
      ((x = h::t) ∨ (apply_path x' (fm ' k) = SOME ft'')) ∧
      ((apply_path t (fm ' h) = SOME ft') ∨
       (apply_path x' (fm ' k) = SOME ft'')) ∧
      (h ∈ FDOM fm ∨ (apply_path x' (fm ' k) = SOME ft'')) ∧
      (h' ∉ FDOM fm ∨ apply_path t' (fm ' h') ≠ SOME ft''' ∨
       x ≠ h'::t' ∨ apply_path x'' (fm ' k') ≠ SOME ft'''' ∨
       x ≠ k'::x'' ∨ k' ∉ FDOM fm)
CNF2: ∃h t ft' k x' ft'' f ft'''''.
  ∀h' t' ft''' k' x'' ft'''' p ft''''''.
    ((f h' t' ft''' k' x'' ft'''' p = (p,F)) ∨
     (apply_path p (fm ' h') =
      SOME (ft''''' h' t' ft''' k' x'' ft'''' p))) ∧
    ((f h' t' ft''' k' x'' ft'''' p = (p,T)) ∨
     apply_path p (fm ' h') ≠ SOME ft'''''') ∧
    (FINITE (GSPEC (f h' t' ft''' k' x'' ft'''')) ∨ h' ∉ FDOM fm) ∧
    (h ∈ FDOM fm ∨ k ∈ FDOM fm) ∧
    ((apply_path t (fm ' h) = SOME ft') ∨ k ∈ FDOM fm) ∧
    ((x = h::t) ∨ k ∈ FDOM fm) ∧ (h ∈ FDOM fm ∨ (x = k::x')) ∧
    ((apply_path t (fm ' h) = SOME ft') ∨ (x = k::x')) ∧
    ((x = h::t) ∨ (x = k::x')) ∧
    ((x = h::t) ∨ (apply_path x' (fm ' k) = SOME ft'')) ∧
    ((apply_path t (fm ' h) = SOME ft') ∨
     (apply_path x' (fm ' k) = SOME ft'')) ∧
    (h ∈ FDOM fm ∨ (apply_path x' (fm ' k) = SOME ft'')) ∧
    (h' ∉ FDOM fm ∨ apply_path t' (fm ' h') ≠ SOME ft''' ∨ x ≠ h'::t' ∨
     apply_path x'' (fm ' k') ≠ SOME ft'''' ∨ x ≠ k'::x'' ∨
     k' ∉ FDOM fm)
Status: Unsatisfiable

User theorems: 
Goal: [∀k. k ∈ FDOM fm ⇒ ∃r. relrec h (fm ' k) r] ?- ∃f. ∀k. k ∈ FDOM fm ⇒ relrec h (fm ' k) (f k)
CNF1: ∃r k.
  ∀k' f.
    (relrec h (fm ' k') (r k') ∨ k' ∉ FDOM fm) ∧ k f ∈ FDOM fm ∧
    ¬relrec h (fm ' (k f)) (f (k f))
Status: Unsatisfiable

User theorems:  [] |- ∀ft r1. relrec h ft r1 ⇒ ∀r2. relrec h ft r2 ⇒ (r1 = r2)

Goal: [x ∈ FDOM fm,∀d. d ∈ FDOM fm ⇒ relrec h (fm ' d) (rfm ' d),FDOM rfm = FDOM fm] ?- rfm ' x = @r. relrec h (fm ' x) r
CNF1: ∀ft d r2.
  (¬relrec h ft r2 ∨ (d = r2) ∨ ¬relrec h ft d) ∧ (FDOM rfm = FDOM fm) ∧
  (relrec h (fm ' d) (rfm ' d) ∨ d ∉ FDOM fm) ∧ x ∈ FDOM fm ∧
  rfm ' x ≠ @r. relrec h (fm ' x) r
Lambda: ∃f.
  (∀r. f r ⇔ relrec h (fm ' x) r) ∧
  ∀ft d r2.
    (¬relrec h ft r2 ∨ (d = r2) ∨ ¬relrec h ft d) ∧
    (FDOM rfm = FDOM fm) ∧ (relrec h (fm ' d) (rfm ' d) ∨ d ∉ FDOM fm) ∧
    x ∈ FDOM fm ∧ rfm ' x ≠ $@ f
CNF2: ∃f.
  ∀ft d r2.
    (f = relrec h (fm ' x)) ∧
    (¬relrec h ft r2 ∨ (d = r2) ∨ ¬relrec h ft d) ∧
    (FDOM rfm = FDOM fm) ∧ (relrec h (fm ' d) (rfm ' d) ∨ d ∉ FDOM fm) ∧
    x ∈ FDOM fm ∧ rfm ' x ≠ $@ f
Status: Satisfiable

User theorems:  [] |- ∀ft. ∃r. relrec h ft r

Goal: [d ∈ FDOM fm] ?- (∃x. relrec h (fm ' d) x) ∧
∀x. relrec h (fm ' d) x ⇒ relrec h (fm ' d) x
CNF1: ∃r. ∀ft x. relrec h ft (r ft) ∧ d ∈ FDOM fm ∧ ¬relrec h (fm ' d) x
Status: Satisfiable

User theorems: 
Goal: [] ?- ∀x'.
  x' ∈ FDOM b ∧ (x = f x' (b ' x')) ⇔
  (x' ∈ FDOM b ∧ (x = f x' (b ' x'))) ∧ x' ∈ FDOM b
CNF1: ∃x'.
  ((x = f x' (b ' x')) ∨ x' ∈ FDOM b) ∧ x' ∈ FDOM b ∧
  ((x = f x' (b ' x')) ∨ x' ∈ FDOM b) ∧ x' ∈ FDOM b ∧
  (x' ∈ FDOM b ∨ (x = f x' (b ' x'))) ∧ (x = f x' (b ' x')) ∧
  (x ≠ f x' (b ' x') ∨ x' ∉ FDOM b)
Status: Unsatisfiable

User theorems: 
Goal: [MEM (EL x' (FILTER ($= x) l2)) l2,x = EL x' (FILTER ($= x) l2),MEM (EL x' (FILTER ($= x) l1)) l1,x = EL x' (FILTER ($= x) l1),x' < m1,m1 ≥ m2,m2 ≥ m1,Abbrev (m2 = LENGTH (FILTER ($= x) l2)),Abbrev (m1 = LENGTH (FILTER ($= x) l1))] ?- EL x' (FILTER ($= x) l1) = EL x' (FILTER ($= x) l2)
CNF1: Abbrev (m1 = LENGTH (FILTER ($= x) l1)) ∧
Abbrev (m2 = LENGTH (FILTER ($= x) l2)) ∧ m2 ≥ m1 ∧ m1 ≥ m2 ∧ x' < m1 ∧
(x = EL x' (FILTER ($= x) l1)) ∧ MEM (EL x' (FILTER ($= x) l1)) l1 ∧
(x = EL x' (FILTER ($= x) l2)) ∧ MEM (EL x' (FILTER ($= x) l2)) l2 ∧
EL x' (FILTER ($= x) l1) ≠ EL x' (FILTER ($= x) l2)
Numeral: (0 ≤ LENGTH (FILTER ($= x) l1) ∧ 0 ≤ LENGTH (FILTER ($= x) l2) ∧
 0 ≤ m2 ∧ 0 ≤ m1 ∧ 0 ≤ x') ∧ Abbrev (m1 = LENGTH (FILTER ($= x) l1)) ∧
Abbrev (m2 = LENGTH (FILTER ($= x) l2)) ∧ m2 ≥ m1 ∧ m1 ≥ m2 ∧ x' < m1 ∧
(x = EL x' (FILTER ($= x) l1)) ∧ MEM (EL x' (FILTER ($= x) l1)) l1 ∧
(x = EL x' (FILTER ($= x) l2)) ∧ MEM (EL x' (FILTER ($= x) l2)) l2 ∧
EL x' (FILTER ($= x) l1) ≠ EL x' (FILTER ($= x) l2)
CNF2: 0 ≤ x' ∧ 0 ≤ m1 ∧ 0 ≤ m2 ∧ 0 ≤ LENGTH (FILTER ($= x) l2) ∧
0 ≤ LENGTH (FILTER ($= x) l1) ∧
Abbrev (m1 = LENGTH (FILTER ($= x) l1)) ∧
Abbrev (m2 = LENGTH (FILTER ($= x) l2)) ∧ m2 ≥ m1 ∧ m1 ≥ m2 ∧ x' < m1 ∧
(x = EL x' (FILTER ($= x) l1)) ∧ MEM (EL x' (FILTER ($= x) l1)) l1 ∧
(x = EL x' (FILTER ($= x) l2)) ∧ MEM (EL x' (FILTER ($= x) l2)) l2 ∧
EL x' (FILTER ($= x) l1) ≠ EL x' (FILTER ($= x) l2)User theorems:  [] |- ∀l x. MEM x l ⇔ ∃n. n < LENGTH l ∧ (x = EL n l)

Goal: [x' < m2,x' < m1,m1 ≥ m2,m2 ≥ m1,Abbrev (m2 = LENGTH (FILTER ($= x) l2)),Abbrev (m1 = LENGTH (FILTER ($= x) l1))] ?- MEM (EL x' (FILTER ($= x) l1)) (FILTER ($= x) l1) ∧
MEM (EL x' (FILTER ($= x) l2)) (FILTER ($= x) l2)
CNF1: ∃n.
  ∀l x'' n'.
    (x'' ∉ set l ∨ (x'' = EL (n l x'') l)) ∧
    (x'' ∉ set l ∨ n l x'' < LENGTH l) ∧
    (MEM x'' l ∨ ¬(n' < LENGTH l) ∨ x'' ≠ EL n' l) ∧
    Abbrev (m1 = LENGTH (FILTER ($= x) l1)) ∧
    Abbrev (m2 = LENGTH (FILTER ($= x) l2)) ∧ m2 ≥ m1 ∧ m1 ≥ m2 ∧
    x' < m1 ∧ x' < m2 ∧
    (EL x' (FILTER ($= x) l1) ∉ set (FILTER ($= x) l1) ∨
     EL x' (FILTER ($= x) l2) ∉ set (FILTER ($= x) l2))
Numeral: (0 ≤ LENGTH (FILTER ($= x) l1) ∧ 0 ≤ LENGTH (FILTER ($= x) l2) ∧
 0 ≤ m1 ∧ 0 ≤ m2 ∧ 0 ≤ x') ∧
∃n.
  ∀l x'' n'.
    0 ≤ n' ⇒
    (0 ≤ n l x'' ∧ 0 ≤ LENGTH l) ∧
    (x'' ∉ set l ∨ (x'' = EL (n l x'') l)) ∧
    (x'' ∉ set l ∨ n l x'' < LENGTH l) ∧
    (MEM x'' l ∨ ¬(n' < LENGTH l) ∨ x'' ≠ EL n' l) ∧
    Abbrev (m1 = LENGTH (FILTER ($= x) l1)) ∧
    Abbrev (m2 = LENGTH (FILTER ($= x) l2)) ∧ m2 ≥ m1 ∧ m1 ≥ m2 ∧
    x' < m1 ∧ x' < m2 ∧
    (EL x' (FILTER ($= x) l1) ∉ set (FILTER ($= x) l1) ∨
     EL x' (FILTER ($= x) l2) ∉ set (FILTER ($= x) l2))
CNF2: ∃n.
  ∀l x'' n'.
    0 ≤ x' ∧ 0 ≤ m2 ∧ 0 ≤ m1 ∧ 0 ≤ LENGTH (FILTER ($= x) l2) ∧
    0 ≤ LENGTH (FILTER ($= x) l1) ∧ (0 ≤ LENGTH l ∨ ¬(0 ≤ n')) ∧
    (0 ≤ n l x'' ∨ ¬(0 ≤ n')) ∧
    ((x'' = EL (n l x'') l) ∨ x'' ∉ set l ∨ ¬(0 ≤ n')) ∧
    (n l x'' < LENGTH l ∨ x'' ∉ set l ∨ ¬(0 ≤ n')) ∧
    (x'' ≠ EL n' l ∨ ¬(n' < LENGTH l) ∨ MEM x'' l ∨ ¬(0 ≤ n')) ∧
    (Abbrev (m1 = LENGTH (FILTER ($= x) l1)) ∨ ¬(0 ≤ n')) ∧
    (Abbrev (m2 = LENGTH (FILTER ($= x) l2)) ∨ ¬(0 ≤ n')) ∧
    (m2 ≥ m1 ∨ ¬(0 ≤ n')) ∧ (m1 ≥ m2 ∨ ¬(0 ≤ n')) ∧
    (x' < m1 ∨ ¬(0 ≤ n')) ∧ (x' < m2 ∨ ¬(0 ≤ n')) ∧
    (EL x' (FILTER ($= x) l2) ∉ set (FILTER ($= x) l2) ∨
     EL x' (FILTER ($= x) l1) ∉ set (FILTER ($= x) l1) ∨ ¬(0 ≤ n'))User theorems:  [] |- dimindex (:α) = if FINITE 𝕌(:α) then CARD 𝕌(:α) else 1

Goal: [] ?- INFINITE 𝕌(:α) ⇒ (dimindex (:α) = 1)
CNF1: (dimindex (:α) = if FINITE 𝕌(:α) then CARD 𝕌(:α) else 1) ∧
INFINITE 𝕌(:α) ∧ dimindex (:α) ≠ 1
Numeral: (0 ≤ (if FINITE 𝕌(:α) then CARD 𝕌(:α) else 1) ∧ 0 ≤ CARD 𝕌(:α) ∧
 0 ≤ dimindex (:α)) ∧
(dimindex (:α) = if FINITE 𝕌(:α) then CARD 𝕌(:α) else 1) ∧
INFINITE 𝕌(:α) ∧ dimindex (:α) ≠ 1
CNF2: 0 ≤ dimindex (:α) ∧ 0 ≤ CARD 𝕌(:α) ∧
0 ≤ (if FINITE 𝕌(:α) then CARD 𝕌(:α) else 1) ∧
(dimindex (:α) = if FINITE 𝕌(:α) then CARD 𝕌(:α) else 1) ∧
INFINITE 𝕌(:α) ∧ dimindex (:α) ≠ 1
Status: Unsatisfiable

User theorems:  [] |- ∀S. FINITE S ⇒ ∀t f. BIJ f S t ∧ FINITE t ⇒ (CARD S = CARD t)
 [] |- (FINITE ISL ⇔ FINITE 𝕌(:α)) ∧ (FINITE ISR ⇔ FINITE 𝕌(:β))
 [] |- BIJ INL 𝕌(:α) ISL ∧ BIJ INR 𝕌(:β) ISR

Goal: [] ?- (FINITE 𝕌(:α) ⇒ (CARD ISL = CARD 𝕌(:α))) ∧
(FINITE 𝕌(:β) ⇒ (CARD ISR = CARD 𝕌(:β)))
CNF1: ∀S' t f.
  BIJ INR 𝕌(:β) ISR ∧ BIJ INL 𝕌(:α) ISL ∧
  (INFINITE ISL ∨ FINITE 𝕌(:α)) ∧ (FINITE ISL ∨ INFINITE 𝕌(:α)) ∧
  (FINITE ISR ∨ INFINITE 𝕌(:β)) ∧ (INFINITE ISR ∨ FINITE 𝕌(:β)) ∧
  (INFINITE t ∨ ¬BIJ f S' t ∨ (CARD S' = CARD t) ∨ INFINITE S') ∧
  (CARD ISL ≠ CARD 𝕌(:α) ∨ FINITE 𝕌(:β)) ∧
  (FINITE 𝕌(:α) ∨ FINITE 𝕌(:β)) ∧
  (FINITE 𝕌(:α) ∨ CARD ISR ≠ CARD 𝕌(:β)) ∧
  (CARD ISL ≠ CARD 𝕌(:α) ∨ CARD ISR ≠ CARD 𝕌(:β))
Numeral: (0 ≤ CARD ISL ∧ 0 ≤ CARD 𝕌(:α) ∧ 0 ≤ CARD ISR ∧ 0 ≤ CARD 𝕌(:β)) ∧
∀S' t f.
  (0 ≤ CARD S' ∧ 0 ≤ CARD t) ∧ BIJ INR 𝕌(:β) ISR ∧ BIJ INL 𝕌(:α) ISL ∧
  (INFINITE ISL ∨ FINITE 𝕌(:α)) ∧ (FINITE ISL ∨ INFINITE 𝕌(:α)) ∧
  (FINITE ISR ∨ INFINITE 𝕌(:β)) ∧ (INFINITE ISR ∨ FINITE 𝕌(:β)) ∧
  (INFINITE t ∨ ¬BIJ f S' t ∨ (CARD S' = CARD t) ∨ INFINITE S') ∧
  (CARD ISL ≠ CARD 𝕌(:α) ∨ FINITE 𝕌(:β)) ∧
  (FINITE 𝕌(:α) ∨ FINITE 𝕌(:β)) ∧
  (FINITE 𝕌(:α) ∨ CARD ISR ≠ CARD 𝕌(:β)) ∧
  (CARD ISL ≠ CARD 𝕌(:α) ∨ CARD ISR ≠ CARD 𝕌(:β))
CNF2: ∀S' t f.
  0 ≤ CARD 𝕌(:β) ∧ 0 ≤ CARD ISR ∧ 0 ≤ CARD 𝕌(:α) ∧ 0 ≤ CARD ISL ∧
  0 ≤ CARD t ∧ 0 ≤ CARD S' ∧ BIJ INR 𝕌(:β) ISR ∧ BIJ INL 𝕌(:α) ISL ∧
  (INFINITE ISL ∨ FINITE 𝕌(:α)) ∧ (FINITE ISL ∨ INFINITE 𝕌(:α)) ∧
  (FINITE ISR ∨ INFINITE 𝕌(:β)) ∧ (INFINITE ISR ∨ FINITE 𝕌(:β)) ∧
  (INFINITE t ∨ ¬BIJ f S' t ∨ (CARD S' = CARD t) ∨ INFINITE S') ∧
  (CARD ISL ≠ CARD 𝕌(:α) ∨ FINITE 𝕌(:β)) ∧
  (FINITE 𝕌(:α) ∨ FINITE 𝕌(:β)) ∧
  (FINITE 𝕌(:α) ∨ CARD ISR ≠ CARD 𝕌(:β)) ∧
  (CARD ISL ≠ CARD 𝕌(:α) ∨ CARD ISR ≠ CARD 𝕌(:β))
Status: Unknown

User theorems:  []
|- ∀s.
     FINITE s ⇒
     ∀t. FINITE t ⇒ (CARD (s ∪ t) + CARD (s ∩ t) = CARD s + CARD t)
 [] |- ∀m. m + 0 = m
 [] |- CARD ∅ = 0
 [] |- ISL ∩ ISR = ∅
 [] |- (FINITE ISL ⇔ FINITE 𝕌(:α)) ∧ (FINITE ISR ⇔ FINITE 𝕌(:β))

Goal: [] ?- FINITE 𝕌(:α) ∧ FINITE 𝕌(:β) ⇒ (CARD (ISL ∪ ISR) = CARD ISL + CARD ISR)
CNF1: ∀s t m.
  (INFINITE ISR ∨ FINITE 𝕌(:β)) ∧ (FINITE ISR ∨ INFINITE 𝕌(:β)) ∧
  (FINITE ISL ∨ INFINITE 𝕌(:α)) ∧ (INFINITE ISL ∨ FINITE 𝕌(:α)) ∧
  (ISL ∩ ISR = ∅) ∧ (CARD ∅ = 0) ∧ (m + 0 = m) ∧
  (INFINITE t ∨ (CARD (s ∪ t) + CARD (s ∩ t) = CARD s + CARD t) ∨
   INFINITE s) ∧ FINITE 𝕌(:β) ∧ FINITE 𝕌(:α) ∧
  CARD (ISL ∪ ISR) ≠ CARD ISL + CARD ISR
Numeral: (0 ≤ CARD ∅ ∧ 0 ≤ CARD (ISL ∪ ISR) ∧ 0 ≤ CARD ISL + CARD ISR ∧
 0 ≤ CARD ISL ∧ 0 ≤ CARD ISR) ∧
∀s t m.
  0 ≤ m ⇒
  (0 ≤ m + 0 ∧ 0 ≤ CARD (s ∪ t) + CARD (s ∩ t) ∧ 0 ≤ CARD (s ∪ t) ∧
   0 ≤ CARD (s ∩ t) ∧ 0 ≤ CARD s + CARD t ∧ 0 ≤ CARD s ∧ 0 ≤ CARD t) ∧
  (INFINITE ISR ∨ FINITE 𝕌(:β)) ∧ (FINITE ISR ∨ INFINITE 𝕌(:β)) ∧
  (FINITE ISL ∨ INFINITE 𝕌(:α)) ∧ (INFINITE ISL ∨ FINITE 𝕌(:α)) ∧
  (ISL ∩ ISR = ∅) ∧ (CARD ∅ = 0) ∧ (m + 0 = m) ∧
  (INFINITE t ∨ (CARD (s ∪ t) + CARD (s ∩ t) = CARD s + CARD t) ∨
   INFINITE s) ∧ FINITE 𝕌(:β) ∧ FINITE 𝕌(:α) ∧
  CARD (ISL ∪ ISR) ≠ CARD ISL + CARD ISR
CNF2: ∀s t m.
  0 ≤ CARD ISR ∧ 0 ≤ CARD ISL ∧ 0 ≤ CARD ISL + CARD ISR ∧
  0 ≤ CARD (ISL ∪ ISR) ∧ 0 ≤ CARD ∅ ∧ (0 ≤ CARD t ∨ ¬(0 ≤ m)) ∧
  (0 ≤ CARD s ∨ ¬(0 ≤ m)) ∧ (0 ≤ CARD s + CARD t ∨ ¬(0 ≤ m)) ∧
  (0 ≤ CARD (s ∩ t) ∨ ¬(0 ≤ m)) ∧ (0 ≤ CARD (s ∪ t) ∨ ¬(0 ≤ m)) ∧
  (0 ≤ CARD (s ∪ t) + CARD (s ∩ t) ∨ ¬(0 ≤ m)) ∧
  (0 ≤ m + 0 ∨ ¬(0 ≤ m)) ∧ (FINITE 𝕌(:β) ∨ INFINITE ISR ∨ ¬(0 ≤ m)) ∧
  (INFINITE 𝕌(:β) ∨ FINITE ISR ∨ ¬(0 ≤ m)) ∧
  (INFINITE 𝕌(:α) ∨ FINITE ISL ∨ ¬(0 ≤ m)) ∧
  (FINITE 𝕌(:α) ∨ INFINITE ISL ∨ ¬(0 ≤ m)) ∧
  ((ISL ∩ ISR = ∅) ∨ ¬(0 ≤ m)) ∧ ((CARD ∅ = 0) ∨ ¬(0 ≤ m)) ∧
  ((m + 0 = m) ∨ ¬(0 ≤ m)) ∧
  (INFINITE s ∨ (CARD (s ∪ t) + CARD (s ∩ t) = CARD s + CARD t) ∨
   INFINITE t ∨ ¬(0 ≤ m)) ∧ (FINITE 𝕌(:β) ∨ ¬(0 ≤ m)) ∧
  (FINITE 𝕌(:α) ∨ ¬(0 ≤ m)) ∧
  (CARD (ISL ∪ ISR) ≠ CARD ISL + CARD ISR ∨ ¬(0 ≤ m))
Status: Unknown

User theorems:  [] |- (FINITE ISL ⇔ FINITE 𝕌(:α)) ∧ (FINITE ISR ⇔ FINITE 𝕌(:β))

Goal: [FINITE 𝕌(:β),FINITE 𝕌(:α),¬(FINITE ISL ∧ FINITE ISR)] ?- 1 = CARD 𝕌(:α) + CARD 𝕌(:β)
CNF1: (INFINITE ISR ∨ FINITE 𝕌(:β)) ∧ (FINITE ISR ∨ INFINITE 𝕌(:β)) ∧
(FINITE ISL ∨ INFINITE 𝕌(:α)) ∧ (INFINITE ISL ∨ FINITE 𝕌(:α)) ∧
(INFINITE ISL ∨ INFINITE ISR) ∧ FINITE 𝕌(:α) ∧ FINITE 𝕌(:β) ∧
1 ≠ CARD 𝕌(:α) + CARD 𝕌(:β)
Numeral: (0 ≤ CARD 𝕌(:α) + CARD 𝕌(:β) ∧ 0 ≤ CARD 𝕌(:α) ∧ 0 ≤ CARD 𝕌(:β)) ∧
(INFINITE ISR ∨ FINITE 𝕌(:β)) ∧ (FINITE ISR ∨ INFINITE 𝕌(:β)) ∧
(FINITE ISL ∨ INFINITE 𝕌(:α)) ∧ (INFINITE ISL ∨ FINITE 𝕌(:α)) ∧
(INFINITE ISL ∨ INFINITE ISR) ∧ FINITE 𝕌(:α) ∧ FINITE 𝕌(:β) ∧
1 ≠ CARD 𝕌(:α) + CARD 𝕌(:β)
CNF2: 0 ≤ CARD 𝕌(:β) ∧ 0 ≤ CARD 𝕌(:α) ∧ 0 ≤ CARD 𝕌(:α) + CARD 𝕌(:β) ∧
(INFINITE ISR ∨ FINITE 𝕌(:β)) ∧ (FINITE ISR ∨ INFINITE 𝕌(:β)) ∧
(FINITE ISL ∨ INFINITE 𝕌(:α)) ∧ (INFINITE ISL ∨ FINITE 𝕌(:α)) ∧
(INFINITE ISL ∨ INFINITE ISR) ∧ FINITE 𝕌(:α) ∧ FINITE 𝕌(:β) ∧
1 ≠ CARD 𝕌(:α) + CARD 𝕌(:β)
Status: Unsatisfiable

User theorems:  [] |- (FINITE ISL ⇔ FINITE 𝕌(:α)) ∧ (FINITE ISR ⇔ FINITE 𝕌(:β))

Goal: [FINITE ISR,FINITE ISL,¬(FINITE 𝕌(:α) ∧ FINITE 𝕌(:β))] ?- CARD (ISL ∪ ISR) = 1
CNF1: (INFINITE ISR ∨ FINITE 𝕌(:β)) ∧ (FINITE ISR ∨ INFINITE 𝕌(:β)) ∧
(FINITE ISL ∨ INFINITE 𝕌(:α)) ∧ (INFINITE ISL ∨ FINITE 𝕌(:α)) ∧
(INFINITE 𝕌(:α) ∨ INFINITE 𝕌(:β)) ∧ FINITE ISL ∧ FINITE ISR ∧
CARD (ISL ∪ ISR) ≠ 1
Numeral: 0 ≤ CARD (ISL ∪ ISR) ∧ (INFINITE ISR ∨ FINITE 𝕌(:β)) ∧
(FINITE ISR ∨ INFINITE 𝕌(:β)) ∧ (FINITE ISL ∨ INFINITE 𝕌(:α)) ∧
(INFINITE ISL ∨ FINITE 𝕌(:α)) ∧ (INFINITE 𝕌(:α) ∨ INFINITE 𝕌(:β)) ∧
FINITE ISL ∧ FINITE ISR ∧ CARD (ISL ∪ ISR) ≠ 1
Status: Unsatisfiable

User theorems:  [] |- (∀x. IS_BIT0A (BIT0A x) ⇔ T) ∧ ∀x. IS_BIT0A (BIT0B x) ⇔ F
 [] |- (∀x. IS_BIT0B (BIT0A x) ⇔ F) ∧ ∀x. IS_BIT0B (BIT0B x) ⇔ T

Goal: [] ?- IS_BIT0A (BIT0B a) ∨ IS_BIT0B (BIT0B a)
CNF1: ∀x.
  IS_BIT0B (BIT0B x) ∧ ¬IS_BIT0B (BIT0A x) ∧ IS_BIT0A (BIT0A x) ∧
  ¬IS_BIT0A (BIT0B x) ∧ ¬IS_BIT0A (BIT0B a) ∧ ¬IS_BIT0B (BIT0B a)
Status: Unsatisfiable

User theorems:  [] |- (∀x. IS_BIT0A (BIT0A x) ⇔ T) ∧ ∀x. IS_BIT0A (BIT0B x) ⇔ F
 [] |- (∀x. IS_BIT0B (BIT0A x) ⇔ F) ∧ ∀x. IS_BIT0B (BIT0B x) ⇔ T

Goal: [] ?- IS_BIT0A (BIT0A a) ∨ IS_BIT0B (BIT0A a)
CNF1: ∀x.
  IS_BIT0B (BIT0B x) ∧ ¬IS_BIT0B (BIT0A x) ∧ IS_BIT0A (BIT0A x) ∧
  ¬IS_BIT0A (BIT0B x) ∧ ¬IS_BIT0A (BIT0A a) ∧ ¬IS_BIT0B (BIT0A a)
Status: Unsatisfiable

User theorems: 
Goal: [T] ?- ∃y. BIT0A y = BIT0A a
CNF1: ∀y. BIT0A y ≠ BIT0A a
Status: Unsatisfiable

User theorems: 
Goal: [T] ?- ∃y. BIT0B y = BIT0B a
CNF1: ∀y. BIT0B y ≠ BIT0B a
Status: Unsatisfiable

User theorems:  [] |- ∀S. FINITE S ⇒ ∀t f. BIJ f S t ∧ FINITE t ⇒ (CARD S = CARD t)
 [] |- FINITE IS_BIT0A ⇔ FINITE 𝕌(:α)
 [] |- BIJ BIT0A 𝕌(:α) IS_BIT0A

Goal: [] ?- FINITE 𝕌(:α) ⇒ (CARD IS_BIT0A = CARD 𝕌(:α))
CNF1: ∀S' t f.
  BIJ BIT0A 𝕌(:α) IS_BIT0A ∧ (FINITE IS_BIT0A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0A ∨ FINITE 𝕌(:α)) ∧
  (INFINITE t ∨ ¬BIJ f S' t ∨ (CARD S' = CARD t) ∨ INFINITE S') ∧
  FINITE 𝕌(:α) ∧ CARD IS_BIT0A ≠ CARD 𝕌(:α)
Numeral: (0 ≤ CARD IS_BIT0A ∧ 0 ≤ CARD 𝕌(:α)) ∧
∀S' t f.
  (0 ≤ CARD S' ∧ 0 ≤ CARD t) ∧ BIJ BIT0A 𝕌(:α) IS_BIT0A ∧
  (FINITE IS_BIT0A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0A ∨ FINITE 𝕌(:α)) ∧
  (INFINITE t ∨ ¬BIJ f S' t ∨ (CARD S' = CARD t) ∨ INFINITE S') ∧
  FINITE 𝕌(:α) ∧ CARD IS_BIT0A ≠ CARD 𝕌(:α)
CNF2: ∀S' t f.
  0 ≤ CARD 𝕌(:α) ∧ 0 ≤ CARD IS_BIT0A ∧ 0 ≤ CARD t ∧ 0 ≤ CARD S' ∧
  BIJ BIT0A 𝕌(:α) IS_BIT0A ∧ (FINITE IS_BIT0A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0A ∨ FINITE 𝕌(:α)) ∧
  (INFINITE t ∨ ¬BIJ f S' t ∨ (CARD S' = CARD t) ∨ INFINITE S') ∧
  FINITE 𝕌(:α) ∧ CARD IS_BIT0A ≠ CARD 𝕌(:α)
Status: Unknown

User theorems:  [] |- ∀S. FINITE S ⇒ ∀t f. BIJ f S t ∧ FINITE t ⇒ (CARD S = CARD t)
 [] |- FINITE IS_BIT0B ⇔ FINITE 𝕌(:α)
 [] |- BIJ BIT0B 𝕌(:α) IS_BIT0B

Goal: [] ?- FINITE 𝕌(:α) ⇒ (CARD IS_BIT0B = CARD 𝕌(:α))
CNF1: ∀S' t f.
  BIJ BIT0B 𝕌(:α) IS_BIT0B ∧ (FINITE IS_BIT0B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0B ∨ FINITE 𝕌(:α)) ∧
  (INFINITE t ∨ ¬BIJ f S' t ∨ (CARD S' = CARD t) ∨ INFINITE S') ∧
  FINITE 𝕌(:α) ∧ CARD IS_BIT0B ≠ CARD 𝕌(:α)
Numeral: (0 ≤ CARD IS_BIT0B ∧ 0 ≤ CARD 𝕌(:α)) ∧
∀S' t f.
  (0 ≤ CARD S' ∧ 0 ≤ CARD t) ∧ BIJ BIT0B 𝕌(:α) IS_BIT0B ∧
  (FINITE IS_BIT0B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0B ∨ FINITE 𝕌(:α)) ∧
  (INFINITE t ∨ ¬BIJ f S' t ∨ (CARD S' = CARD t) ∨ INFINITE S') ∧
  FINITE 𝕌(:α) ∧ CARD IS_BIT0B ≠ CARD 𝕌(:α)
CNF2: ∀S' t f.
  0 ≤ CARD 𝕌(:α) ∧ 0 ≤ CARD IS_BIT0B ∧ 0 ≤ CARD t ∧ 0 ≤ CARD S' ∧
  BIJ BIT0B 𝕌(:α) IS_BIT0B ∧ (FINITE IS_BIT0B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0B ∨ FINITE 𝕌(:α)) ∧
  (INFINITE t ∨ ¬BIJ f S' t ∨ (CARD S' = CARD t) ∨ INFINITE S') ∧
  FINITE 𝕌(:α) ∧ CARD IS_BIT0B ≠ CARD 𝕌(:α)
Status: Unknown

User theorems:  [] |- FINITE IS_BIT0A ⇔ FINITE 𝕌(:α)
 [] |- FINITE 𝕌(:α) ⇒ (CARD IS_BIT0A = CARD 𝕌(:α))
 [] |- FINITE IS_BIT0B ⇔ FINITE 𝕌(:α)
 [] |- FINITE 𝕌(:α) ⇒ (CARD IS_BIT0B = CARD 𝕌(:α))
 [] |- ∀n. 2 * n = n + n

Goal: [FINITE 𝕌(:α),¬(FINITE IS_BIT0A ∧ FINITE IS_BIT0B)] ?- F
CNF1: ∀n.
  (2 * n = n + n) ∧ ((CARD IS_BIT0B = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT0B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0B ∨ FINITE 𝕌(:α)) ∧
  ((CARD IS_BIT0A = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT0A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0A ∨ FINITE 𝕌(:α)) ∧ FINITE 𝕌(:α) ∧
  (INFINITE IS_BIT0A ∨ INFINITE IS_BIT0B)
Numeral: (0 ≤ CARD IS_BIT0B ∧ 0 ≤ CARD IS_BIT0A ∧ 0 ≤ CARD 𝕌(:α)) ∧
∀n.
  0 ≤ n ⇒
  (0 ≤ 2 * n ∧ 0 ≤ n + n) ∧ (2 * n = n + n) ∧
  ((CARD IS_BIT0B = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT0B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0B ∨ FINITE 𝕌(:α)) ∧
  ((CARD IS_BIT0A = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT0A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0A ∨ FINITE 𝕌(:α)) ∧ FINITE 𝕌(:α) ∧
  (INFINITE IS_BIT0A ∨ INFINITE IS_BIT0B)
CNF2: ∀n.
  0 ≤ CARD 𝕌(:α) ∧ 0 ≤ CARD IS_BIT0A ∧ 0 ≤ CARD IS_BIT0B ∧
  (0 ≤ n + n ∨ ¬(0 ≤ n)) ∧ (0 ≤ 2 * n ∨ ¬(0 ≤ n)) ∧
  ((2 * n = n + n) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ (CARD IS_BIT0B = CARD 𝕌(:α)) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ FINITE IS_BIT0B ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:α) ∨ INFINITE IS_BIT0B ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ (CARD IS_BIT0A = CARD 𝕌(:α)) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ FINITE IS_BIT0A ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:α) ∨ INFINITE IS_BIT0A ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:α) ∨ ¬(0 ≤ n)) ∧
  (INFINITE IS_BIT0B ∨ INFINITE IS_BIT0A ∨ ¬(0 ≤ n))
Status: Unsatisfiable

User theorems:  [] |- FINITE IS_BIT0A ⇔ FINITE 𝕌(:α)
 [] |- FINITE 𝕌(:α) ⇒ (CARD IS_BIT0A = CARD 𝕌(:α))
 [] |- FINITE IS_BIT0B ⇔ FINITE 𝕌(:α)
 [] |- FINITE 𝕌(:α) ⇒ (CARD IS_BIT0B = CARD 𝕌(:α))
 [] |- ∀n. 2 * n = n + n

Goal: [FINITE IS_BIT0B,FINITE IS_BIT0A,INFINITE 𝕌(:α)] ?- CARD (IS_BIT0A ∪ IS_BIT0B) = 1
CNF1: ∀n.
  (2 * n = n + n) ∧ ((CARD IS_BIT0B = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT0B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0B ∨ FINITE 𝕌(:α)) ∧
  ((CARD IS_BIT0A = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT0A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0A ∨ FINITE 𝕌(:α)) ∧ INFINITE 𝕌(:α) ∧
  FINITE IS_BIT0A ∧ FINITE IS_BIT0B ∧ CARD (IS_BIT0A ∪ IS_BIT0B) ≠ 1
Numeral: (0 ≤ CARD IS_BIT0B ∧ 0 ≤ CARD IS_BIT0A ∧ 0 ≤ CARD 𝕌(:α) ∧
 0 ≤ CARD (IS_BIT0A ∪ IS_BIT0B)) ∧
∀n.
  0 ≤ n ⇒
  (0 ≤ 2 * n ∧ 0 ≤ n + n) ∧ (2 * n = n + n) ∧
  ((CARD IS_BIT0B = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT0B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0B ∨ FINITE 𝕌(:α)) ∧
  ((CARD IS_BIT0A = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT0A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0A ∨ FINITE 𝕌(:α)) ∧ INFINITE 𝕌(:α) ∧
  FINITE IS_BIT0A ∧ FINITE IS_BIT0B ∧ CARD (IS_BIT0A ∪ IS_BIT0B) ≠ 1
CNF2: ∀n.
  0 ≤ CARD (IS_BIT0A ∪ IS_BIT0B) ∧ 0 ≤ CARD 𝕌(:α) ∧ 0 ≤ CARD IS_BIT0A ∧
  0 ≤ CARD IS_BIT0B ∧ (0 ≤ n + n ∨ ¬(0 ≤ n)) ∧ (0 ≤ 2 * n ∨ ¬(0 ≤ n)) ∧
  ((2 * n = n + n) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ (CARD IS_BIT0B = CARD 𝕌(:α)) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ FINITE IS_BIT0B ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:α) ∨ INFINITE IS_BIT0B ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ (CARD IS_BIT0A = CARD 𝕌(:α)) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ FINITE IS_BIT0A ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:α) ∨ INFINITE IS_BIT0A ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ ¬(0 ≤ n)) ∧ (FINITE IS_BIT0A ∨ ¬(0 ≤ n)) ∧
  (FINITE IS_BIT0B ∨ ¬(0 ≤ n)) ∧
  (CARD (IS_BIT0A ∪ IS_BIT0B) ≠ 1 ∨ ¬(0 ≤ n))
Status: Unsatisfiable

User theorems:  [] |- FINITE IS_BIT0A ⇔ FINITE 𝕌(:α)
 [] |- FINITE 𝕌(:α) ⇒ (CARD IS_BIT0A = CARD 𝕌(:α))
 [] |- FINITE IS_BIT0B ⇔ FINITE 𝕌(:α)
 [] |- FINITE 𝕌(:α) ⇒ (CARD IS_BIT0B = CARD 𝕌(:α))
 [] |- ∀n. 2 * n = n + n

Goal: [FINITE IS_BIT0B,FINITE IS_BIT0A,FINITE 𝕌(:α)] ?- CARD IS_BIT0A + CARD IS_BIT0B = 2 * CARD 𝕌(:α)
CNF1: ∀n.
  (2 * n = n + n) ∧ ((CARD IS_BIT0B = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT0B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0B ∨ FINITE 𝕌(:α)) ∧
  ((CARD IS_BIT0A = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT0A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0A ∨ FINITE 𝕌(:α)) ∧ FINITE 𝕌(:α) ∧ FINITE IS_BIT0A ∧
  FINITE IS_BIT0B ∧ CARD IS_BIT0A + CARD IS_BIT0B ≠ 2 * CARD 𝕌(:α)
Numeral: (0 ≤ CARD IS_BIT0A + CARD IS_BIT0B ∧ 0 ≤ CARD IS_BIT0A ∧
 0 ≤ CARD IS_BIT0B ∧ 0 ≤ 2 * CARD 𝕌(:α) ∧ 0 ≤ CARD 𝕌(:α)) ∧
∀n.
  0 ≤ n ⇒
  (0 ≤ 2 * n ∧ 0 ≤ n + n) ∧ (2 * n = n + n) ∧
  ((CARD IS_BIT0B = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT0B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0B ∨ FINITE 𝕌(:α)) ∧
  ((CARD IS_BIT0A = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT0A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT0A ∨ FINITE 𝕌(:α)) ∧ FINITE 𝕌(:α) ∧ FINITE IS_BIT0A ∧
  FINITE IS_BIT0B ∧ CARD IS_BIT0A + CARD IS_BIT0B ≠ 2 * CARD 𝕌(:α)
CNF2: ∀n.
  0 ≤ CARD 𝕌(:α) ∧ 0 ≤ 2 * CARD 𝕌(:α) ∧ 0 ≤ CARD IS_BIT0B ∧
  0 ≤ CARD IS_BIT0A ∧ 0 ≤ CARD IS_BIT0A + CARD IS_BIT0B ∧
  (0 ≤ n + n ∨ ¬(0 ≤ n)) ∧ (0 ≤ 2 * n ∨ ¬(0 ≤ n)) ∧
  ((2 * n = n + n) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ (CARD IS_BIT0B = CARD 𝕌(:α)) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ FINITE IS_BIT0B ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:α) ∨ INFINITE IS_BIT0B ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ (CARD IS_BIT0A = CARD 𝕌(:α)) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ FINITE IS_BIT0A ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:α) ∨ INFINITE IS_BIT0A ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:α) ∨ ¬(0 ≤ n)) ∧ (FINITE IS_BIT0A ∨ ¬(0 ≤ n)) ∧
  (FINITE IS_BIT0B ∨ ¬(0 ≤ n)) ∧
  (CARD IS_BIT0A + CARD IS_BIT0B ≠ 2 * CARD 𝕌(:α) ∨ ¬(0 ≤ n))
Status: Unsatisfiable

User theorems:  []
|- (∀x. IS_BIT1A (BIT1A x) ⇔ T) ∧ (∀x. IS_BIT1A (BIT1B x) ⇔ F) ∧
   (IS_BIT1A BIT1C ⇔ F)
 []
|- (∀x. IS_BIT1B (BIT1A x) ⇔ F) ∧ (∀x. IS_BIT1B (BIT1B x) ⇔ T) ∧
   (IS_BIT1B BIT1C ⇔ F)
 []
|- (∀x. IS_BIT1C (BIT1A x) ⇔ F) ∧ (∀x. IS_BIT1C (BIT1B x) ⇔ F) ∧
   (IS_BIT1C BIT1C ⇔ T)

Goal: [] ?- IS_BIT1A BIT1C ∨ IS_BIT1B BIT1C ∨ IS_BIT1C BIT1C
CNF1: ∀x.
  IS_BIT1C BIT1C ∧ ¬IS_BIT1C (BIT1B x) ∧ ¬IS_BIT1C (BIT1A x) ∧
  ¬IS_BIT1B (BIT1A x) ∧ IS_BIT1B (BIT1B x) ∧ ¬IS_BIT1B BIT1C ∧
  IS_BIT1A (BIT1A x) ∧ ¬IS_BIT1A (BIT1B x) ∧ ¬IS_BIT1A BIT1C ∧
  ¬IS_BIT1A BIT1C ∧ ¬IS_BIT1B BIT1C ∧ ¬IS_BIT1C BIT1C
Status: Unsatisfiable

User theorems:  []
|- (∀x. IS_BIT1A (BIT1A x) ⇔ T) ∧ (∀x. IS_BIT1A (BIT1B x) ⇔ F) ∧
   (IS_BIT1A BIT1C ⇔ F)
 []
|- (∀x. IS_BIT1B (BIT1A x) ⇔ F) ∧ (∀x. IS_BIT1B (BIT1B x) ⇔ T) ∧
   (IS_BIT1B BIT1C ⇔ F)
 []
|- (∀x. IS_BIT1C (BIT1A x) ⇔ F) ∧ (∀x. IS_BIT1C (BIT1B x) ⇔ F) ∧
   (IS_BIT1C BIT1C ⇔ T)

Goal: [] ?- IS_BIT1A (BIT1B a) ∨ IS_BIT1B (BIT1B a) ∨ IS_BIT1C (BIT1B a)
CNF1: ∀x.
  IS_BIT1C BIT1C ∧ ¬IS_BIT1C (BIT1B x) ∧ ¬IS_BIT1C (BIT1A x) ∧
  ¬IS_BIT1B (BIT1A x) ∧ IS_BIT1B (BIT1B x) ∧ ¬IS_BIT1B BIT1C ∧
  IS_BIT1A (BIT1A x) ∧ ¬IS_BIT1A (BIT1B x) ∧ ¬IS_BIT1A BIT1C ∧
  ¬IS_BIT1A (BIT1B a) ∧ ¬IS_BIT1B (BIT1B a) ∧ ¬IS_BIT1C (BIT1B a)
Status: Unsatisfiable

User theorems:  []
|- (∀x. IS_BIT1A (BIT1A x) ⇔ T) ∧ (∀x. IS_BIT1A (BIT1B x) ⇔ F) ∧
   (IS_BIT1A BIT1C ⇔ F)
 []
|- (∀x. IS_BIT1B (BIT1A x) ⇔ F) ∧ (∀x. IS_BIT1B (BIT1B x) ⇔ T) ∧
   (IS_BIT1B BIT1C ⇔ F)
 []
|- (∀x. IS_BIT1C (BIT1A x) ⇔ F) ∧ (∀x. IS_BIT1C (BIT1B x) ⇔ F) ∧
   (IS_BIT1C BIT1C ⇔ T)

Goal: [] ?- IS_BIT1A (BIT1A a) ∨ IS_BIT1B (BIT1A a) ∨ IS_BIT1C (BIT1A a)
CNF1: ∀x.
  IS_BIT1C BIT1C ∧ ¬IS_BIT1C (BIT1B x) ∧ ¬IS_BIT1C (BIT1A x) ∧
  ¬IS_BIT1B (BIT1A x) ∧ IS_BIT1B (BIT1B x) ∧ ¬IS_BIT1B BIT1C ∧
  IS_BIT1A (BIT1A x) ∧ ¬IS_BIT1A (BIT1B x) ∧ ¬IS_BIT1A BIT1C ∧
  ¬IS_BIT1A (BIT1A a) ∧ ¬IS_BIT1B (BIT1A a) ∧ ¬IS_BIT1C (BIT1A a)
Status: Unsatisfiable

User theorems:  [] |- ∀x. IS_BIT1A x ∨ IS_BIT1B x ∨ IS_BIT1C x

Goal: [] ?- (IS_BIT1A x ∨ IS_BIT1B x) ∨ IS_BIT1C x
CNF1: ∀x'.
  (IS_BIT1A x' ∨ IS_BIT1B x' ∨ IS_BIT1C x') ∧ ¬IS_BIT1B x ∧
  ¬IS_BIT1A x ∧ ¬IS_BIT1C x
Status: Unsatisfiable

User theorems: 
Goal: [T] ?- ∃y. BIT1A y = BIT1A a
CNF1: ∀y. BIT1A y ≠ BIT1A a
Status: Unsatisfiable

User theorems: 
Goal: [T] ?- ∃y. BIT1B y = BIT1B a
CNF1: ∀y. BIT1B y ≠ BIT1B a
Status: Unsatisfiable

User theorems:  [] |- ∀S. FINITE S ⇒ ∀t f. BIJ f S t ∧ FINITE t ⇒ (CARD S = CARD t)
 [] |- FINITE IS_BIT1A ⇔ FINITE 𝕌(:α)
 [] |- BIJ BIT1A 𝕌(:α) IS_BIT1A

Goal: [] ?- FINITE 𝕌(:α) ⇒ (CARD IS_BIT1A = CARD 𝕌(:α))
CNF1: ∀S' t f.
  BIJ BIT1A 𝕌(:α) IS_BIT1A ∧ (FINITE IS_BIT1A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1A ∨ FINITE 𝕌(:α)) ∧
  (INFINITE t ∨ ¬BIJ f S' t ∨ (CARD S' = CARD t) ∨ INFINITE S') ∧
  FINITE 𝕌(:α) ∧ CARD IS_BIT1A ≠ CARD 𝕌(:α)
Numeral: (0 ≤ CARD IS_BIT1A ∧ 0 ≤ CARD 𝕌(:α)) ∧
∀S' t f.
  (0 ≤ CARD S' ∧ 0 ≤ CARD t) ∧ BIJ BIT1A 𝕌(:α) IS_BIT1A ∧
  (FINITE IS_BIT1A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1A ∨ FINITE 𝕌(:α)) ∧
  (INFINITE t ∨ ¬BIJ f S' t ∨ (CARD S' = CARD t) ∨ INFINITE S') ∧
  FINITE 𝕌(:α) ∧ CARD IS_BIT1A ≠ CARD 𝕌(:α)
CNF2: ∀S' t f.
  0 ≤ CARD 𝕌(:α) ∧ 0 ≤ CARD IS_BIT1A ∧ 0 ≤ CARD t ∧ 0 ≤ CARD S' ∧
  BIJ BIT1A 𝕌(:α) IS_BIT1A ∧ (FINITE IS_BIT1A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1A ∨ FINITE 𝕌(:α)) ∧
  (INFINITE t ∨ ¬BIJ f S' t ∨ (CARD S' = CARD t) ∨ INFINITE S') ∧
  FINITE 𝕌(:α) ∧ CARD IS_BIT1A ≠ CARD 𝕌(:α)
Status: Unknown

User theorems:  [] |- ∀S. FINITE S ⇒ ∀t f. BIJ f S t ∧ FINITE t ⇒ (CARD S = CARD t)
 [] |- FINITE IS_BIT1B ⇔ FINITE 𝕌(:α)
 [] |- BIJ BIT1B 𝕌(:α) IS_BIT1B

Goal: [] ?- FINITE 𝕌(:α) ⇒ (CARD IS_BIT1B = CARD 𝕌(:α))
CNF1: ∀S' t f.
  BIJ BIT1B 𝕌(:α) IS_BIT1B ∧ (FINITE IS_BIT1B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1B ∨ FINITE 𝕌(:α)) ∧
  (INFINITE t ∨ ¬BIJ f S' t ∨ (CARD S' = CARD t) ∨ INFINITE S') ∧
  FINITE 𝕌(:α) ∧ CARD IS_BIT1B ≠ CARD 𝕌(:α)
Numeral: (0 ≤ CARD IS_BIT1B ∧ 0 ≤ CARD 𝕌(:α)) ∧
∀S' t f.
  (0 ≤ CARD S' ∧ 0 ≤ CARD t) ∧ BIJ BIT1B 𝕌(:α) IS_BIT1B ∧
  (FINITE IS_BIT1B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1B ∨ FINITE 𝕌(:α)) ∧
  (INFINITE t ∨ ¬BIJ f S' t ∨ (CARD S' = CARD t) ∨ INFINITE S') ∧
  FINITE 𝕌(:α) ∧ CARD IS_BIT1B ≠ CARD 𝕌(:α)
CNF2: ∀S' t f.
  0 ≤ CARD 𝕌(:α) ∧ 0 ≤ CARD IS_BIT1B ∧ 0 ≤ CARD t ∧ 0 ≤ CARD S' ∧
  BIJ BIT1B 𝕌(:α) IS_BIT1B ∧ (FINITE IS_BIT1B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1B ∨ FINITE 𝕌(:α)) ∧
  (INFINITE t ∨ ¬BIJ f S' t ∨ (CARD S' = CARD t) ∨ INFINITE S') ∧
  FINITE 𝕌(:α) ∧ CARD IS_BIT1B ≠ CARD 𝕌(:α)
Status: Unknown

User theorems:  [] |- ∀x y. x ∈ {y} ⇔ (x = y)
 [] |- ∀P x. x ∈ P ⇔ P x

Goal: [] ?- ∀x. (x = BIT1C) ⇔ {BIT1C} x
CNF1: ∃x.
  ∀x' y P x''.
    (x'' ∉ P ∨ P x'') ∧ (x'' ∈ P ∨ ¬P x'') ∧ (x' ∈ {y} ∨ x' ≠ y) ∧
    (x' ∉ {y} ∨ (x' = y)) ∧ ((x = BIT1C) ∨ {BIT1C} x) ∧
    (x ≠ BIT1C ∨ ¬{BIT1C} x)
Status: Satisfiable

User theorems:  [] |- FINITE IS_BIT1A ⇔ FINITE 𝕌(:α)
 [] |- FINITE IS_BIT1B ⇔ FINITE 𝕌(:α)
 [] |- ∀s t. FINITE (s ∪ t) ⇔ FINITE s ∧ FINITE t

Goal: [FINITE 𝕌(:α)] ?- FINITE (IS_BIT1A ∪ IS_BIT1B)
CNF1: ∀s t.
  (INFINITE (s ∪ t) ∨ FINITE t) ∧ (INFINITE (s ∪ t) ∨ FINITE s) ∧
  (FINITE (s ∪ t) ∨ INFINITE s ∨ INFINITE t) ∧
  (FINITE IS_BIT1B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1B ∨ FINITE 𝕌(:α)) ∧
  (FINITE IS_BIT1A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1A ∨ FINITE 𝕌(:α)) ∧ FINITE 𝕌(:α) ∧
  INFINITE (IS_BIT1A ∪ IS_BIT1B)
Status: Satisfiable

User theorems:  [] |- FINITE IS_BIT1A ⇔ FINITE 𝕌(:α)
 [] |- FINITE 𝕌(:α) ⇒ (CARD IS_BIT1A = CARD 𝕌(:α))
 [] |- (CARD IS_BIT1C = 1) ∧ FINITE IS_BIT1C
 [] |- FINITE IS_BIT1B ⇔ FINITE 𝕌(:α)
 [] |- FINITE 𝕌(:α) ⇒ (CARD IS_BIT1B = CARD 𝕌(:α))
 [] |- ∀n. 2 * n = n + n

Goal: [FINITE 𝕌(:α),¬((FINITE IS_BIT1A ∧ FINITE IS_BIT1B) ∧ FINITE IS_BIT1C)] ?- 1 = 2 * CARD 𝕌(:α) + 1
CNF1: ∀n.
  (2 * n = n + n) ∧ ((CARD IS_BIT1B = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT1B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1B ∨ FINITE 𝕌(:α)) ∧ (CARD IS_BIT1C = 1) ∧
  FINITE IS_BIT1C ∧ ((CARD IS_BIT1A = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT1A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1A ∨ FINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1B ∨ INFINITE IS_BIT1A ∨ INFINITE IS_BIT1C) ∧
  FINITE 𝕌(:α) ∧ 1 ≠ 2 * CARD 𝕌(:α) + 1
Numeral: (0 ≤ CARD IS_BIT1B ∧ 0 ≤ CARD IS_BIT1C ∧ 0 ≤ CARD IS_BIT1A ∧
 0 ≤ 2 * CARD 𝕌(:α) + 1 ∧ 0 ≤ 2 * CARD 𝕌(:α) ∧ 0 ≤ CARD 𝕌(:α)) ∧
∀n.
  0 ≤ n ⇒
  (0 ≤ 2 * n ∧ 0 ≤ n + n) ∧ (2 * n = n + n) ∧
  ((CARD IS_BIT1B = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT1B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1B ∨ FINITE 𝕌(:α)) ∧ (CARD IS_BIT1C = 1) ∧
  FINITE IS_BIT1C ∧ ((CARD IS_BIT1A = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT1A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1A ∨ FINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1B ∨ INFINITE IS_BIT1A ∨ INFINITE IS_BIT1C) ∧
  FINITE 𝕌(:α) ∧ 1 ≠ 2 * CARD 𝕌(:α) + 1
CNF2: ∀n.
  0 ≤ CARD 𝕌(:α) ∧ 0 ≤ 2 * CARD 𝕌(:α) ∧ 0 ≤ 2 * CARD 𝕌(:α) + 1 ∧
  0 ≤ CARD IS_BIT1A ∧ 0 ≤ CARD IS_BIT1C ∧ 0 ≤ CARD IS_BIT1B ∧
  (0 ≤ n + n ∨ ¬(0 ≤ n)) ∧ (0 ≤ 2 * n ∨ ¬(0 ≤ n)) ∧
  ((2 * n = n + n) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ (CARD IS_BIT1B = CARD 𝕌(:α)) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ FINITE IS_BIT1B ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:α) ∨ INFINITE IS_BIT1B ∨ ¬(0 ≤ n)) ∧
  ((CARD IS_BIT1C = 1) ∨ ¬(0 ≤ n)) ∧ (FINITE IS_BIT1C ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ (CARD IS_BIT1A = CARD 𝕌(:α)) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ FINITE IS_BIT1A ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:α) ∨ INFINITE IS_BIT1A ∨ ¬(0 ≤ n)) ∧
  (INFINITE IS_BIT1C ∨ INFINITE IS_BIT1A ∨ INFINITE IS_BIT1B ∨
   ¬(0 ≤ n)) ∧ (FINITE 𝕌(:α) ∨ ¬(0 ≤ n)) ∧
  (1 ≠ 2 * CARD 𝕌(:α) + 1 ∨ ¬(0 ≤ n))
Status: Unsatisfiable

User theorems:  [] |- FINITE IS_BIT1A ⇔ FINITE 𝕌(:α)
 [] |- FINITE 𝕌(:α) ⇒ (CARD IS_BIT1A = CARD 𝕌(:α))
 [] |- (CARD IS_BIT1C = 1) ∧ FINITE IS_BIT1C
 [] |- FINITE IS_BIT1B ⇔ FINITE 𝕌(:α)
 [] |- FINITE 𝕌(:α) ⇒ (CARD IS_BIT1B = CARD 𝕌(:α))
 [] |- ∀n. 2 * n = n + n

Goal: [FINITE IS_BIT1C,FINITE IS_BIT1B,FINITE IS_BIT1A,INFINITE 𝕌(:α)] ?- CARD (IS_BIT1A ∪ IS_BIT1B ∪ IS_BIT1C) = 1
CNF1: ∀n.
  (2 * n = n + n) ∧ ((CARD IS_BIT1B = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT1B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1B ∨ FINITE 𝕌(:α)) ∧ (CARD IS_BIT1C = 1) ∧
  FINITE IS_BIT1C ∧ ((CARD IS_BIT1A = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT1A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1A ∨ FINITE 𝕌(:α)) ∧ INFINITE 𝕌(:α) ∧
  FINITE IS_BIT1A ∧ FINITE IS_BIT1B ∧ FINITE IS_BIT1C ∧
  CARD (IS_BIT1A ∪ IS_BIT1B ∪ IS_BIT1C) ≠ 1
Numeral: (0 ≤ CARD IS_BIT1B ∧ 0 ≤ CARD IS_BIT1C ∧ 0 ≤ CARD IS_BIT1A ∧
 0 ≤ CARD 𝕌(:α) ∧ 0 ≤ CARD (IS_BIT1A ∪ IS_BIT1B ∪ IS_BIT1C)) ∧
∀n.
  0 ≤ n ⇒
  (0 ≤ 2 * n ∧ 0 ≤ n + n) ∧ (2 * n = n + n) ∧
  ((CARD IS_BIT1B = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT1B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1B ∨ FINITE 𝕌(:α)) ∧ (CARD IS_BIT1C = 1) ∧
  FINITE IS_BIT1C ∧ ((CARD IS_BIT1A = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT1A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1A ∨ FINITE 𝕌(:α)) ∧ INFINITE 𝕌(:α) ∧
  FINITE IS_BIT1A ∧ FINITE IS_BIT1B ∧ FINITE IS_BIT1C ∧
  CARD (IS_BIT1A ∪ IS_BIT1B ∪ IS_BIT1C) ≠ 1
CNF2: ∀n.
  0 ≤ CARD (IS_BIT1A ∪ IS_BIT1B ∪ IS_BIT1C) ∧ 0 ≤ CARD 𝕌(:α) ∧
  0 ≤ CARD IS_BIT1A ∧ 0 ≤ CARD IS_BIT1C ∧ 0 ≤ CARD IS_BIT1B ∧
  (0 ≤ n + n ∨ ¬(0 ≤ n)) ∧ (0 ≤ 2 * n ∨ ¬(0 ≤ n)) ∧
  ((2 * n = n + n) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ (CARD IS_BIT1B = CARD 𝕌(:α)) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ FINITE IS_BIT1B ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:α) ∨ INFINITE IS_BIT1B ∨ ¬(0 ≤ n)) ∧
  ((CARD IS_BIT1C = 1) ∨ ¬(0 ≤ n)) ∧ (FINITE IS_BIT1C ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ (CARD IS_BIT1A = CARD 𝕌(:α)) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ FINITE IS_BIT1A ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:α) ∨ INFINITE IS_BIT1A ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ ¬(0 ≤ n)) ∧ (FINITE IS_BIT1A ∨ ¬(0 ≤ n)) ∧
  (FINITE IS_BIT1B ∨ ¬(0 ≤ n)) ∧ (FINITE IS_BIT1C ∨ ¬(0 ≤ n)) ∧
  (CARD (IS_BIT1A ∪ IS_BIT1B ∪ IS_BIT1C) ≠ 1 ∨ ¬(0 ≤ n))
Status: Unsatisfiable

User theorems:  [] |- FINITE IS_BIT1A ⇔ FINITE 𝕌(:α)
 [] |- FINITE 𝕌(:α) ⇒ (CARD IS_BIT1A = CARD 𝕌(:α))
 [] |- (CARD IS_BIT1C = 1) ∧ FINITE IS_BIT1C
 [] |- FINITE IS_BIT1B ⇔ FINITE 𝕌(:α)
 [] |- FINITE 𝕌(:α) ⇒ (CARD IS_BIT1B = CARD 𝕌(:α))
 [] |- ∀n. 2 * n = n + n

Goal: [FINITE IS_BIT1C,FINITE IS_BIT1B,FINITE IS_BIT1A,FINITE 𝕌(:α)] ?- CARD IS_BIT1A + CARD IS_BIT1B = 2 * CARD 𝕌(:α)
CNF1: ∀n.
  (2 * n = n + n) ∧ ((CARD IS_BIT1B = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT1B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1B ∨ FINITE 𝕌(:α)) ∧ (CARD IS_BIT1C = 1) ∧
  FINITE IS_BIT1C ∧ ((CARD IS_BIT1A = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT1A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1A ∨ FINITE 𝕌(:α)) ∧ FINITE 𝕌(:α) ∧ FINITE IS_BIT1A ∧
  FINITE IS_BIT1B ∧ FINITE IS_BIT1C ∧
  CARD IS_BIT1A + CARD IS_BIT1B ≠ 2 * CARD 𝕌(:α)
Numeral: (0 ≤ CARD IS_BIT1C ∧ 0 ≤ CARD IS_BIT1A + CARD IS_BIT1B ∧
 0 ≤ CARD IS_BIT1A ∧ 0 ≤ CARD IS_BIT1B ∧ 0 ≤ 2 * CARD 𝕌(:α) ∧
 0 ≤ CARD 𝕌(:α)) ∧
∀n.
  0 ≤ n ⇒
  (0 ≤ 2 * n ∧ 0 ≤ n + n) ∧ (2 * n = n + n) ∧
  ((CARD IS_BIT1B = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT1B ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1B ∨ FINITE 𝕌(:α)) ∧ (CARD IS_BIT1C = 1) ∧
  FINITE IS_BIT1C ∧ ((CARD IS_BIT1A = CARD 𝕌(:α)) ∨ INFINITE 𝕌(:α)) ∧
  (FINITE IS_BIT1A ∨ INFINITE 𝕌(:α)) ∧
  (INFINITE IS_BIT1A ∨ FINITE 𝕌(:α)) ∧ FINITE 𝕌(:α) ∧ FINITE IS_BIT1A ∧
  FINITE IS_BIT1B ∧ FINITE IS_BIT1C ∧
  CARD IS_BIT1A + CARD IS_BIT1B ≠ 2 * CARD 𝕌(:α)
CNF2: ∀n.
  0 ≤ CARD 𝕌(:α) ∧ 0 ≤ 2 * CARD 𝕌(:α) ∧ 0 ≤ CARD IS_BIT1B ∧
  0 ≤ CARD IS_BIT1A ∧ 0 ≤ CARD IS_BIT1A + CARD IS_BIT1B ∧
  0 ≤ CARD IS_BIT1C ∧ (0 ≤ n + n ∨ ¬(0 ≤ n)) ∧ (0 ≤ 2 * n ∨ ¬(0 ≤ n)) ∧
  ((2 * n = n + n) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ (CARD IS_BIT1B = CARD 𝕌(:α)) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ FINITE IS_BIT1B ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:α) ∨ INFINITE IS_BIT1B ∨ ¬(0 ≤ n)) ∧
  ((CARD IS_BIT1C = 1) ∨ ¬(0 ≤ n)) ∧ (FINITE IS_BIT1C ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ (CARD IS_BIT1A = CARD 𝕌(:α)) ∨ ¬(0 ≤ n)) ∧
  (INFINITE 𝕌(:α) ∨ FINITE IS_BIT1A ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:α) ∨ INFINITE IS_BIT1A ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:α) ∨ ¬(0 ≤ n)) ∧ (FINITE IS_BIT1A ∨ ¬(0 ≤ n)) ∧
  (FINITE IS_BIT1B ∨ ¬(0 ≤ n)) ∧ (FINITE IS_BIT1C ∨ ¬(0 ≤ n)) ∧
  (CARD IS_BIT1A + CARD IS_BIT1B ≠ 2 * CARD 𝕌(:α) ∨ ¬(0 ≤ n))
Status: Unsatisfiable

User theorems:  [] |- ∀x y. x ∈ {y} ⇔ (x = y)
 [] |- ∀x. x ∈ 𝕌(:α)
 [] |- ∀P x. x ∈ P ⇔ P x

Goal: [] ?- 𝕌 ARB () ⇔ {()} ()
CNF1: ∀x y P x'.
  (x' ∉ P ∨ P x') ∧ (x' ∈ P ∨ ¬P x') ∧ x ∈ 𝕌(:α) ∧ (x ∈ {y} ∨ x ≠ y) ∧
  (x ∉ {y} ∨ (x = y)) ∧ (𝕌 ARB () ∨ {()} ()) ∧ (¬𝕌 ARB () ∨ ¬{()} ())
Status: Satisfiable

User theorems:  [] |- dimindex (:α) = if FINITE 𝕌(:α) then CARD 𝕌(:α) else 1
 [] |- (CARD 𝕌(:unit) = 1) ∧ FINITE 𝕌(:unit)

Goal: [] ?- dimindex (:unit) = 1
CNF1: FINITE 𝕌(:unit) ∧ (CARD 𝕌(:unit) = 1) ∧
(dimindex (:α) = if FINITE 𝕌(:α) then CARD 𝕌(:α) else 1) ∧
dimindex (:unit) ≠ 1
Numeral: (0 ≤ CARD 𝕌(:unit) ∧ 0 ≤ dimindex (:α) ∧
 0 ≤ (if FINITE 𝕌(:α) then CARD 𝕌(:α) else 1) ∧ 0 ≤ CARD 𝕌(:α) ∧
 0 ≤ dimindex (:unit)) ∧ FINITE 𝕌(:unit) ∧ (CARD 𝕌(:unit) = 1) ∧
(dimindex (:α) = if FINITE 𝕌(:α) then CARD 𝕌(:α) else 1) ∧
dimindex (:unit) ≠ 1
CNF2: 0 ≤ dimindex (:unit) ∧ 0 ≤ CARD 𝕌(:α) ∧
0 ≤ (if FINITE 𝕌(:α) then CARD 𝕌(:α) else 1) ∧ 0 ≤ dimindex (:α) ∧
0 ≤ CARD 𝕌(:unit) ∧ FINITE 𝕌(:unit) ∧ (CARD 𝕌(:unit) = 1) ∧
(dimindex (:α) = if FINITE 𝕌(:α) then CARD 𝕌(:α) else 1) ∧
dimindex (:unit) ≠ 1
Status: Unknown

User theorems:  [] |- dimword (:α) = 2 ** dimindex (:α)
 [] |- 0 < dimindex (:α)
 [] |- (∀m. m ** 0 = 1) ∧ ∀m n. m ** SUC n = m * m ** n
 [] |- ∀b. 1 < b ⇒ ∀n m. b ** m < b ** n ⇔ m < n
 [] |- 1 < 2

Goal: [] ?- 1 < dimword (:α)
CNF1: ∀b n m.
  1 < 2 ∧ (¬(m < n) ∨ b ** m < b ** n ∨ ¬(1 < b)) ∧
  (m < n ∨ ¬(b ** m < b ** n) ∨ ¬(1 < b)) ∧ (b ** 0 = 1) ∧
  (b ** SUC n = b * b ** n) ∧ 0 < dimindex (:α) ∧
  (dimword (:α) = 2 ** dimindex (:α)) ∧ ¬(1 < dimword (:α))
Numeral: (0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ dimword (:α)) ∧
∀b n m.
  0 ≤ m ∧ 0 ≤ b ∧ 0 ≤ n ⇒
  (0 ≤ b ** m ∧ 0 ≤ b ** 0 ∧ 0 ≤ b ** SUC n ∧ 0 ≤ SUC n ∧
   0 ≤ b * b ** n ∧ 0 ≤ b ** n) ∧ 1 < 2 ∧
  (¬(m < n) ∨ b ** m < b ** n ∨ ¬(1 < b)) ∧
  (m < n ∨ ¬(b ** m < b ** n) ∨ ¬(1 < b)) ∧ (b ** 0 = 1) ∧
  (b ** SUC n = b * b ** n) ∧ 0 < dimindex (:α) ∧
  (dimword (:α) = 2 ** dimindex (:α)) ∧ ¬(1 < dimword (:α))
CNF2: ∀b n m.
  0 ≤ dimword (:α) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) ∧
  (0 ≤ b ** n ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ b * b ** n ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ SUC n ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ b ** SUC n ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ b ** 0 ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ b ** m ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (1 < 2 ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (¬(1 < b) ∨ b ** m < b ** n ∨ ¬(m < n) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ b) ∨
   ¬(0 ≤ n)) ∧
  (¬(1 < b) ∨ ¬(b ** m < b ** n) ∨ m < n ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ b) ∨
   ¬(0 ≤ n)) ∧ ((b ** 0 = 1) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  ((b ** SUC n = b * b ** n) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (0 < dimindex (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  ((dimword (:α) = 2 ** dimindex (:α)) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ b) ∨
   ¬(0 ≤ n)) ∧ (¬(1 < dimword (:α)) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n))
Status: Unsatisfiable

User theorems:  [] |- (∀m. m ** 0 = 1) ∧ ∀m n. m ** SUC n = m * m ** n
 [] |- ∀a b c. a ≤ b ∧ c < b ⇒ a + c < 2 * b

Goal: [SBIT (f n) n ≤ 2 ** n,∀f. SUM n (λi. SBIT (f i) i) < 2 ** n] ?- SBIT (f n) n + SUM n (λi. SBIT (f i) i) < 2 ** SUC n
CNF1: ∀a b c f'.
  (a + c < 2 * b ∨ ¬(a ≤ b) ∨ ¬(c < b)) ∧ (a ** 0 = 1) ∧
  (a ** SUC b = a * a ** b) ∧ SUM n (λi. SBIT (f' i) i) < 2 ** n ∧
  SBIT (f n) n ≤ 2 ** n ∧
  ¬(SBIT (f n) n + SUM n (λi. SBIT (f i) i) < 2 ** SUC n)
Lambda: ∃f2.
  (∀i. f2 i = SBIT (f i) i) ∧
  ∀a b c f'.
    ∃f1.
      (∀i. f1 i = SBIT (f' i) i) ∧
      (a + c < 2 * b ∨ ¬(a ≤ b) ∨ ¬(c < b)) ∧ (a ** 0 = 1) ∧
      (a ** SUC b = a * a ** b) ∧ SUM n f1 < 2 ** n ∧
      SBIT (f n) n ≤ 2 ** n ∧ ¬(SBIT (f n) n + SUM n f2 < 2 ** SUC n)
Numeral: (0 ≤ 2 ** n ∧ 0 ≤ SBIT (f n) n ∧ 0 ≤ 2 ** SUC n ∧ 0 ≤ SUC n ∧ 0 ≤ n) ∧
∃f2.
  (0 ≤ SBIT (f n) n + SUM n f2 ∧ 0 ≤ SUM n f2) ∧
  (∀i. 0 ≤ i ⇒ (0 ≤ f2 i ∧ 0 ≤ SBIT (f i) i) ∧ (f2 i = SBIT (f i) i)) ∧
  ∀a b c f'.
    0 ≤ c ∧ 0 ≤ a ∧ 0 ≤ b ⇒
    (0 ≤ a + c ∧ 0 ≤ 2 * b ∧ 0 ≤ a ** 0 ∧ 0 ≤ a ** SUC b ∧ 0 ≤ SUC b ∧
     0 ≤ a * a ** b ∧ 0 ≤ a ** b) ∧
    ∃f1.
      0 ≤ SUM n f1 ∧
      (∀i.
         0 ≤ i ⇒
         (0 ≤ f1 i ∧ 0 ≤ SBIT (f' i) i) ∧ (f1 i = SBIT (f' i) i)) ∧
      (a + c < 2 * b ∨ ¬(a ≤ b) ∨ ¬(c < b)) ∧ (a ** 0 = 1) ∧
      (a ** SUC b = a * a ** b) ∧ SUM n f1 < 2 ** n ∧
      SBIT (f n) n ≤ 2 ** n ∧ ¬(SBIT (f n) n + SUM n f2 < 2 ** SUC n)
CNF2: ∃f2 f1.
  ∀a b c f' i.
    0 ≤ n ∧ 0 ≤ SUC n ∧ 0 ≤ 2 ** SUC n ∧ 0 ≤ SBIT (f n) n ∧ 0 ≤ 2 ** n ∧
    0 ≤ SUM n f2 ∧ 0 ≤ SBIT (f n) n + SUM n f2 ∧
    ((f2 a = SBIT (f a) a) ∨ ¬(0 ≤ a)) ∧ (0 ≤ f2 a ∨ ¬(0 ≤ a)) ∧
    (0 ≤ SBIT (f a) a ∨ ¬(0 ≤ a)) ∧
    (0 ≤ a ** b ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
    (0 ≤ a * a ** b ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
    (0 ≤ SUC b ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
    (0 ≤ a ** SUC b ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
    (0 ≤ a ** 0 ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
    (0 ≤ 2 * b ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
    (0 ≤ a + c ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
    (0 ≤ SUM n (f1 a b c f') ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
    (¬(0 ≤ i) ∨ (f1 a b c f' i = SBIT (f' i) i) ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨
     ¬(0 ≤ b)) ∧
    (¬(0 ≤ i) ∨ 0 ≤ f1 a b c f' i ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
    (¬(0 ≤ i) ∨ 0 ≤ SBIT (f' i) i ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
    (¬(c < b) ∨ ¬(a ≤ b) ∨ a + c < 2 * b ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨
     ¬(0 ≤ b)) ∧ ((a ** 0 = 1) ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
    ((a ** SUC b = a * a ** b) ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
    (SUM n (f1 a b c f') < 2 ** n ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
    (SBIT (f n) n ≤ 2 ** n ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
    (¬(SBIT (f n) n + SUM n f2 < 2 ** SUC n) ∨ ¬(0 ≤ c) ∨ ¬(0 ≤ a) ∨
     ¬(0 ≤ b))
Status: Unknown

User theorems:  [] |- ∀n f. SUM n (λi. SBIT (f i) i) < 2 ** n

Goal: [BIT i (SUM n (λj. SBIT (f j) j)) ⇔ f i ∧ i < n,n ≤ i] ?- SUM n (λi. SBIT (f i) i) < 2 ** n
CNF1: ∀n' f'.
  SUM n' (λi. SBIT (f' i) i) < 2 ** n' ∧ n ≤ i ∧
  (BIT i (SUM n (λj. SBIT (f j) j)) ∨ ¬f i ∨ ¬(i < n)) ∧
  (¬BIT i (SUM n (λj. SBIT (f j) j)) ∨ f i) ∧
  (¬BIT i (SUM n (λj. SBIT (f j) j)) ∨ i < n) ∧
  ¬(SUM n (λi. SBIT (f i) i) < 2 ** n)
Lambda: ∃f2.
  (∀i. f2 i = SBIT (f i) i) ∧
  ∀n' f'.
    ∃f1.
      (∀i. f1 i = SBIT (f' i) i) ∧ SUM n' f1 < 2 ** n' ∧ n ≤ i ∧
      (BIT i (SUM n f2) ∨ ¬f i ∨ ¬(i < n)) ∧ (¬BIT i (SUM n f2) ∨ f i) ∧
      (¬BIT i (SUM n f2) ∨ i < n) ∧ ¬(SUM n f2 < 2 ** n)
Numeral: (0 ≤ i ∧ 0 ≤ 2 ** n ∧ 0 ≤ n) ∧
∃f2.
  0 ≤ SUM n f2 ∧
  (∀i. 0 ≤ i ⇒ (0 ≤ f2 i ∧ 0 ≤ SBIT (f i) i) ∧ (f2 i = SBIT (f i) i)) ∧
  ∀n' f'.
    0 ≤ n' ⇒
    0 ≤ 2 ** n' ∧
    ∃f1.
      0 ≤ SUM n' f1 ∧
      (∀i.
         0 ≤ i ⇒
         (0 ≤ f1 i ∧ 0 ≤ SBIT (f' i) i) ∧ (f1 i = SBIT (f' i) i)) ∧
      SUM n' f1 < 2 ** n' ∧ n ≤ i ∧
      (BIT i (SUM n f2) ∨ ¬f i ∨ ¬(i < n)) ∧ (¬BIT i (SUM n f2) ∨ f i) ∧
      (¬BIT i (SUM n f2) ∨ i < n) ∧ ¬(SUM n f2 < 2 ** n)
CNF2: ∃f2 f1.
  ∀n' f' i'.
    0 ≤ n ∧ 0 ≤ 2 ** n ∧ 0 ≤ i ∧ 0 ≤ SUM n f2 ∧
    ((f2 n' = SBIT (f n') n') ∨ ¬(0 ≤ n')) ∧ (0 ≤ f2 n' ∨ ¬(0 ≤ n')) ∧
    (0 ≤ SBIT (f n') n' ∨ ¬(0 ≤ n')) ∧ (0 ≤ 2 ** n' ∨ ¬(0 ≤ n')) ∧
    (0 ≤ SUM n' (f1 n' f') ∨ ¬(0 ≤ n')) ∧
    (¬(0 ≤ i') ∨ (f1 n' f' i' = SBIT (f' i') i') ∨ ¬(0 ≤ n')) ∧
    (¬(0 ≤ i') ∨ 0 ≤ f1 n' f' i' ∨ ¬(0 ≤ n')) ∧
    (¬(0 ≤ i') ∨ 0 ≤ SBIT (f' i') i' ∨ ¬(0 ≤ n')) ∧
    (SUM n' (f1 n' f') < 2 ** n' ∨ ¬(0 ≤ n')) ∧ (n ≤ i ∨ ¬(0 ≤ n')) ∧
    (¬(i < n) ∨ ¬f i ∨ BIT i (SUM n f2) ∨ ¬(0 ≤ n')) ∧
    (f i ∨ ¬BIT i (SUM n f2) ∨ ¬(0 ≤ n')) ∧
    (i < n ∨ ¬BIT i (SUM n f2) ∨ ¬(0 ≤ n')) ∧
    (¬(SUM n f2 < 2 ** n) ∨ ¬(0 ≤ n'))
Status: Unknown

User theorems:  [] |- ∀m n p. m < n ∧ n < p ⇒ m < p
 [] |- ∀m n. 0 < n ⇒ m MOD n < n
 [] |- dimindex (:α) < dimword (:α)
 [] |- 0 < dimindex (:α)

Goal: [] ?- ∀n. n MOD dimindex (:α) < dimword (:α)
CNF1: ∃n.
  ∀m n' p.
    0 < dimindex (:α) ∧ dimindex (:α) < dimword (:α) ∧
    (m MOD n' < n' ∨ ¬(0 < n')) ∧ (m < p ∨ ¬(m < n') ∨ ¬(n' < p)) ∧
    ¬(n MOD dimindex (:α) < dimword (:α))
Numeral: (0 ≤ dimindex (:α) ∧ 0 ≤ dimword (:α)) ∧
∃n.
  (0 ≤ n MOD dimindex (:α) ∧ 0 ≤ n) ∧
  ∀m n' p.
    0 ≤ m ∧ 0 ≤ n' ∧ 0 ≤ p ⇒
    0 ≤ m MOD n' ∧ 0 < dimindex (:α) ∧ dimindex (:α) < dimword (:α) ∧
    (m MOD n' < n' ∨ ¬(0 < n')) ∧ (m < p ∨ ¬(m < n') ∨ ¬(n' < p)) ∧
    ¬(n MOD dimindex (:α) < dimword (:α))
CNF2: ∃n.
  ∀m n' p.
    0 ≤ dimword (:α) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ n ∧
    0 ≤ n MOD dimindex (:α) ∧
    (0 ≤ m MOD n' ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
    (0 < dimindex (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
    (dimindex (:α) < dimword (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
    (¬(0 < n') ∨ m MOD n' < n' ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
    (¬(n' < p) ∨ ¬(m < n') ∨ m < p ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
    (¬(n MOD dimindex (:α) < dimword (:α)) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨
     ¬(0 ≤ p))
Status: Unsatisfiable

User theorems:  [] |- SUC n < m ⇒ n < m

Goal: [n < dimword (:α) ⇒ P (n2w n),∀n. SUC n < dimword (:α) ⇒ P (n2w n) ⇒ P (n2w (SUC n)),P 0w] ?- SUC n < dimword (:α) ⇒ P (n2w (SUC n))
CNF1: ∀n'.
  (n < m ∨ ¬(SUC n < m)) ∧ P 0w ∧
  (¬P (n2w n') ∨ P (n2w (SUC n')) ∨ ¬(SUC n' < dimword (:α))) ∧
  (P (n2w n) ∨ ¬(n < dimword (:α))) ∧ SUC n < dimword (:α) ∧
  ¬P (n2w (SUC n))
Numeral: (0 ≤ m ∧ 0 ≤ dimword (:α) ∧ 0 ≤ SUC n ∧ 0 ≤ n) ∧
∀n'.
  0 ≤ n' ⇒
  0 ≤ SUC n' ∧ (n < m ∨ ¬(SUC n < m)) ∧ P 0w ∧
  (¬P (n2w n') ∨ P (n2w (SUC n')) ∨ ¬(SUC n' < dimword (:α))) ∧
  (P (n2w n) ∨ ¬(n < dimword (:α))) ∧ SUC n < dimword (:α) ∧
  ¬P (n2w (SUC n))
CNF2: ∀n'.
  0 ≤ n ∧ 0 ≤ SUC n ∧ 0 ≤ dimword (:α) ∧ 0 ≤ m ∧
  (0 ≤ SUC n' ∨ ¬(0 ≤ n')) ∧ (¬(SUC n < m) ∨ n < m ∨ ¬(0 ≤ n')) ∧
  (P 0w ∨ ¬(0 ≤ n')) ∧
  (¬(SUC n' < dimword (:α)) ∨ P (n2w (SUC n')) ∨ ¬P (n2w n') ∨
   ¬(0 ≤ n')) ∧ (¬(n < dimword (:α)) ∨ P (n2w n) ∨ ¬(0 ≤ n')) ∧
  (SUC n < dimword (:α) ∨ ¬(0 ≤ n')) ∧ (¬P (n2w (SUC n)) ∨ ¬(0 ≤ n'))
Status: Unknown

User theorems:  [] |- SUC n < m ⇒ n < m

Goal: [∀n. SUC n < dimword (:α) ⇒ P (n2w n) ⇒ P (n2w (SUC n)),P 0w] ?- 0 < dimword (:α) ⇒ P 0w
CNF1: ∀n'.
  (n < m ∨ ¬(SUC n < m)) ∧ P 0w ∧
  (¬P (n2w n') ∨ P (n2w (SUC n')) ∨ ¬(SUC n' < dimword (:α))) ∧
  0 < dimword (:α) ∧ ¬P 0w
Numeral: (0 ≤ SUC n ∧ 0 ≤ n ∧ 0 ≤ m ∧ 0 ≤ dimword (:α)) ∧
∀n'.
  0 ≤ n' ⇒
  0 ≤ SUC n' ∧ (n < m ∨ ¬(SUC n < m)) ∧ P 0w ∧
  (¬P (n2w n') ∨ P (n2w (SUC n')) ∨ ¬(SUC n' < dimword (:α))) ∧
  0 < dimword (:α) ∧ ¬P 0w
CNF2: ∀n'.
  0 ≤ dimword (:α) ∧ 0 ≤ m ∧ 0 ≤ n ∧ 0 ≤ SUC n ∧
  (0 ≤ SUC n' ∨ ¬(0 ≤ n')) ∧ (¬(SUC n < m) ∨ n < m ∨ ¬(0 ≤ n')) ∧
  (P 0w ∨ ¬(0 ≤ n')) ∧
  (¬(SUC n' < dimword (:α)) ∨ P (n2w (SUC n')) ∨ ¬P (n2w n') ∨
   ¬(0 ≤ n')) ∧ (0 < dimword (:α) ∨ ¬(0 ≤ n')) ∧ (¬P 0w ∨ ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems:  [] |- ∀n. 0 < n ⇒ ∀k. (k = k DIV n * n + k MOD n) ∧ k MOD n < n

Goal: [0 < WL,Abbrev (WL = dimword (:α)),WL = 2 * INT_MIN (:α)] ?- (n = n DIV WL * WL + n MOD WL) ∧ n MOD WL < WL
CNF1: ∀n' k.
  (k MOD n' < n' ∨ ¬(0 < n')) ∧
  ((k = k DIV n' * n' + k MOD n') ∨ ¬(0 < n')) ∧
  (WL = 2 * INT_MIN (:α)) ∧ Abbrev (WL = dimword (:α)) ∧ 0 < WL ∧
  (n ≠ n DIV WL * WL + n MOD WL ∨ ¬(n MOD WL < WL))
Numeral: (0 ≤ 2 * INT_MIN (:α) ∧ 0 ≤ INT_MIN (:α) ∧ 0 ≤ dimword (:α) ∧
 0 ≤ n DIV WL * WL + n MOD WL ∧ 0 ≤ n DIV WL * WL ∧ 0 ≤ n DIV WL ∧
 0 ≤ n MOD WL ∧ 0 ≤ n ∧ 0 ≤ WL) ∧
∀n' k.
  0 ≤ k ∧ 0 ≤ n' ⇒
  (0 ≤ k DIV n' * n' + k MOD n' ∧ 0 ≤ k DIV n' * n' ∧ 0 ≤ k DIV n' ∧
   0 ≤ k MOD n') ∧ (k MOD n' < n' ∨ ¬(0 < n')) ∧
  ((k = k DIV n' * n' + k MOD n') ∨ ¬(0 < n')) ∧
  (WL = 2 * INT_MIN (:α)) ∧ Abbrev (WL = dimword (:α)) ∧ 0 < WL ∧
  (n ≠ n DIV WL * WL + n MOD WL ∨ ¬(n MOD WL < WL))
CNF2: ∀n' k.
  0 ≤ WL ∧ 0 ≤ n ∧ 0 ≤ n MOD WL ∧ 0 ≤ n DIV WL ∧ 0 ≤ n DIV WL * WL ∧
  0 ≤ n DIV WL * WL + n MOD WL ∧ 0 ≤ dimword (:α) ∧ 0 ≤ INT_MIN (:α) ∧
  0 ≤ 2 * INT_MIN (:α) ∧ (0 ≤ k MOD n' ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ k DIV n' ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ k DIV n' * n' ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ k DIV n' * n' + k MOD n' ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n')) ∧
  (¬(0 < n') ∨ k MOD n' < n' ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n')) ∧
  (¬(0 < n') ∨ (k = k DIV n' * n' + k MOD n') ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n')) ∧
  ((WL = 2 * INT_MIN (:α)) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n')) ∧
  (Abbrev (WL = dimword (:α)) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n')) ∧
  (0 < WL ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n')) ∧
  (¬(n MOD WL < WL) ∨ n ≠ n DIV WL * WL + n MOD WL ∨ ¬(0 ≤ k) ∨
   ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems:  [] |- ∀n r. r < n ⇒ ∀q. (q * n + r) DIV n = q
 [] |- ∀m n. m * n = n * m
 [] |- ∀m n p. m * (n * p) = m * n * p

Goal: [r < INT_MIN (:α),¬(INT_MIN (:α) ≤ r),((q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1)) MOD 2 = 1,Abbrev (r = (q * (2 * INT_MIN (:α)) + r) MOD (2 * INT_MIN (:α))),Abbrev (q = (q * (2 * INT_MIN (:α)) + r) DIV (2 * INT_MIN (:α))),r < 2 * INT_MIN (:α),0 < 2 * INT_MIN (:α),Abbrev (2 * INT_MIN (:α) = dimword (:α))] ?- (q * (2 * INT_MIN (:α)) + r) DIV INT_MIN (:α) = 2 * q
CNF1: ∀m n p.
  (m * (n * p) = m * n * p) ∧ (m * n = n * m) ∧
  (((p * m + n) DIV m = p) ∨ ¬(n < m)) ∧
  Abbrev (2 * INT_MIN (:α) = dimword (:α)) ∧ 0 < 2 * INT_MIN (:α) ∧
  r < 2 * INT_MIN (:α) ∧
  Abbrev (q = (q * (2 * INT_MIN (:α)) + r) DIV (2 * INT_MIN (:α))) ∧
  Abbrev (r = (q * (2 * INT_MIN (:α)) + r) MOD (2 * INT_MIN (:α))) ∧
  (((q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1)) MOD 2 =
   1) ∧ ¬(INT_MIN (:α) ≤ r) ∧ r < INT_MIN (:α) ∧
  (q * (2 * INT_MIN (:α)) + r) DIV INT_MIN (:α) ≠ 2 * q
Numeral: (0 ≤ dimword (:α) ∧
 0 ≤ (q * (2 * INT_MIN (:α)) + r) DIV (2 * INT_MIN (:α)) ∧
 0 ≤ (q * (2 * INT_MIN (:α)) + r) MOD (2 * INT_MIN (:α)) ∧
 0 ≤ ((q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1)) MOD 2 ∧
 0 ≤ (q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1) ∧
 0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ dimindex (:α) − 1 ∧
 0 ≤ dimindex (:α) ∧ 0 ≤ (q * (2 * INT_MIN (:α)) + r) DIV INT_MIN (:α) ∧
 0 ≤ q * (2 * INT_MIN (:α)) + r ∧ 0 ≤ q * (2 * INT_MIN (:α)) ∧
 0 ≤ 2 * INT_MIN (:α) ∧ 0 ≤ r ∧ 0 ≤ INT_MIN (:α) ∧ 0 ≤ 2 * q ∧ 0 ≤ q) ∧
∀m n p.
  0 ≤ p ∧ 0 ≤ n ∧ 0 ≤ m ⇒
  (0 ≤ m * (n * p) ∧ 0 ≤ n * p ∧ 0 ≤ m * n * p ∧ 0 ≤ m * n ∧ 0 ≤ n * m ∧
   0 ≤ (p * m + n) DIV m ∧ 0 ≤ p * m + n ∧ 0 ≤ p * m) ∧
  (m * (n * p) = m * n * p) ∧ (m * n = n * m) ∧
  (((p * m + n) DIV m = p) ∨ ¬(n < m)) ∧
  Abbrev (2 * INT_MIN (:α) = dimword (:α)) ∧ 0 < 2 * INT_MIN (:α) ∧
  r < 2 * INT_MIN (:α) ∧
  Abbrev (q = (q * (2 * INT_MIN (:α)) + r) DIV (2 * INT_MIN (:α))) ∧
  Abbrev (r = (q * (2 * INT_MIN (:α)) + r) MOD (2 * INT_MIN (:α))) ∧
  (((q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1)) MOD 2 =
   1) ∧ ¬(INT_MIN (:α) ≤ r) ∧ r < INT_MIN (:α) ∧
  (q * (2 * INT_MIN (:α)) + r) DIV INT_MIN (:α) ≠ 2 * q
CNF2: ∀m n p.
  0 ≤ q ∧ 0 ≤ 2 * q ∧ 0 ≤ INT_MIN (:α) ∧ 0 ≤ r ∧ 0 ≤ 2 * INT_MIN (:α) ∧
  0 ≤ q * (2 * INT_MIN (:α)) ∧ 0 ≤ q * (2 * INT_MIN (:α)) + r ∧
  0 ≤ (q * (2 * INT_MIN (:α)) + r) DIV INT_MIN (:α) ∧
  0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧
  0 ≤ 2 ** (dimindex (:α) − 1) ∧
  0 ≤ (q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1) ∧
  0 ≤
  ((q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1)) MOD 2 ∧
  0 ≤ (q * (2 * INT_MIN (:α)) + r) MOD (2 * INT_MIN (:α)) ∧
  0 ≤ (q * (2 * INT_MIN (:α)) + r) DIV (2 * INT_MIN (:α)) ∧
  0 ≤ dimword (:α) ∧ (0 ≤ p * m ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (0 ≤ p * m + n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (0 ≤ (p * m + n) DIV m ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (0 ≤ n * m ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (0 ≤ m * n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (0 ≤ m * n * p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (0 ≤ n * p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (0 ≤ m * (n * p) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  ((m * (n * p) = m * n * p) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  ((m * n = n * m) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (¬(n < m) ∨ ((p * m + n) DIV m = p) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨
   ¬(0 ≤ m)) ∧
  (Abbrev (2 * INT_MIN (:α) = dimword (:α)) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨
   ¬(0 ≤ m)) ∧ (0 < 2 * INT_MIN (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (r < 2 * INT_MIN (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (Abbrev (q = (q * (2 * INT_MIN (:α)) + r) DIV (2 * INT_MIN (:α))) ∨
   ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (Abbrev (r = (q * (2 * INT_MIN (:α)) + r) MOD (2 * INT_MIN (:α))) ∨
   ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  ((((q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1)) MOD 2 =
    1) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (¬(INT_MIN (:α) ≤ r) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  (r < INT_MIN (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ m)) ∧
  ((q * (2 * INT_MIN (:α)) + r) DIV INT_MIN (:α) ≠ 2 * q ∨ ¬(0 ≤ p) ∨
   ¬(0 ≤ n) ∨ ¬(0 ≤ m))
Status: Unsatisfiable

User theorems:  [] |- 0 ≠ 1 ∧ 0 < 2
 [] |- ∀n. 0 < n ⇒ ∀k. (k * n) MOD n = 0
 [] |- ∀m n. m * n = n * m
 [] |- INT_MIN (:α) = 2 ** (dimindex (:α) − 1)

Goal: [n DIV INT_MIN (:α) = 2 * q,r < INT_MIN (:α),¬(INT_MIN (:α) ≤ r),((q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1)) MOD 2 = 1,Abbrev (r = n MOD WL),Abbrev (q = n DIV WL),r < WL,n = q * WL + r,0 < WL,Abbrev (WL = dimword (:α)),WL = 2 * INT_MIN (:α)] ?- F
CNF1: ∀m n'.
  (INT_MIN (:α) = 2 ** (dimindex (:α) − 1)) ∧ (m * n' = n' * m) ∧
  (((n' * m) MOD m = 0) ∨ ¬(0 < m)) ∧ 0 ≠ 1 ∧ 0 < 2 ∧
  (n DIV INT_MIN (:α) = 2 * q) ∧ r < INT_MIN (:α) ∧
  ¬(INT_MIN (:α) ≤ r) ∧
  (((q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1)) MOD 2 =
   1) ∧ Abbrev (r = n MOD WL) ∧ Abbrev (q = n DIV WL) ∧ r < WL ∧
  (n = q * WL + r) ∧ 0 < WL ∧ Abbrev (WL = dimword (:α)) ∧
  (WL = 2 * INT_MIN (:α))
Numeral: (0 ≤ n DIV INT_MIN (:α) ∧ 0 ≤ 2 * q ∧
 0 ≤ ((q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1)) MOD 2 ∧
 0 ≤ (q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1) ∧
 0 ≤ q * (2 * INT_MIN (:α)) + r ∧ 0 ≤ q * (2 * INT_MIN (:α)) ∧
 0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ dimindex (:α) − 1 ∧
 0 ≤ dimindex (:α) ∧ 0 ≤ n MOD WL ∧ 0 ≤ n DIV WL ∧ 0 ≤ n ∧
 0 ≤ q * WL + r ∧ 0 ≤ q * WL ∧ 0 ≤ q ∧ 0 ≤ r ∧ 0 ≤ dimword (:α) ∧
 0 ≤ WL ∧ 0 ≤ 2 * INT_MIN (:α) ∧ 0 ≤ INT_MIN (:α)) ∧
∀m n'.
  0 ≤ n' ∧ 0 ≤ m ⇒
  (0 ≤ m * n' ∧ 0 ≤ (n' * m) MOD m ∧ 0 ≤ n' * m) ∧
  (INT_MIN (:α) = 2 ** (dimindex (:α) − 1)) ∧ (m * n' = n' * m) ∧
  (((n' * m) MOD m = 0) ∨ ¬(0 < m)) ∧ 0 ≠ 1 ∧ 0 < 2 ∧
  (n DIV INT_MIN (:α) = 2 * q) ∧ r < INT_MIN (:α) ∧
  ¬(INT_MIN (:α) ≤ r) ∧
  (((q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1)) MOD 2 =
   1) ∧ Abbrev (r = n MOD WL) ∧ Abbrev (q = n DIV WL) ∧ r < WL ∧
  (n = q * WL + r) ∧ 0 < WL ∧ Abbrev (WL = dimword (:α)) ∧
  (WL = 2 * INT_MIN (:α))
CNF2: ∀m n'.
  0 ≤ INT_MIN (:α) ∧ 0 ≤ 2 * INT_MIN (:α) ∧ 0 ≤ WL ∧ 0 ≤ dimword (:α) ∧
  0 ≤ r ∧ 0 ≤ q ∧ 0 ≤ q * WL ∧ 0 ≤ q * WL + r ∧ 0 ≤ n ∧ 0 ≤ n DIV WL ∧
  0 ≤ n MOD WL ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧
  0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ q * (2 * INT_MIN (:α)) ∧
  0 ≤ q * (2 * INT_MIN (:α)) + r ∧
  0 ≤ (q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1) ∧
  0 ≤
  ((q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1)) MOD 2 ∧
  0 ≤ 2 * q ∧ 0 ≤ n DIV INT_MIN (:α) ∧
  (0 ≤ n' * m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 ≤ (n' * m) MOD m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 ≤ m * n' ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  ((INT_MIN (:α) = 2 ** (dimindex (:α) − 1)) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  ((m * n' = n' * m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (¬(0 < m) ∨ ((n' * m) MOD m = 0) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 ≠ 1 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧ (0 < 2 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  ((n DIV INT_MIN (:α) = 2 * q) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (r < INT_MIN (:α) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (¬(INT_MIN (:α) ≤ r) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  ((((q * (2 * INT_MIN (:α)) + r) DIV 2 ** (dimindex (:α) − 1)) MOD 2 =
    1) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (Abbrev (r = n MOD WL) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (Abbrev (q = n DIV WL) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (r < WL ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  ((n = q * WL + r) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (0 < WL ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  (Abbrev (WL = dimword (:α)) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m)) ∧
  ((WL = 2 * INT_MIN (:α)) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m))
Status: Unsatisfiable

User theorems:  []
|- ∀w.
     ¬(dimindex (:β) < dimindex (:α) ∧ dimindex (:β) < dimindex (:γ)) ⇒
     (sw2sw (sw2sw w) = sw2sw w)

Goal: [¬(dimindex (:β) < dimindex (:α) ∧ dimindex (:β) < dimindex (:γ))] ?- sw2sw (sw2sw w) = sw2sw w
CNF1: ∀w'.
  ((sw2sw (sw2sw w') = sw2sw w') ∨ dimindex (:β) < dimindex (:γ)) ∧
  ((sw2sw (sw2sw w') = sw2sw w') ∨ dimindex (:β) < dimindex (:α)) ∧
  (¬(dimindex (:β) < dimindex (:α)) ∨
   ¬(dimindex (:β) < dimindex (:γ))) ∧ sw2sw (sw2sw w) ≠ sw2sw w
Numeral: (0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ dimindex (:γ)) ∧
∀w'.
  ((sw2sw (sw2sw w') = sw2sw w') ∨ dimindex (:β) < dimindex (:γ)) ∧
  ((sw2sw (sw2sw w') = sw2sw w') ∨ dimindex (:β) < dimindex (:α)) ∧
  (¬(dimindex (:β) < dimindex (:α)) ∨
   ¬(dimindex (:β) < dimindex (:γ))) ∧ sw2sw (sw2sw w) ≠ sw2sw w
CNF2: ∀w'.
  0 ≤ dimindex (:γ) ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ dimindex (:α) ∧
  ((sw2sw (sw2sw w') = sw2sw w') ∨ dimindex (:β) < dimindex (:γ)) ∧
  ((sw2sw (sw2sw w') = sw2sw w') ∨ dimindex (:β) < dimindex (:α)) ∧
  (¬(dimindex (:β) < dimindex (:α)) ∨
   ¬(dimindex (:β) < dimindex (:γ))) ∧ sw2sw (sw2sw w) ≠ sw2sw w
Status: Unsatisfiable

User theorems:  [] |- ∀m n. n < m ⇒ ∃p. m = n + (p + 1)
 [] |- ∀m. SUC m = m + 1
 [] |- (∀n. 0 + n = n) ∧ ∀m n. SUC m + n = SUC (m + n)

Goal: [0 < dimindex (:α) − l,l ≤ dimindex (:α) − 1,i < dimindex (:α),dimindex (:α) ≤ SUC h,T] ?- ∃x. dimindex (:α) − l = SUC x
CNF1: ∃p.
  ∀x n.
    (SUC x + n = SUC (x + n)) ∧ (0 + x = x) ∧ (SUC x = x + 1) ∧
    ((x = n + (p x n + 1)) ∨ ¬(n < x)) ∧ dimindex (:α) ≤ SUC h ∧
    i < dimindex (:α) ∧ l ≤ dimindex (:α) − 1 ∧ 0 < dimindex (:α) − l ∧
    dimindex (:α) − l ≠ SUC x
Numeral: (0 ≤ SUC h ∧ 0 ≤ h ∧ 0 ≤ i ∧ 0 ≤ dimindex (:α) − 1 ∧
 0 ≤ dimindex (:α) − l ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ l) ∧
∃p.
  ∀x n.
    0 ≤ n ∧ 0 ≤ x ⇒
    (0 ≤ SUC x + n ∧ 0 ≤ SUC (x + n) ∧ 0 ≤ x + n ∧ 0 ≤ 0 + x ∧
     0 ≤ x + 1 ∧ 0 ≤ n + (p x n + 1) ∧ 0 ≤ p x n + 1 ∧ 0 ≤ p x n ∧
     0 ≤ SUC x) ∧ (SUC x + n = SUC (x + n)) ∧ (0 + x = x) ∧
    (SUC x = x + 1) ∧ ((x = n + (p x n + 1)) ∨ ¬(n < x)) ∧
    dimindex (:α) ≤ SUC h ∧ i < dimindex (:α) ∧ l ≤ dimindex (:α) − 1 ∧
    0 < dimindex (:α) − l ∧ dimindex (:α) − l ≠ SUC x
CNF2: ∃p.
  ∀x n.
    0 ≤ l ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:α) − l ∧
    0 ≤ dimindex (:α) − 1 ∧ 0 ≤ i ∧ 0 ≤ h ∧ 0 ≤ SUC h ∧
    (0 ≤ SUC x ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (0 ≤ p x n ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (0 ≤ p x n + 1 ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (0 ≤ n + (p x n + 1) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (0 ≤ x + 1 ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (0 ≤ 0 + x ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (0 ≤ x + n ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (0 ≤ SUC (x + n) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (0 ≤ SUC x + n ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    ((SUC x + n = SUC (x + n)) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    ((0 + x = x) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    ((SUC x = x + 1) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (¬(n < x) ∨ (x = n + (p x n + 1)) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (dimindex (:α) ≤ SUC h ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (i < dimindex (:α) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (l ≤ dimindex (:α) − 1 ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (0 < dimindex (:α) − l ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (dimindex (:α) − l ≠ SUC x ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x))
Status: Unsatisfiable

User theorems: 
Goal: [l + x = dimindex (:α) − 1,SUC x ≤ i,dimindex (:α) ≤ i + (l + 1),dimindex (:α) − l = SUC x,T,T,i < dimindex (:α),dimindex (:α) ≤ SUC h] ?- BIT (dimindex (:α) − 1) n ⇔ BIT (l + x) n
CNF1: dimindex (:α) ≤ SUC h ∧ i < dimindex (:α) ∧
(dimindex (:α) − l = SUC x) ∧ dimindex (:α) ≤ i + (l + 1) ∧ SUC x ≤ i ∧
(l + x = dimindex (:α) − 1) ∧
(BIT (dimindex (:α) − 1) n ∨ BIT (l + x) n) ∧
(¬BIT (dimindex (:α) − 1) n ∨ ¬BIT (l + x) n)
Numeral: (0 ≤ SUC h ∧ 0 ≤ h ∧ 0 ≤ dimindex (:α) − l ∧ 0 ≤ i + (l + 1) ∧
 0 ≤ l + 1 ∧ 0 ≤ SUC x ∧ 0 ≤ i ∧ 0 ≤ dimindex (:α) − 1 ∧
 0 ≤ dimindex (:α) ∧ 0 ≤ l + x ∧ 0 ≤ l ∧ 0 ≤ x ∧ 0 ≤ n) ∧
dimindex (:α) ≤ SUC h ∧ i < dimindex (:α) ∧
(dimindex (:α) − l = SUC x) ∧ dimindex (:α) ≤ i + (l + 1) ∧ SUC x ≤ i ∧
(l + x = dimindex (:α) − 1) ∧
(BIT (dimindex (:α) − 1) n ∨ BIT (l + x) n) ∧
(¬BIT (dimindex (:α) − 1) n ∨ ¬BIT (l + x) n)
CNF2: 0 ≤ n ∧ 0 ≤ x ∧ 0 ≤ l ∧ 0 ≤ l + x ∧ 0 ≤ dimindex (:α) ∧
0 ≤ dimindex (:α) − 1 ∧ 0 ≤ i ∧ 0 ≤ SUC x ∧ 0 ≤ l + 1 ∧
0 ≤ i + (l + 1) ∧ 0 ≤ dimindex (:α) − l ∧ 0 ≤ h ∧ 0 ≤ SUC h ∧
dimindex (:α) ≤ SUC h ∧ i < dimindex (:α) ∧
(dimindex (:α) − l = SUC x) ∧ dimindex (:α) ≤ i + (l + 1) ∧ SUC x ≤ i ∧
(l + x = dimindex (:α) − 1) ∧
(BIT (dimindex (:α) − 1) n ∨ BIT (l + x) n) ∧
(¬BIT (dimindex (:α) − 1) n ∨ ¬BIT (l + x) n)
Status: Unsatisfiable

User theorems: 
Goal: [i + l = dimindex (:α) − 1,i < SUC x,dimindex (:α) ≤ i + (l + 1),dimindex (:α) − l = SUC x,T,T,T,dimindex (:α) ≤ SUC h] ?- BIT (dimindex (:α) − 1) n ⇔ BIT (i + l) n
CNF1: dimindex (:α) ≤ SUC h ∧ (dimindex (:α) − l = SUC x) ∧
dimindex (:α) ≤ i + (l + 1) ∧ i < SUC x ∧ (i + l = dimindex (:α) − 1) ∧
(BIT (dimindex (:α) − 1) n ∨ BIT (i + l) n) ∧
(¬BIT (dimindex (:α) − 1) n ∨ ¬BIT (i + l) n)
Numeral: (0 ≤ SUC h ∧ 0 ≤ h ∧ 0 ≤ dimindex (:α) − l ∧ 0 ≤ i + (l + 1) ∧
 0 ≤ l + 1 ∧ 0 ≤ SUC x ∧ 0 ≤ x ∧ 0 ≤ dimindex (:α) − 1 ∧
 0 ≤ dimindex (:α) ∧ 0 ≤ i + l ∧ 0 ≤ i ∧ 0 ≤ l ∧ 0 ≤ n) ∧
dimindex (:α) ≤ SUC h ∧ (dimindex (:α) − l = SUC x) ∧
dimindex (:α) ≤ i + (l + 1) ∧ i < SUC x ∧ (i + l = dimindex (:α) − 1) ∧
(BIT (dimindex (:α) − 1) n ∨ BIT (i + l) n) ∧
(¬BIT (dimindex (:α) − 1) n ∨ ¬BIT (i + l) n)
CNF2: 0 ≤ n ∧ 0 ≤ l ∧ 0 ≤ i ∧ 0 ≤ i + l ∧ 0 ≤ dimindex (:α) ∧
0 ≤ dimindex (:α) − 1 ∧ 0 ≤ x ∧ 0 ≤ SUC x ∧ 0 ≤ l + 1 ∧
0 ≤ i + (l + 1) ∧ 0 ≤ dimindex (:α) − l ∧ 0 ≤ h ∧ 0 ≤ SUC h ∧
dimindex (:α) ≤ SUC h ∧ (dimindex (:α) − l = SUC x) ∧
dimindex (:α) ≤ i + (l + 1) ∧ i < SUC x ∧ (i + l = dimindex (:α) − 1) ∧
(BIT (dimindex (:α) − 1) n ∨ BIT (i + l) n) ∧
(¬BIT (dimindex (:α) − 1) n ∨ ¬BIT (i + l) n)
Status: Unsatisfiable

User theorems: 
Goal: [i + l = h,i < SUC (h − l),h ≤ i + l,l ≤ h,i < dimindex (:α),SUC h < dimindex (:α)] ?- BIT h n ⇔ BIT (i + l) n
CNF1: SUC h < dimindex (:α) ∧ i < dimindex (:α) ∧ l ≤ h ∧ h ≤ i + l ∧
i < SUC (h − l) ∧ (i + l = h) ∧ (BIT h n ∨ BIT (i + l) n) ∧
(¬BIT h n ∨ ¬BIT (i + l) n)
Numeral: (0 ≤ SUC h ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ SUC (h − l) ∧ 0 ≤ h − l ∧ 0 ≤ h ∧
 0 ≤ i + l ∧ 0 ≤ i ∧ 0 ≤ l ∧ 0 ≤ n) ∧ SUC h < dimindex (:α) ∧
i < dimindex (:α) ∧ l ≤ h ∧ h ≤ i + l ∧ i < SUC (h − l) ∧ (i + l = h) ∧
(BIT h n ∨ BIT (i + l) n) ∧ (¬BIT h n ∨ ¬BIT (i + l) n)
CNF2: 0 ≤ n ∧ 0 ≤ l ∧ 0 ≤ i ∧ 0 ≤ i + l ∧ 0 ≤ h ∧ 0 ≤ h − l ∧
0 ≤ SUC (h − l) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ SUC h ∧
SUC h < dimindex (:α) ∧ i < dimindex (:α) ∧ l ≤ h ∧ h ≤ i + l ∧
i < SUC (h − l) ∧ (i + l = h) ∧ (BIT h n ∨ BIT (i + l) n) ∧
(¬BIT h n ∨ ¬BIT (i + l) n)
Status: Unsatisfiable

User theorems:  [] |- ∀w. w2n (w2w w) ≤ w2n w
 [] |- ∀w. w2n w < dimword (:α)
 [] |- ∀m n p. m ≤ n ∧ n < p ⇒ m < p

Goal: [] ?- ∀w. w2n (w2w w) < dimword (:α)
CNF1: ∃w.
  ∀w' m n p.
    (m < p ∨ ¬(m ≤ n) ∨ ¬(n < p)) ∧ w2n w' < dimword (:α) ∧
    w2n (w2w w') ≤ w2n w' ∧ ¬(w2n (w2w w) < dimword (:α))
Numeral: 0 ≤ dimword (:α) ∧
∃w.
  0 ≤ w2n (w2w w) ∧
  ∀w' m n p.
    0 ≤ m ∧ 0 ≤ n ∧ 0 ≤ p ⇒
    (0 ≤ w2n (w2w w') ∧ 0 ≤ w2n w') ∧ (m < p ∨ ¬(m ≤ n) ∨ ¬(n < p)) ∧
    w2n w' < dimword (:α) ∧ w2n (w2w w') ≤ w2n w' ∧
    ¬(w2n (w2w w) < dimword (:α))
CNF2: ∃w.
  ∀w' m n p.
    0 ≤ dimword (:α) ∧ 0 ≤ w2n (w2w w) ∧
    (0 ≤ w2n w' ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (0 ≤ w2n (w2w w') ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (¬(n < p) ∨ ¬(m ≤ n) ∨ m < p ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (w2n w' < dimword (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (w2n (w2w w') ≤ w2n w' ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (¬(w2n (w2w w) < dimword (:α)) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p))
Status: Unsatisfiable

User theorems:  [] |- ∀b. 1 < b ⇒ ∀n m. b ** m ≤ b ** n ⇔ m ≤ n
 [] |- 1 < 2
 [] |- ∀n. (1 ** n = 1) ∧ (n ** 1 = n)
 [] |- 1 ≤ dimindex (:α)

Goal: [] ?- 2 ≤ 2 ** dimindex (:α)
CNF1: ∀n n' m.
  1 ≤ dimindex (:α) ∧ (1 ** n = 1) ∧ (n ** 1 = n) ∧ 1 < 2 ∧
  (¬(m ≤ n') ∨ n ** m ≤ n ** n' ∨ ¬(1 < n)) ∧
  (m ≤ n' ∨ ¬(n ** m ≤ n ** n') ∨ ¬(1 < n)) ∧ ¬(2 ≤ 2 ** dimindex (:α))
Numeral: (0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α)) ∧
∀n n' m.
  0 ≤ m ∧ 0 ≤ n' ∧ 0 ≤ n ⇒
  (0 ≤ 1 ** n ∧ 0 ≤ n ** 1 ∧ 0 ≤ n ** m ∧ 0 ≤ n ** n') ∧
  1 ≤ dimindex (:α) ∧ (1 ** n = 1) ∧ (n ** 1 = n) ∧ 1 < 2 ∧
  (¬(m ≤ n') ∨ n ** m ≤ n ** n' ∨ ¬(1 < n)) ∧
  (m ≤ n' ∨ ¬(n ** m ≤ n ** n') ∨ ¬(1 < n)) ∧ ¬(2 ≤ 2 ** dimindex (:α))
CNF2: ∀n n' m.
  0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) ∧
  (0 ≤ n ** n' ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ n)) ∧
  (0 ≤ n ** m ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ n)) ∧
  (0 ≤ n ** 1 ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ n)) ∧
  (0 ≤ 1 ** n ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ n)) ∧
  (1 ≤ dimindex (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ n)) ∧
  ((1 ** n = 1) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ n)) ∧
  ((n ** 1 = n) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ n)) ∧
  (1 < 2 ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ n)) ∧
  (¬(1 < n) ∨ n ** m ≤ n ** n' ∨ ¬(m ≤ n') ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨
   ¬(0 ≤ n)) ∧
  (¬(1 < n) ∨ ¬(n ** m ≤ n ** n') ∨ m ≤ n' ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨
   ¬(0 ≤ n)) ∧
  (¬(2 ≤ 2 ** dimindex (:α)) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ n))
Status: Unsatisfiable

User theorems:  [] |- ∀w. w2n (w2w w) < dimword (:α)
 [] |- ∀w. w2n (w2w w) ≤ w2n w
 [] |- ∀h l w. w2n ((h -- l) w) < 2 ** (SUC h − l)
 [] |- ∀m n p. m ≤ n ∧ n < p ⇒ m < p
 [] |- ∀m n p. m < n ∧ n < p ⇒ m < p

Goal: [] ?- w2n (w2w ((h -- l) w)) < 2 ** (SUC h − l)
CNF1: ∀w' m n w'' p.
  (m < p ∨ ¬(m < n) ∨ ¬(n < p)) ∧ (m < p ∨ ¬(m ≤ n) ∨ ¬(n < p)) ∧
  w2n ((m -- n) w'') < 2 ** (SUC m − n) ∧ w2n (w2w w') ≤ w2n w' ∧
  w2n (w2w w') < dimword (:α) ∧
  ¬(w2n (w2w ((h -- l) w)) < 2 ** (SUC h − l))
Numeral: (0 ≤ dimword (:α) ∧ 0 ≤ w2n (w2w ((h -- l) w)) ∧ 0 ≤ 2 ** (SUC h − l) ∧
 0 ≤ SUC h − l ∧ 0 ≤ SUC h ∧ 0 ≤ h ∧ 0 ≤ l) ∧
∀w' m n w'' p.
  0 ≤ p ∧ 0 ≤ m ∧ 0 ≤ n ⇒
  (0 ≤ w2n ((m -- n) w'') ∧ 0 ≤ 2 ** (SUC m − n) ∧ 0 ≤ SUC m − n ∧
   0 ≤ SUC m ∧ 0 ≤ w2n w' ∧ 0 ≤ w2n (w2w w')) ∧
  (m < p ∨ ¬(m < n) ∨ ¬(n < p)) ∧ (m < p ∨ ¬(m ≤ n) ∨ ¬(n < p)) ∧
  w2n ((m -- n) w'') < 2 ** (SUC m − n) ∧ w2n (w2w w') ≤ w2n w' ∧
  w2n (w2w w') < dimword (:α) ∧
  ¬(w2n (w2w ((h -- l) w)) < 2 ** (SUC h − l))
CNF2: ∀w' m n w'' p.
  0 ≤ l ∧ 0 ≤ h ∧ 0 ≤ SUC h ∧ 0 ≤ SUC h − l ∧ 0 ≤ 2 ** (SUC h − l) ∧
  0 ≤ w2n (w2w ((h -- l) w)) ∧ 0 ≤ dimword (:α) ∧
  (0 ≤ w2n (w2w w') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ w2n w' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ SUC m ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ SUC m − n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ 2 ** (SUC m − n) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ w2n ((m -- n) w'') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (¬(n < p) ∨ ¬(m < n) ∨ m < p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (¬(n < p) ∨ ¬(m ≤ n) ∨ m < p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (w2n ((m -- n) w'') < 2 ** (SUC m − n) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨
   ¬(0 ≤ n)) ∧
  (w2n (w2w w') ≤ w2n w' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (w2n (w2w w') < dimword (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (¬(w2n (w2w ((h -- l) w)) < 2 ** (SUC h − l)) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨
   ¬(0 ≤ n))
Status: Unsatisfiable

User theorems:  [] |- ∀m n p. m < n ∧ n ≤ p ⇒ m < p
 [] |- 0 < dimindex (:α)

Goal: [i + (l + n) < dimindex (:γ),i + l < dimindex (:γ),dimindex (:β) ≤ i + l,i < dimindex (:γ),dimindex (:β) ≤ i,i < dimindex (:α)] ?- 0 < i + l
CNF1: ∀m n' p.
  0 < dimindex (:α) ∧ (m < p ∨ ¬(m < n') ∨ ¬(n' ≤ p)) ∧
  i < dimindex (:α) ∧ dimindex (:β) ≤ i ∧ i < dimindex (:γ) ∧
  dimindex (:β) ≤ i + l ∧ i + l < dimindex (:γ) ∧
  i + (l + n) < dimindex (:γ) ∧ ¬(0 < i + l)
Numeral: (0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ i + (l + n) ∧ 0 ≤ l + n ∧
 0 ≤ n ∧ 0 ≤ dimindex (:γ) ∧ 0 ≤ i + l ∧ 0 ≤ i ∧ 0 ≤ l) ∧
∀m n' p.
  0 ≤ m ∧ 0 ≤ n' ∧ 0 ≤ p ⇒
  0 < dimindex (:α) ∧ (m < p ∨ ¬(m < n') ∨ ¬(n' ≤ p)) ∧
  i < dimindex (:α) ∧ dimindex (:β) ≤ i ∧ i < dimindex (:γ) ∧
  dimindex (:β) ≤ i + l ∧ i + l < dimindex (:γ) ∧
  i + (l + n) < dimindex (:γ) ∧ ¬(0 < i + l)
CNF2: ∀m n' p.
  0 ≤ l ∧ 0 ≤ i ∧ 0 ≤ i + l ∧ 0 ≤ dimindex (:γ) ∧ 0 ≤ n ∧ 0 ≤ l + n ∧
  0 ≤ i + (l + n) ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ dimindex (:α) ∧
  (0 < dimindex (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (¬(n' ≤ p) ∨ ¬(m < n') ∨ m < p ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (i < dimindex (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (dimindex (:β) ≤ i ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (i < dimindex (:γ) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (dimindex (:β) ≤ i + l ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (i + l < dimindex (:γ) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (i + (l + n) < dimindex (:γ) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (¬(0 < i + l) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p))
Status: Unknown

User theorems:  [] |- i + (l + n) ≤ h + n ⇔ i + l ≤ h

Goal: [i + (l + n) < dimindex (:γ),i + l < dimindex (:γ),i + l < dimindex (:β),i < dimindex (:γ),i < dimindex (:β),i < dimindex (:α)] ?- i + l ≤ h ∧ i + (l + n) ≤ m ∧ w ' (i + (l + n)) ⇔
(i + (l + n) ≤ m ∧ i + (l + n) ≤ h + n) ∧ w ' (i + (l + n))
CNF1: (¬(i + (l + n) ≤ h + n) ∨ i + l ≤ h) ∧
(i + (l + n) ≤ h + n ∨ ¬(i + l ≤ h)) ∧ i < dimindex (:α) ∧
i < dimindex (:β) ∧ i < dimindex (:γ) ∧ i + l < dimindex (:β) ∧
i + l < dimindex (:γ) ∧ i + (l + n) < dimindex (:γ) ∧
w ' (i + (l + n)) ∧ (i + (l + n) ≤ m ∨ w ' (i + (l + n))) ∧
(i + l ≤ h ∨ w ' (i + (l + n))) ∧
(w ' (i + (l + n)) ∨ i + (l + n) ≤ m) ∧ i + (l + n) ≤ m ∧
(i + l ≤ h ∨ i + (l + n) ≤ m) ∧ (i + l ≤ h ∨ i + (l + n) ≤ h + n) ∧
(i + (l + n) ≤ m ∨ i + (l + n) ≤ h + n) ∧
(w ' (i + (l + n)) ∨ i + (l + n) ≤ h + n) ∧
(¬w ' (i + (l + n)) ∨ ¬(i + (l + n) ≤ m) ∨ ¬(i + l ≤ h) ∨
 ¬(i + (l + n) ≤ h + n))
Numeral: (0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ dimindex (:γ) ∧ 0 ≤ m ∧
 0 ≤ i + l ∧ 0 ≤ i + (l + n) ∧ 0 ≤ i ∧ 0 ≤ l + n ∧ 0 ≤ l ∧ 0 ≤ h + n ∧
 0 ≤ h ∧ 0 ≤ n) ∧ (¬(i + (l + n) ≤ h + n) ∨ i + l ≤ h) ∧
(i + (l + n) ≤ h + n ∨ ¬(i + l ≤ h)) ∧ i < dimindex (:α) ∧
i < dimindex (:β) ∧ i < dimindex (:γ) ∧ i + l < dimindex (:β) ∧
i + l < dimindex (:γ) ∧ i + (l + n) < dimindex (:γ) ∧
w ' (i + (l + n)) ∧ (i + (l + n) ≤ m ∨ w ' (i + (l + n))) ∧
(i + l ≤ h ∨ w ' (i + (l + n))) ∧
(w ' (i + (l + n)) ∨ i + (l + n) ≤ m) ∧ i + (l + n) ≤ m ∧
(i + l ≤ h ∨ i + (l + n) ≤ m) ∧ (i + l ≤ h ∨ i + (l + n) ≤ h + n) ∧
(i + (l + n) ≤ m ∨ i + (l + n) ≤ h + n) ∧
(w ' (i + (l + n)) ∨ i + (l + n) ≤ h + n) ∧
(¬w ' (i + (l + n)) ∨ ¬(i + (l + n) ≤ m) ∨ ¬(i + l ≤ h) ∨
 ¬(i + (l + n) ≤ h + n))
CNF2: 0 ≤ n ∧ 0 ≤ h ∧ 0 ≤ h + n ∧ 0 ≤ l ∧ 0 ≤ l + n ∧ 0 ≤ i ∧
0 ≤ i + (l + n) ∧ 0 ≤ i + l ∧ 0 ≤ m ∧ 0 ≤ dimindex (:γ) ∧
0 ≤ dimindex (:β) ∧ 0 ≤ dimindex (:α) ∧
(¬(i + (l + n) ≤ h + n) ∨ i + l ≤ h) ∧
(i + (l + n) ≤ h + n ∨ ¬(i + l ≤ h)) ∧ i < dimindex (:α) ∧
i < dimindex (:β) ∧ i < dimindex (:γ) ∧ i + l < dimindex (:β) ∧
i + l < dimindex (:γ) ∧ i + (l + n) < dimindex (:γ) ∧
w ' (i + (l + n)) ∧ (i + (l + n) ≤ m ∨ w ' (i + (l + n))) ∧
(i + l ≤ h ∨ w ' (i + (l + n))) ∧
(w ' (i + (l + n)) ∨ i + (l + n) ≤ m) ∧ i + (l + n) ≤ m ∧
(i + l ≤ h ∨ i + (l + n) ≤ m) ∧ (i + l ≤ h ∨ i + (l + n) ≤ h + n) ∧
(i + (l + n) ≤ m ∨ i + (l + n) ≤ h + n) ∧
(w ' (i + (l + n)) ∨ i + (l + n) ≤ h + n) ∧
(¬w ' (i + (l + n)) ∨ ¬(i + (l + n) ≤ m) ∨ ¬(i + l ≤ h) ∨
 ¬(i + (l + n) ≤ h + n))
Status: Unsatisfiable

User theorems:  [] |- 0 < dimindex (:α)
 [] |- ∀n. n ≠ 0 ⇔ 0 < n

Goal: [i < dimindex (:α),dimindex (:γ) ≤ i,FINITE 𝕌(:γ),FINITE 𝕌(:β),i < dimindex (:δ),h + 1 = l + dimindex (:δ),dimindex (:γ) = 0,m + 1 ≤ l,h = m + dimindex (:β)] ?- i + (m + 1) ≤ dimindex (:α) − 1 ∧ w ' (i + (m + 1)) ⇔
i + l ≤ dimindex (:α) − 1 ∧ w ' (i + l)
CNF1: ∀n.
  ((n = 0) ∨ 0 < n) ∧ (n ≠ 0 ∨ ¬(0 < n)) ∧ 0 < dimindex (:α) ∧
  (h = m + dimindex (:β)) ∧ m + 1 ≤ l ∧ (dimindex (:γ) = 0) ∧
  (h + 1 = l + dimindex (:δ)) ∧ i < dimindex (:δ) ∧ FINITE 𝕌(:β) ∧
  FINITE 𝕌(:γ) ∧ dimindex (:γ) ≤ i ∧ i < dimindex (:α) ∧
  (w ' (i + (m + 1)) ∨ w ' (i + l)) ∧
  (i + (m + 1) ≤ dimindex (:α) − 1 ∨ w ' (i + l)) ∧
  (i + (m + 1) ≤ dimindex (:α) − 1 ∨ i + l ≤ dimindex (:α) − 1) ∧
  (w ' (i + (m + 1)) ∨ i + l ≤ dimindex (:α) − 1) ∧
  (¬w ' (i + (m + 1)) ∨ ¬(i + (m + 1) ≤ dimindex (:α) − 1) ∨
   ¬(i + l ≤ dimindex (:α) − 1) ∨ ¬w ' (i + l))
Numeral: (0 ≤ m + dimindex (:β) ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ h + 1 ∧ 0 ≤ h ∧
 0 ≤ l + dimindex (:δ) ∧ 0 ≤ dimindex (:δ) ∧ 0 ≤ dimindex (:γ) ∧
 0 ≤ i + (m + 1) ∧ 0 ≤ m + 1 ∧ 0 ≤ m ∧ 0 ≤ dimindex (:α) − 1 ∧
 0 ≤ dimindex (:α) ∧ 0 ≤ i + l ∧ 0 ≤ i ∧ 0 ≤ l) ∧
∀n.
  0 ≤ n ⇒
  ((n = 0) ∨ 0 < n) ∧ (n ≠ 0 ∨ ¬(0 < n)) ∧ 0 < dimindex (:α) ∧
  (h = m + dimindex (:β)) ∧ m + 1 ≤ l ∧ (dimindex (:γ) = 0) ∧
  (h + 1 = l + dimindex (:δ)) ∧ i < dimindex (:δ) ∧ FINITE 𝕌(:β) ∧
  FINITE 𝕌(:γ) ∧ dimindex (:γ) ≤ i ∧ i < dimindex (:α) ∧
  (w ' (i + (m + 1)) ∨ w ' (i + l)) ∧
  (i + (m + 1) ≤ dimindex (:α) − 1 ∨ w ' (i + l)) ∧
  (i + (m + 1) ≤ dimindex (:α) − 1 ∨ i + l ≤ dimindex (:α) − 1) ∧
  (w ' (i + (m + 1)) ∨ i + l ≤ dimindex (:α) − 1) ∧
  (¬w ' (i + (m + 1)) ∨ ¬(i + (m + 1) ≤ dimindex (:α) − 1) ∨
   ¬(i + l ≤ dimindex (:α) − 1) ∨ ¬w ' (i + l))
CNF2: ∀n.
  0 ≤ l ∧ 0 ≤ i ∧ 0 ≤ i + l ∧ 0 ≤ dimindex (:α) ∧
  0 ≤ dimindex (:α) − 1 ∧ 0 ≤ m ∧ 0 ≤ m + 1 ∧ 0 ≤ i + (m + 1) ∧
  0 ≤ dimindex (:γ) ∧ 0 ≤ dimindex (:δ) ∧ 0 ≤ l + dimindex (:δ) ∧
  0 ≤ h ∧ 0 ≤ h + 1 ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ m + dimindex (:β) ∧
  (0 < n ∨ (n = 0) ∨ ¬(0 ≤ n)) ∧ (¬(0 < n) ∨ n ≠ 0 ∨ ¬(0 ≤ n)) ∧
  (0 < dimindex (:α) ∨ ¬(0 ≤ n)) ∧
  ((h = m + dimindex (:β)) ∨ ¬(0 ≤ n)) ∧ (m + 1 ≤ l ∨ ¬(0 ≤ n)) ∧
  ((dimindex (:γ) = 0) ∨ ¬(0 ≤ n)) ∧
  ((h + 1 = l + dimindex (:δ)) ∨ ¬(0 ≤ n)) ∧
  (i < dimindex (:δ) ∨ ¬(0 ≤ n)) ∧ (FINITE 𝕌(:β) ∨ ¬(0 ≤ n)) ∧
  (FINITE 𝕌(:γ) ∨ ¬(0 ≤ n)) ∧ (dimindex (:γ) ≤ i ∨ ¬(0 ≤ n)) ∧
  (i < dimindex (:α) ∨ ¬(0 ≤ n)) ∧
  (w ' (i + l) ∨ w ' (i + (m + 1)) ∨ ¬(0 ≤ n)) ∧
  (w ' (i + l) ∨ i + (m + 1) ≤ dimindex (:α) − 1 ∨ ¬(0 ≤ n)) ∧
  (i + l ≤ dimindex (:α) − 1 ∨ i + (m + 1) ≤ dimindex (:α) − 1 ∨
   ¬(0 ≤ n)) ∧
  (i + l ≤ dimindex (:α) − 1 ∨ w ' (i + (m + 1)) ∨ ¬(0 ≤ n)) ∧
  (¬w ' (i + l) ∨ ¬(i + l ≤ dimindex (:α) − 1) ∨
   ¬(i + (m + 1) ≤ dimindex (:α) − 1) ∨ ¬w ' (i + (m + 1)) ∨ ¬(0 ≤ n))
Status: Unknown

User theorems:  [] |- ∀m n. ¬(m < n) ⇔ n ≤ m
 [] |- ∀m n. n ≤ m ⇒ ∃p. p + n = m
 [] |- ∀m n. m + n = n + m

Goal: [¬(i < A),Abbrev (A = dimindex (:α)),0 < A,i < dimindex (:β)] ?- ∃x. i = x + A
CNF1: ∃p.
  ∀x n.
    (x + n = n + x) ∧ ((p x n + n = x) ∨ ¬(n ≤ x)) ∧
    (¬(x < n) ∨ ¬(n ≤ x)) ∧ (x < n ∨ n ≤ x) ∧ i < dimindex (:β) ∧
    0 < A ∧ Abbrev (A = dimindex (:α)) ∧ ¬(i < A) ∧ i ≠ x + A
Numeral: (0 ≤ dimindex (:β) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ i ∧ 0 ≤ A) ∧
∃p.
  ∀x n.
    0 ≤ n ∧ 0 ≤ x ⇒
    (0 ≤ x + n ∧ 0 ≤ n + x ∧ 0 ≤ p x n + n ∧ 0 ≤ p x n ∧ 0 ≤ x + A) ∧
    (x + n = n + x) ∧ ((p x n + n = x) ∨ ¬(n ≤ x)) ∧
    (¬(x < n) ∨ ¬(n ≤ x)) ∧ (x < n ∨ n ≤ x) ∧ i < dimindex (:β) ∧
    0 < A ∧ Abbrev (A = dimindex (:α)) ∧ ¬(i < A) ∧ i ≠ x + A
CNF2: ∃p.
  ∀x n.
    0 ≤ A ∧ 0 ≤ i ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:β) ∧
    (0 ≤ x + A ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (0 ≤ p x n ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (0 ≤ p x n + n ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (0 ≤ n + x ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (0 ≤ x + n ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    ((x + n = n + x) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (¬(n ≤ x) ∨ (p x n + n = x) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (¬(n ≤ x) ∨ ¬(x < n) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (n ≤ x ∨ x < n ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (i < dimindex (:β) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (0 < A ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (Abbrev (A = dimindex (:α)) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧
    (¬(i < A) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x)) ∧ (i ≠ x + A ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ x))
Status: Unknown

User theorems:  []
|- ∀a b n. n ≠ 0 ∧ 2 ** a ≤ n ∧ n < 2 ** b ⇒ ∃i. a ≤ i ∧ i < b ∧ BIT i n

Goal: [n ≠ 0,2 ** SUC (dimindex (:α) − (n' + 1)) ≤ n,BIT (dimindex (:α) − (n' + 1)) n,∀m. m < n' ⇒ ¬BIT (dimindex (:α) − (m + 1)) n,n MOD 2 ** dimindex (:α) ≠ 0,n < 2 ** dimindex (:α)] ?- ∃i. SUC (dimindex (:α) − (n' + 1)) ≤ i ∧ i < dimindex (:α) ∧ BIT i n
CNF1: ∃i.
  ∀i' b n''.
    (BIT (i i' b n'') n'' ∨ (n'' = 0) ∨ ¬(2 ** i' ≤ n'') ∨
     ¬(n'' < 2 ** b)) ∧
    (i i' b n'' < b ∨ (n'' = 0) ∨ ¬(2 ** i' ≤ n'') ∨ ¬(n'' < 2 ** b)) ∧
    (i' ≤ i i' b n'' ∨ (n'' = 0) ∨ ¬(2 ** i' ≤ n'') ∨ ¬(n'' < 2 ** b)) ∧
    n < 2 ** dimindex (:α) ∧ n MOD 2 ** dimindex (:α) ≠ 0 ∧
    (¬BIT (dimindex (:α) − (i' + 1)) n ∨ ¬(i' < n')) ∧
    BIT (dimindex (:α) − (n' + 1)) n ∧
    2 ** SUC (dimindex (:α) − (n' + 1)) ≤ n ∧ n ≠ 0 ∧
    (¬(SUC (dimindex (:α) − (n' + 1)) ≤ i') ∨ ¬(i' < dimindex (:α)) ∨
     ¬BIT i' n)
Numeral: (0 ≤ n MOD 2 ** dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) ∧
 0 ≤ 2 ** SUC (dimindex (:α) − (n' + 1)) ∧
 0 ≤ SUC (dimindex (:α) − (n' + 1)) ∧ 0 ≤ dimindex (:α) − (n' + 1) ∧
 0 ≤ n' + 1 ∧ 0 ≤ n' ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ n) ∧
∃i.
  ∀i' b n''.
    0 ≤ n'' ∧ 0 ≤ b ∧ 0 ≤ i' ⇒
    (0 ≤ i i' b n'' ∧ 0 ≤ 2 ** i' ∧ 0 ≤ 2 ** b ∧
     0 ≤ dimindex (:α) − (i' + 1) ∧ 0 ≤ i' + 1) ∧
    (BIT (i i' b n'') n'' ∨ (n'' = 0) ∨ ¬(2 ** i' ≤ n'') ∨
     ¬(n'' < 2 ** b)) ∧
    (i i' b n'' < b ∨ (n'' = 0) ∨ ¬(2 ** i' ≤ n'') ∨ ¬(n'' < 2 ** b)) ∧
    (i' ≤ i i' b n'' ∨ (n'' = 0) ∨ ¬(2 ** i' ≤ n'') ∨ ¬(n'' < 2 ** b)) ∧
    n < 2 ** dimindex (:α) ∧ n MOD 2 ** dimindex (:α) ≠ 0 ∧
    (¬BIT (dimindex (:α) − (i' + 1)) n ∨ ¬(i' < n')) ∧
    BIT (dimindex (:α) − (n' + 1)) n ∧
    2 ** SUC (dimindex (:α) − (n' + 1)) ≤ n ∧ n ≠ 0 ∧
    (¬(SUC (dimindex (:α) − (n' + 1)) ≤ i') ∨ ¬(i' < dimindex (:α)) ∨
     ¬BIT i' n)
CNF2: ∃i.
  ∀i' b n''.
    0 ≤ n ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ n' ∧ 0 ≤ n' + 1 ∧
    0 ≤ dimindex (:α) − (n' + 1) ∧ 0 ≤ SUC (dimindex (:α) − (n' + 1)) ∧
    0 ≤ 2 ** SUC (dimindex (:α) − (n' + 1)) ∧ 0 ≤ 2 ** dimindex (:α) ∧
    0 ≤ n MOD 2 ** dimindex (:α) ∧
    (0 ≤ i' + 1 ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ i')) ∧
    (0 ≤ dimindex (:α) − (i' + 1) ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ i')) ∧
    (0 ≤ 2 ** b ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ i')) ∧
    (0 ≤ 2 ** i' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ i')) ∧
    (0 ≤ i i' b n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ i')) ∧
    (¬(n'' < 2 ** b) ∨ ¬(2 ** i' ≤ n'') ∨ (n'' = 0) ∨
     BIT (i i' b n'') n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ i')) ∧
    (¬(n'' < 2 ** b) ∨ ¬(2 ** i' ≤ n'') ∨ (n'' = 0) ∨ i i' b n'' < b ∨
     ¬(0 ≤ n'') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ i')) ∧
    (¬(n'' < 2 ** b) ∨ ¬(2 ** i' ≤ n'') ∨ (n'' = 0) ∨ i' ≤ i i' b n'' ∨
     ¬(0 ≤ n'') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ i')) ∧
    (n < 2 ** dimindex (:α) ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ i')) ∧
    (n MOD 2 ** dimindex (:α) ≠ 0 ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ i')) ∧
    (¬(i' < n') ∨ ¬BIT (dimindex (:α) − (i' + 1)) n ∨ ¬(0 ≤ n'') ∨
     ¬(0 ≤ b) ∨ ¬(0 ≤ i')) ∧
    (BIT (dimindex (:α) − (n' + 1)) n ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ b) ∨
     ¬(0 ≤ i')) ∧
    (2 ** SUC (dimindex (:α) − (n' + 1)) ≤ n ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ b) ∨
     ¬(0 ≤ i')) ∧ (n ≠ 0 ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ i')) ∧
    (¬BIT i' n ∨ ¬(i' < dimindex (:α)) ∨
     ¬(SUC (dimindex (:α) − (n' + 1)) ≤ i') ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ b) ∨
     ¬(0 ≤ i'))
Status: Unsatisfiable

User theorems:  [] |- ∀b n. n ≠ 0 ∧ n < 2 ** b ⇒ ∃i. i < b ∧ BIT i n

Goal: [n ≠ 0,n < 2 ** dimindex (:α)] ?- ∃i. i < dimindex (:α) ∧ BIT i n
CNF1: ∃i.
  ∀i' n'.
    (BIT (i i' n') n' ∨ (n' = 0) ∨ ¬(n' < 2 ** i')) ∧
    (i i' n' < i' ∨ (n' = 0) ∨ ¬(n' < 2 ** i')) ∧
    n < 2 ** dimindex (:α) ∧ n ≠ 0 ∧ (¬(i' < dimindex (:α)) ∨ ¬BIT i' n)
Numeral: (0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ n) ∧
∃i.
  ∀i' n'.
    0 ≤ n' ∧ 0 ≤ i' ⇒
    (0 ≤ i i' n' ∧ 0 ≤ 2 ** i') ∧
    (BIT (i i' n') n' ∨ (n' = 0) ∨ ¬(n' < 2 ** i')) ∧
    (i i' n' < i' ∨ (n' = 0) ∨ ¬(n' < 2 ** i')) ∧
    n < 2 ** dimindex (:α) ∧ n ≠ 0 ∧ (¬(i' < dimindex (:α)) ∨ ¬BIT i' n)
CNF2: ∃i.
  ∀i' n'.
    0 ≤ n ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) ∧
    (0 ≤ 2 ** i' ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ i')) ∧
    (0 ≤ i i' n' ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ i')) ∧
    (¬(n' < 2 ** i') ∨ (n' = 0) ∨ BIT (i i' n') n' ∨ ¬(0 ≤ n') ∨
     ¬(0 ≤ i')) ∧
    (¬(n' < 2 ** i') ∨ (n' = 0) ∨ i i' n' < i' ∨ ¬(0 ≤ n') ∨
     ¬(0 ≤ i')) ∧ (n < 2 ** dimindex (:α) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ i')) ∧
    (n ≠ 0 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ i')) ∧
    (¬BIT i' n ∨ ¬(i' < dimindex (:α)) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ i'))
Status: Unknown

User theorems:  [] |- ∀n i. i < dimindex (:α) ⇒ (n2w n ' i ⇔ BIT i n)

Goal: [BIT i n,i < dimindex (:α),n ≠ 0,n < 2 ** dimindex (:α)] ?- ∃n'. n2w n ' n'
CNF1: ∀n' i'.
  (BIT i' n' ∨ ¬n2w n' ' i' ∨ ¬(i' < dimindex (:α))) ∧
  (¬BIT i' n' ∨ n2w n' ' i' ∨ ¬(i' < dimindex (:α))) ∧
  n < 2 ** dimindex (:α) ∧ n ≠ 0 ∧ i < dimindex (:α) ∧ BIT i n ∧
  ¬n2w n ' n'
Numeral: (0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ i ∧ 0 ≤ n) ∧
∀n' i'.
  0 ≤ i' ∧ 0 ≤ n' ⇒
  (BIT i' n' ∨ ¬n2w n' ' i' ∨ ¬(i' < dimindex (:α))) ∧
  (¬BIT i' n' ∨ n2w n' ' i' ∨ ¬(i' < dimindex (:α))) ∧
  n < 2 ** dimindex (:α) ∧ n ≠ 0 ∧ i < dimindex (:α) ∧ BIT i n ∧
  ¬n2w n ' n'
CNF2: ∀n' i'.
  0 ≤ n ∧ 0 ≤ i ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) ∧
  (¬(i' < dimindex (:α)) ∨ ¬n2w n' ' i' ∨ BIT i' n' ∨ ¬(0 ≤ i') ∨
   ¬(0 ≤ n')) ∧
  (¬(i' < dimindex (:α)) ∨ n2w n' ' i' ∨ ¬BIT i' n' ∨ ¬(0 ≤ i') ∨
   ¬(0 ≤ n')) ∧ (n < 2 ** dimindex (:α) ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ n')) ∧
  (n ≠ 0 ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ n')) ∧
  (i < dimindex (:α) ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ n')) ∧
  (BIT i n ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ n')) ∧
  (¬n2w n ' n' ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems:  [] |- 0 < n ∧ i < n ⇒ (n − SUC (n − i − 1) = i)

Goal: [w ' (n − SUC (n − i − 1)),0 < n,0 < 1 + n,n < i + (1 + n),i < n,i ≠ n,T,¬w ' i,i < dimindex (:α),w ' n,dimindex (:α) = SUC n,w ≠ UINT_MAXw] ?- F
CNF1: ((n − SUC (n − i − 1) = i) ∨ ¬(0 < n) ∨ ¬(i < n)) ∧
w ' (n − SUC (n − i − 1)) ∧ 0 < n ∧ 0 < 1 + n ∧ n < i + (1 + n) ∧
i < n ∧ i ≠ n ∧ ¬w ' i ∧ i < dimindex (:α) ∧ w ' n ∧
(dimindex (:α) = SUC n) ∧ w ≠ UINT_MAXw
Numeral: (0 ≤ n − SUC (n − i − 1) ∧ 0 ≤ SUC (n − i − 1) ∧ 0 ≤ n − i − 1 ∧
 0 ≤ n − i ∧ 0 ≤ i + (1 + n) ∧ 0 ≤ 1 + n ∧ 0 ≤ i ∧ 0 ≤ dimindex (:α) ∧
 0 ≤ SUC n ∧ 0 ≤ n) ∧
((n − SUC (n − i − 1) = i) ∨ ¬(0 < n) ∨ ¬(i < n)) ∧
w ' (n − SUC (n − i − 1)) ∧ 0 < n ∧ 0 < 1 + n ∧ n < i + (1 + n) ∧
i < n ∧ i ≠ n ∧ ¬w ' i ∧ i < dimindex (:α) ∧ w ' n ∧
(dimindex (:α) = SUC n) ∧ w ≠ UINT_MAXw
CNF2: 0 ≤ n ∧ 0 ≤ SUC n ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ i ∧ 0 ≤ 1 + n ∧
0 ≤ i + (1 + n) ∧ 0 ≤ n − i ∧ 0 ≤ n − i − 1 ∧ 0 ≤ SUC (n − i − 1) ∧
0 ≤ n − SUC (n − i − 1) ∧
((n − SUC (n − i − 1) = i) ∨ ¬(0 < n) ∨ ¬(i < n)) ∧
w ' (n − SUC (n − i − 1)) ∧ 0 < n ∧ 0 < 1 + n ∧ n < i + (1 + n) ∧
i < n ∧ i ≠ n ∧ ¬w ' i ∧ i < dimindex (:α) ∧ w ' n ∧
(dimindex (:α) = SUC n) ∧ w ≠ UINT_MAXw
Status: Unsatisfiable

User theorems:  [] |- 0 < n ∧ i < n ⇒ (n − SUC (n − i − 1) = i)

Goal: [¬w ' (n − SUC (n − i − 1)),0 < n,0 < 1 + n,n < i + (1 + n),i < n,i ≠ n,T,w ' i,i < dimindex (:α),¬w ' n,dimindex (:α) = SUC n,w ≠ 0w] ?- F
CNF1: ((n − SUC (n − i − 1) = i) ∨ ¬(0 < n) ∨ ¬(i < n)) ∧
¬w ' (n − SUC (n − i − 1)) ∧ 0 < n ∧ 0 < 1 + n ∧ n < i + (1 + n) ∧
i < n ∧ i ≠ n ∧ w ' i ∧ i < dimindex (:α) ∧ ¬w ' n ∧
(dimindex (:α) = SUC n) ∧ w ≠ 0w
Numeral: (0 ≤ n − SUC (n − i − 1) ∧ 0 ≤ SUC (n − i − 1) ∧ 0 ≤ n − i − 1 ∧
 0 ≤ n − i ∧ 0 ≤ i + (1 + n) ∧ 0 ≤ 1 + n ∧ 0 ≤ i ∧ 0 ≤ dimindex (:α) ∧
 0 ≤ SUC n ∧ 0 ≤ n) ∧
((n − SUC (n − i − 1) = i) ∨ ¬(0 < n) ∨ ¬(i < n)) ∧
¬w ' (n − SUC (n − i − 1)) ∧ 0 < n ∧ 0 < 1 + n ∧ n < i + (1 + n) ∧
i < n ∧ i ≠ n ∧ w ' i ∧ i < dimindex (:α) ∧ ¬w ' n ∧
(dimindex (:α) = SUC n) ∧ w ≠ 0w
CNF2: 0 ≤ n ∧ 0 ≤ SUC n ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ i ∧ 0 ≤ 1 + n ∧
0 ≤ i + (1 + n) ∧ 0 ≤ n − i ∧ 0 ≤ n − i − 1 ∧ 0 ≤ SUC (n − i − 1) ∧
0 ≤ n − SUC (n − i − 1) ∧
((n − SUC (n − i − 1) = i) ∨ ¬(0 < n) ∨ ¬(i < n)) ∧
¬w ' (n − SUC (n − i − 1)) ∧ 0 < n ∧ 0 < 1 + n ∧ n < i + (1 + n) ∧
i < n ∧ i ≠ n ∧ w ' i ∧ i < dimindex (:α) ∧ ¬w ' n ∧
(dimindex (:α) = SUC n) ∧ w ≠ 0w
Status: Unsatisfiable

User theorems:  [] |- ∀v w. v + w = w + v
 [] |- ∀w. -w + w = 0w

Goal: [] ?- ∀w. w + -w = 0w
CNF1: ∃w. ∀w' w''. (-w' + w' = 0w) ∧ (w' + w'' = w'' + w') ∧ w + -w ≠ 0w
Status: Unsatisfiable

User theorems:  [] |- ∀v w. v + w − w = v
 [] |- ∀v w. v − w + w = v

Goal: [] ?- ∀v w x. (v + w = x) ⇔ (v = x − w)
CNF1: ∃v w x.
  ∀v' w'.
    (v' − w' + w' = v') ∧ (v' + w' − w' = v') ∧
    ((v + w = x) ∨ (v = x − w)) ∧ (v + w ≠ x ∨ v ≠ x − w)
Status: Unsatisfiable

User theorems:  [] |- ∀v w. v + w = w + v
 [] |- ∀v w x. (v + w = v + x) ⇔ (w = x)

Goal: [] ?- ∀v w x. (v + w = x + w) ⇔ (v = x)
CNF1: ∃v w x.
  ∀v' w' x'.
    (v' + w' ≠ v' + x' ∨ (w' = x')) ∧ ((v' + w' = v' + x') ∨ w' ≠ x') ∧
    (v' + w' = w' + v') ∧ ((v + w = x + w) ∨ (v = x)) ∧
    (v + w ≠ x + w ∨ v ≠ x)
Status: Unsatisfiable

User theorems:  [] |- ∀w. 0w = -w + w
 [] |- ∀v w x. (v + w = x + w) ⇔ (v = x)

Goal: [-v + v + (-w + w) = -v + -w + (v + w),-v + v + (-w + w) = 0w] ?- -(v + w) = -v + -w
CNF1: ∀v' w' x.
  (v' + w' ≠ x + w' ∨ (v' = x)) ∧ ((v' + w' = x + w') ∨ v' ≠ x) ∧
  (0w = -v' + v') ∧ (-v + v + (-w + w) = 0w) ∧
  (-v + v + (-w + w) = -v + -w + (v + w)) ∧ -(v + w) ≠ -v + -w
Status: Unsatisfiable

User theorems:  [] |- ∀v w x. (v + w = x + w) ⇔ (v = x)

Goal: [- -w + -w = w + -w] ?- - -w = w
CNF1: ∀v w' x.
  (v + w' ≠ x + w' ∨ (v = x)) ∧ ((v + w' = x + w') ∨ v ≠ x) ∧
  (- -w + -w = w + -w) ∧ - -w ≠ w
Status: Unsatisfiable

User theorems:  [] |- ∀v w. v − w = v + -w
 [] |- ∀v w x. v + (w + x) = v + w + x
 [] |- ∀w. -w + w = 0w
 [] |- ∀w. w + -w = 0w
 [] |- (∀w. w + 0w = w) ∧ ∀w. 0w + w = w

Goal: [] ?- ∀v w x. (v = w − x) ⇔ (v + x = w)
CNF1: ∃v w x.
  ∀w' w'' x'.
    (0w + w' = w') ∧ (w' + 0w = w') ∧ (w' + -w' = 0w) ∧
    (-w' + w' = 0w) ∧ (w' + (w'' + x') = w' + w'' + x') ∧
    (w' − w'' = w' + -w'') ∧ ((v = w − x) ∨ (v + x = w)) ∧
    (v ≠ w − x ∨ v + x ≠ w)
Status: Unsatisfiable

User theorems:  [] |- ∀v w x. (v = w − x) ⇔ (v + x = w)

Goal: [] ?- ∀v w x. (v − w = x) ⇔ (v = x + w)
CNF1: ∃v w x.
  ∀v' w' x'.
    (v' ≠ w' − x' ∨ (v' + x' = w')) ∧ ((v' = w' − x') ∨ v' + x' ≠ w') ∧
    ((v − w = x) ∨ (v = x + w)) ∧ (v − w ≠ x ∨ v ≠ x + w)
Status: Unsatisfiable

User theorems:  [] |- ∀w. - -w = w

Goal: [] ?- ∀w x. (-w = -x) ⇔ (w = x)
CNF1: ∃w x. ∀w'. (- -w' = w') ∧ ((-w = -x) ∨ (w = x)) ∧ (-w ≠ -x ∨ w ≠ x)
Status: Unsatisfiable

User theorems:  [] |- ∀w. 0w − w = -w
 [] |- ∀v w x. (v − w = x − w) ⇔ (v = x)
 [] |- ∀v w. v + w − w = v

Goal: [] ?- ∀a b. (a + b = 0w) ⇔ (a = -b)
CNF1: ∃a b.
  ∀v w x.
    (v + w − w = v) ∧ ((v − w = x − w) ∨ v ≠ x) ∧
    (v − w ≠ x − w ∨ (v = x)) ∧ ($- 0w = numeric_negate) ∧
    ((a + b = 0w) ∨ (a = -b)) ∧ (a + b ≠ 0w ∨ a ≠ -b)
Status: Unsatisfiable

User theorems:  [] |- ∀w. -w = -1w * w
 [] |- ∀v w. v * w = w * v
 []
|- ∀v w.
     (0w * v = 0w) ∧ (v * 0w = 0w) ∧ (1w * v = v) ∧ (v * 1w = v) ∧
     ((v + 1w) * w = v * w + w) ∧ (v * (w + 1w) = v + v * w)

Goal: [] ?- ∀x. x * -1w = -x
CNF1: ∃x.
  ∀v w.
    (v * (w + 1w) = v + v * w) ∧ ((v + 1w) * w = v * w + w) ∧
    (v * 1w = v) ∧ (1w * v = v) ∧ (v * 0w = 0w) ∧ (0w * v = 0w) ∧
    (v * w = w * v) ∧ (numeric_negate = $* (-1w)) ∧ x * -1w ≠ -x
Status: Time Out

User theorems:  [] |- ∀h l n. BITS h l n < 2 ** (SUC h − l)
 [] |- ∀m. SUC m − 1 = m
 [] |- ∀l h b. b < 2 ** l ⇒ (BITS h l (2 ** l + b) = BITS h l (2 ** l))
 [] |- ∀b n. BIT b n ⇔ (BITS b b n = 1)
 [] |- ∀b. BIT b (2 ** b)

Goal: [dimindex (:α) = SUC m,T] ?- BIT m (2 ** m + BITS m 1 a)
CNF1: ∀b n b'.
  BIT b (2 ** b) ∧ (BIT b n ∨ BITS b b n ≠ 1) ∧
  (¬BIT b n ∨ (BITS b b n = 1)) ∧
  ((BITS n b (2 ** b + b') = BITS n b (2 ** b)) ∨ ¬(b' < 2 ** b)) ∧
  (SUC b − 1 = b) ∧ BITS b n b' < 2 ** (SUC b − n) ∧
  (dimindex (:α) = SUC m) ∧ ¬BIT m (2 ** m + BITS m 1 a)
Numeral: (0 ≤ dimindex (:α) ∧ 0 ≤ SUC m ∧ 0 ≤ 2 ** m + BITS m 1 a ∧ 0 ≤ 2 ** m ∧
 0 ≤ BITS m 1 a ∧ 0 ≤ m ∧ 0 ≤ a) ∧
∀b n b'.
  0 ≤ b' ∧ 0 ≤ b ∧ 0 ≤ n ⇒
  (0 ≤ BITS b b n ∧ 0 ≤ BITS n b (2 ** b + b') ∧ 0 ≤ 2 ** b + b' ∧
   0 ≤ BITS n b (2 ** b) ∧ 0 ≤ 2 ** b ∧ 0 ≤ SUC b − 1 ∧
   0 ≤ BITS b n b' ∧ 0 ≤ 2 ** (SUC b − n) ∧ 0 ≤ SUC b − n ∧ 0 ≤ SUC b) ∧
  BIT b (2 ** b) ∧ (BIT b n ∨ BITS b b n ≠ 1) ∧
  (¬BIT b n ∨ (BITS b b n = 1)) ∧
  ((BITS n b (2 ** b + b') = BITS n b (2 ** b)) ∨ ¬(b' < 2 ** b)) ∧
  (SUC b − 1 = b) ∧ BITS b n b' < 2 ** (SUC b − n) ∧
  (dimindex (:α) = SUC m) ∧ ¬BIT m (2 ** m + BITS m 1 a)
CNF2: ∀b n b'.
  0 ≤ a ∧ 0 ≤ m ∧ 0 ≤ BITS m 1 a ∧ 0 ≤ 2 ** m ∧
  0 ≤ 2 ** m + BITS m 1 a ∧ 0 ≤ SUC m ∧ 0 ≤ dimindex (:α) ∧
  (0 ≤ SUC b ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ SUC b − n ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ 2 ** (SUC b − n) ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ BITS b n b' ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ SUC b − 1 ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ 2 ** b ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ BITS n b (2 ** b) ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ 2 ** b + b' ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ BITS n b (2 ** b + b') ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (0 ≤ BITS b b n ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (BIT b (2 ** b) ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (BITS b b n ≠ 1 ∨ BIT b n ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  ((BITS b b n = 1) ∨ ¬BIT b n ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (¬(b' < 2 ** b) ∨ (BITS n b (2 ** b + b') = BITS n b (2 ** b)) ∨
   ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  ((SUC b − 1 = b) ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (BITS b n b' < 2 ** (SUC b − n) ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  ((dimindex (:α) = SUC m) ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n)) ∧
  (¬BIT m (2 ** m + BITS m 1 a) ∨ ¬(0 ≤ b') ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n))
Status: Unsatisfiable

User theorems:  [] |- ∀a b. a < b ⇒ 2 ** a < 2 ** b
 [] |- dimword (:α) = 2 ** dimindex (:α)

Goal: [n < dimindex (:α)] ?- 2 ** n < dimword (:α)
CNF1: ∀a b.
  (dimword (:α) = 2 ** dimindex (:α)) ∧ (2 ** a < 2 ** b ∨ ¬(a < b)) ∧
  n < dimindex (:α) ∧ ¬(2 ** n < dimword (:α))
Numeral: (0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** n ∧ 0 ≤ n ∧
 0 ≤ dimword (:α)) ∧
∀a b.
  0 ≤ a ∧ 0 ≤ b ⇒
  (0 ≤ 2 ** a ∧ 0 ≤ 2 ** b) ∧ (dimword (:α) = 2 ** dimindex (:α)) ∧
  (2 ** a < 2 ** b ∨ ¬(a < b)) ∧ n < dimindex (:α) ∧
  ¬(2 ** n < dimword (:α))
CNF2: ∀a b.
  0 ≤ dimword (:α) ∧ 0 ≤ n ∧ 0 ≤ 2 ** n ∧ 0 ≤ dimindex (:α) ∧
  0 ≤ 2 ** dimindex (:α) ∧ (0 ≤ 2 ** b ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (0 ≤ 2 ** a ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  ((dimword (:α) = 2 ** dimindex (:α)) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (¬(a < b) ∨ 2 ** a < 2 ** b ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (n < dimindex (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (¬(2 ** n < dimword (:α)) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b))
Status: Unsatisfiable

User theorems:  [] |- ∀n d. 0 < n ∧ 1 < d ⇒ n DIV d < n

Goal: [1 < 2 ** n,0 < w2n m,0 < n,w2n m ≠ 0,n ≠ 0,2 ** n < dimword (:α),n < dimindex (:α)] ?- w2n m DIV 2 ** n < w2n m
CNF1: ∀n' d.
  (n' DIV d < n' ∨ ¬(0 < n') ∨ ¬(1 < d)) ∧ n < dimindex (:α) ∧
  2 ** n < dimword (:α) ∧ n ≠ 0 ∧ w2n m ≠ 0 ∧ 0 < n ∧ 0 < w2n m ∧
  1 < 2 ** n ∧ ¬(w2n m DIV 2 ** n < w2n m)
Numeral: (0 ≤ dimindex (:α) ∧ 0 ≤ dimword (:α) ∧ 0 ≤ w2n m DIV 2 ** n ∧
 0 ≤ 2 ** n ∧ 0 ≤ n ∧ 0 ≤ w2n m) ∧
∀n' d.
  0 ≤ n' ∧ 0 ≤ d ⇒
  0 ≤ n' DIV d ∧ (n' DIV d < n' ∨ ¬(0 < n') ∨ ¬(1 < d)) ∧
  n < dimindex (:α) ∧ 2 ** n < dimword (:α) ∧ n ≠ 0 ∧ w2n m ≠ 0 ∧
  0 < n ∧ 0 < w2n m ∧ 1 < 2 ** n ∧ ¬(w2n m DIV 2 ** n < w2n m)
CNF2: ∀n' d.
  0 ≤ w2n m ∧ 0 ≤ n ∧ 0 ≤ 2 ** n ∧ 0 ≤ w2n m DIV 2 ** n ∧
  0 ≤ dimword (:α) ∧ 0 ≤ dimindex (:α) ∧
  (0 ≤ n' DIV d ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ d)) ∧
  (¬(1 < d) ∨ ¬(0 < n') ∨ n' DIV d < n' ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ d)) ∧
  (n < dimindex (:α) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ d)) ∧
  (2 ** n < dimword (:α) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ d)) ∧
  (n ≠ 0 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ d)) ∧ (w2n m ≠ 0 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ d)) ∧
  (0 < n ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ d)) ∧ (0 < w2n m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ d)) ∧
  (1 < 2 ** n ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ d)) ∧
  (¬(w2n m DIV 2 ** n < w2n m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ d))
Status: Unsatisfiable

User theorems:  [] |- ∀m n p. m < n ∧ n < p ⇒ m < p
 [] |- ∀w. w2n w < dimword (:α)

Goal: [w2n m DIV 2 ** n < w2n m,1 < 2 ** n,0 < w2n m,0 < n,w2n m ≠ 0,n ≠ 0,2 ** n < dimword (:α),n < dimindex (:α)] ?- w2n m DIV 2 ** n < dimword (:α)
CNF1: ∀m' n' p w.
  w2n w < dimword (:α) ∧ (m' < p ∨ ¬(m' < n') ∨ ¬(n' < p)) ∧
  n < dimindex (:α) ∧ 2 ** n < dimword (:α) ∧ n ≠ 0 ∧ w2n m ≠ 0 ∧
  0 < n ∧ 0 < w2n m ∧ 1 < 2 ** n ∧ w2n m DIV 2 ** n < w2n m ∧
  ¬(w2n m DIV 2 ** n < dimword (:α))
Numeral: (0 ≤ dimindex (:α) ∧ 0 ≤ w2n m DIV 2 ** n ∧ 0 ≤ w2n m ∧ 0 ≤ 2 ** n ∧
 0 ≤ n ∧ 0 ≤ dimword (:α)) ∧
∀m' n' p w.
  0 ≤ m' ∧ 0 ≤ n' ∧ 0 ≤ p ⇒
  0 ≤ w2n w ∧ w2n w < dimword (:α) ∧ (m' < p ∨ ¬(m' < n') ∨ ¬(n' < p)) ∧
  n < dimindex (:α) ∧ 2 ** n < dimword (:α) ∧ n ≠ 0 ∧ w2n m ≠ 0 ∧
  0 < n ∧ 0 < w2n m ∧ 1 < 2 ** n ∧ w2n m DIV 2 ** n < w2n m ∧
  ¬(w2n m DIV 2 ** n < dimword (:α))
CNF2: ∀m' n' p w.
  0 ≤ dimword (:α) ∧ 0 ≤ n ∧ 0 ≤ 2 ** n ∧ 0 ≤ w2n m ∧
  0 ≤ w2n m DIV 2 ** n ∧ 0 ≤ dimindex (:α) ∧
  (0 ≤ w2n w ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (w2n w < dimword (:α) ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (¬(n' < p) ∨ ¬(m' < n') ∨ m' < p ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (n < dimindex (:α) ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (2 ** n < dimword (:α) ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (n ≠ 0 ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (w2n m ≠ 0 ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (0 < n ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (0 < w2n m ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (1 < 2 ** n ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (w2n m DIV 2 ** n < w2n m ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (¬(w2n m DIV 2 ** n < dimword (:α)) ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n') ∨
   ¬(0 ≤ p))
Status: Unsatisfiable

User theorems:  [] |- ∀a b. a < b ⇒ 2 ** a < 2 ** b
 [] |- dimword (:α) = 2 ** dimindex (:α)

Goal: [n < dimindex (:α),a < dimword (:α)] ?- 2 ** n < dimword (:α)
CNF1: ∀a' b.
  (dimword (:α) = 2 ** dimindex (:α)) ∧ (2 ** a' < 2 ** b ∨ ¬(a' < b)) ∧
  a < dimword (:α) ∧ n < dimindex (:α) ∧ ¬(2 ** n < dimword (:α))
Numeral: (0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ a ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** n ∧
 0 ≤ n ∧ 0 ≤ dimword (:α)) ∧
∀a' b.
  0 ≤ a' ∧ 0 ≤ b ⇒
  (0 ≤ 2 ** a' ∧ 0 ≤ 2 ** b) ∧ (dimword (:α) = 2 ** dimindex (:α)) ∧
  (2 ** a' < 2 ** b ∨ ¬(a' < b)) ∧ a < dimword (:α) ∧
  n < dimindex (:α) ∧ ¬(2 ** n < dimword (:α))
CNF2: ∀a' b.
  0 ≤ dimword (:α) ∧ 0 ≤ n ∧ 0 ≤ 2 ** n ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ a ∧
  0 ≤ 2 ** dimindex (:α) ∧ (0 ≤ 2 ** b ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b)) ∧
  (0 ≤ 2 ** a' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b)) ∧
  ((dimword (:α) = 2 ** dimindex (:α)) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b)) ∧
  (¬(a' < b) ∨ 2 ** a' < 2 ** b ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b)) ∧
  (a < dimword (:α) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b)) ∧
  (n < dimindex (:α) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b)) ∧
  (¬(2 ** n < dimword (:α)) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b))
Status: Unsatisfiable

User theorems:  [] |- 0 < dimindex (:α)
 [] |- ∀m n. 0 < n ⇒ m MOD n < n
 [] |- ∀m n p. m < n ∧ n < p ⇒ m < p
 [] |- dimindex (:α) < dimword (:α)

Goal: [] ?- n MOD dimindex (:α) < dimword (:α)
CNF1: ∀m n' p.
  dimindex (:α) < dimword (:α) ∧ (m < p ∨ ¬(m < n') ∨ ¬(n' < p)) ∧
  (m MOD n' < n' ∨ ¬(0 < n')) ∧ 0 < dimindex (:α) ∧
  ¬(n MOD dimindex (:α) < dimword (:α))
Numeral: (0 ≤ n MOD dimindex (:α) ∧ 0 ≤ n ∧ 0 ≤ dimindex (:α) ∧
 0 ≤ dimword (:α)) ∧
∀m n' p.
  0 ≤ p ∧ 0 ≤ m ∧ 0 ≤ n' ⇒
  0 ≤ m MOD n' ∧ dimindex (:α) < dimword (:α) ∧
  (m < p ∨ ¬(m < n') ∨ ¬(n' < p)) ∧ (m MOD n' < n' ∨ ¬(0 < n')) ∧
  0 < dimindex (:α) ∧ ¬(n MOD dimindex (:α) < dimword (:α))
CNF2: ∀m n' p.
  0 ≤ dimword (:α) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ n ∧
  0 ≤ n MOD dimindex (:α) ∧
  (0 ≤ m MOD n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (dimindex (:α) < dimword (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (¬(n' < p) ∨ ¬(m < n') ∨ m < p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (¬(0 < n') ∨ m MOD n' < n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (0 < dimindex (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (¬(n MOD dimindex (:α) < dimword (:α)) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨
   ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems:  [] |- 0 < dimindex (:α)
 [] |- ∀m n. 0 < n ⇒ m MOD n < n
 [] |- ∀m n p. m < n ∧ n < p ⇒ m < p
 [] |- dimindex (:α) < dimword (:α)

Goal: [] ?- n MOD dimindex (:α) < dimword (:α)
CNF1: ∀m n' p.
  dimindex (:α) < dimword (:α) ∧ (m < p ∨ ¬(m < n') ∨ ¬(n' < p)) ∧
  (m MOD n' < n' ∨ ¬(0 < n')) ∧ 0 < dimindex (:α) ∧
  ¬(n MOD dimindex (:α) < dimword (:α))
Numeral: (0 ≤ n MOD dimindex (:α) ∧ 0 ≤ n ∧ 0 ≤ dimindex (:α) ∧
 0 ≤ dimword (:α)) ∧
∀m n' p.
  0 ≤ p ∧ 0 ≤ m ∧ 0 ≤ n' ⇒
  0 ≤ m MOD n' ∧ dimindex (:α) < dimword (:α) ∧
  (m < p ∨ ¬(m < n') ∨ ¬(n' < p)) ∧ (m MOD n' < n' ∨ ¬(0 < n')) ∧
  0 < dimindex (:α) ∧ ¬(n MOD dimindex (:α) < dimword (:α))
CNF2: ∀m n' p.
  0 ≤ dimword (:α) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ n ∧
  0 ≤ n MOD dimindex (:α) ∧
  (0 ≤ m MOD n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (dimindex (:α) < dimword (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (¬(n' < p) ∨ ¬(m < n') ∨ m < p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (¬(0 < n') ∨ m MOD n' < n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (0 < dimindex (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (¬(n MOD dimindex (:α) < dimword (:α)) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨
   ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems:  [] |- a − b ≤ a ∧ a < SUC a
 [] |- ∀a b. a < b ⇒ 2 ** a < 2 ** b
 [] |- ∀m n p. m ≤ n ∧ n < p ⇒ m < p

Goal: [dimindex (:α) = SUC m,BITS m 0 n = 2 ** m + BITS (m − 1) 0 n,BIT m n,1 ≤ m] ?- 2 ** m − n MOD 2 ** m < 2 ** SUC m
CNF1: ∀m' n' p.
  (m' < p ∨ ¬(m' ≤ n') ∨ ¬(n' < p)) ∧ (2 ** m' < 2 ** n' ∨ ¬(m' < n')) ∧
  a − b ≤ a ∧ a < SUC a ∧ 1 ≤ m ∧ BIT m n ∧
  (BITS m 0 n = 2 ** m + BITS (m − 1) 0 n) ∧ (dimindex (:α) = SUC m) ∧
  ¬(2 ** m − n MOD 2 ** m < 2 ** SUC m)
Numeral: (0 ≤ a − b ∧ 0 ≤ b ∧ 0 ≤ SUC a ∧ 0 ≤ a ∧ 0 ≤ BITS m 0 n ∧
 0 ≤ 2 ** m + BITS (m − 1) 0 n ∧ 0 ≤ BITS (m − 1) 0 n ∧ 0 ≤ m − 1 ∧
 0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** m − n MOD 2 ** m ∧ 0 ≤ n MOD 2 ** m ∧
 0 ≤ n ∧ 0 ≤ 2 ** m ∧ 0 ≤ 2 ** SUC m ∧ 0 ≤ SUC m ∧ 0 ≤ m) ∧
∀m' n' p.
  0 ≤ p ∧ 0 ≤ m' ∧ 0 ≤ n' ⇒
  (0 ≤ 2 ** m' ∧ 0 ≤ 2 ** n') ∧ (m' < p ∨ ¬(m' ≤ n') ∨ ¬(n' < p)) ∧
  (2 ** m' < 2 ** n' ∨ ¬(m' < n')) ∧ a − b ≤ a ∧ a < SUC a ∧ 1 ≤ m ∧
  BIT m n ∧ (BITS m 0 n = 2 ** m + BITS (m − 1) 0 n) ∧
  (dimindex (:α) = SUC m) ∧ ¬(2 ** m − n MOD 2 ** m < 2 ** SUC m)
CNF2: ∀m' n' p.
  0 ≤ m ∧ 0 ≤ SUC m ∧ 0 ≤ 2 ** SUC m ∧ 0 ≤ 2 ** m ∧ 0 ≤ n ∧
  0 ≤ n MOD 2 ** m ∧ 0 ≤ 2 ** m − n MOD 2 ** m ∧ 0 ≤ dimindex (:α) ∧
  0 ≤ m − 1 ∧ 0 ≤ BITS (m − 1) 0 n ∧ 0 ≤ 2 ** m + BITS (m − 1) 0 n ∧
  0 ≤ BITS m 0 n ∧ 0 ≤ a ∧ 0 ≤ SUC a ∧ 0 ≤ b ∧ 0 ≤ a − b ∧
  (0 ≤ 2 ** n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n')) ∧
  (0 ≤ 2 ** m' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n')) ∧
  (¬(n' < p) ∨ ¬(m' ≤ n') ∨ m' < p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n')) ∧
  (¬(m' < n') ∨ 2 ** m' < 2 ** n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n')) ∧
  (a − b ≤ a ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n')) ∧
  (a < SUC a ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n')) ∧
  (1 ≤ m ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n')) ∧
  (BIT m n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n')) ∧
  ((BITS m 0 n = 2 ** m + BITS (m − 1) 0 n) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m') ∨
   ¬(0 ≤ n')) ∧
  ((dimindex (:α) = SUC m) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ n')) ∧
  (¬(2 ** m − n MOD 2 ** m < 2 ** SUC m) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m') ∨
   ¬(0 ≤ n'))
Status: Unknown

User theorems:  [] |- SUC m ≤ 1 ⇔ (m = 0)
 [] |- ∀b n. BIT b n ⇔ (BITS b b n = 1)
 [] |- ∀n a. BITS n n a ≠ 1 ⇔ (BITS n n a = 0)

Goal: [¬BIT m n,SUC m ≤ 1,dimindex (:α) = SUC m] ?- BITS m 0 n = 0
CNF1: ∀n' a.
  ((BITS n' n' a = 1) ∨ (BITS n' n' a = 0)) ∧
  (BITS n' n' a ≠ 1 ∨ BITS n' n' a ≠ 0) ∧
  (BIT n' a ∨ BITS n' n' a ≠ 1) ∧ (¬BIT n' a ∨ (BITS n' n' a = 1)) ∧
  (SUC m ≤ 1 ∨ m ≠ 0) ∧ (¬(SUC m ≤ 1) ∨ (m = 0)) ∧
  (dimindex (:α) = SUC m) ∧ SUC m ≤ 1 ∧ ¬BIT m n ∧ BITS m 0 n ≠ 0
Numeral: (0 ≤ dimindex (:α) ∧ 0 ≤ SUC m ∧ 0 ≤ BITS m 0 n ∧ 0 ≤ m ∧ 0 ≤ n) ∧
∀n' a.
  0 ≤ n' ∧ 0 ≤ a ⇒
  0 ≤ BITS n' n' a ∧ ((BITS n' n' a = 1) ∨ (BITS n' n' a = 0)) ∧
  (BITS n' n' a ≠ 1 ∨ BITS n' n' a ≠ 0) ∧
  (BIT n' a ∨ BITS n' n' a ≠ 1) ∧ (¬BIT n' a ∨ (BITS n' n' a = 1)) ∧
  (SUC m ≤ 1 ∨ m ≠ 0) ∧ (¬(SUC m ≤ 1) ∨ (m = 0)) ∧
  (dimindex (:α) = SUC m) ∧ SUC m ≤ 1 ∧ ¬BIT m n ∧ BITS m 0 n ≠ 0
CNF2: ∀n' a.
  0 ≤ n ∧ 0 ≤ m ∧ 0 ≤ BITS m 0 n ∧ 0 ≤ SUC m ∧ 0 ≤ dimindex (:α) ∧
  (0 ≤ BITS n' n' a ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ a)) ∧
  ((BITS n' n' a = 0) ∨ (BITS n' n' a = 1) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ a)) ∧
  (BITS n' n' a ≠ 0 ∨ BITS n' n' a ≠ 1 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ a)) ∧
  (BITS n' n' a ≠ 1 ∨ BIT n' a ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ a)) ∧
  ((BITS n' n' a = 1) ∨ ¬BIT n' a ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ a)) ∧
  (m ≠ 0 ∨ SUC m ≤ 1 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ a)) ∧
  ((m = 0) ∨ ¬(SUC m ≤ 1) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ a)) ∧
  ((dimindex (:α) = SUC m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ a)) ∧
  (SUC m ≤ 1 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ a)) ∧
  (¬BIT m n ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ a)) ∧
  (BITS m 0 n ≠ 0 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ a))
Status: Unsatisfiable

User theorems:  [] |- ∀a. (dimindex (:α) − 1 = 0) ∧ word_msb a ⇒ (a = 1w)
 [] |- (dimindex (:α) − 1 = 0) ⇒ (dimindex (:α) = 1)
 [] |- ∀n. (1 ** n = 1) ∧ (n ** 1 = n)
 [] |- ∀n k. k < n ⇒ (k MOD n = k)
 [] |- 1 < 2
 [] |- ∀n. w2n (n2w n) = n MOD dimword (:α)
 [] |- dimword (:α) = 2 ** dimindex (:α)

Goal: [] ?- ∀a. (dimindex (:α) − 1 = 0) ∧ word_msb a ⇒ (w2n a = 1)
CNF1: ∃a.
  ∀a' n k.
    (dimword (:α) = 2 ** dimindex (:α)) ∧
    (w2n (n2w n) = n MOD dimword (:α)) ∧ 1 < 2 ∧
    ((k MOD n = k) ∨ ¬(k < n)) ∧ (1 ** n = 1) ∧ (n ** 1 = n) ∧
    ((dimindex (:α) = 1) ∨ dimindex (:α) − 1 ≠ 0) ∧
    ((a' = 1w) ∨ dimindex (:α) − 1 ≠ 0 ∨ ¬word_msb a') ∧ word_msb a ∧
    (dimindex (:α) − 1 = 0) ∧ w2n a ≠ 1
Numeral: (0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimword (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧
 0 ≤ dimindex (:α)) ∧
∃a.
  0 ≤ w2n a ∧
  ∀a' n k.
    0 ≤ k ∧ 0 ≤ n ⇒
    (0 ≤ w2n (n2w n) ∧ 0 ≤ n MOD dimword (:α) ∧ 0 ≤ k MOD n ∧
     0 ≤ 1 ** n ∧ 0 ≤ n ** 1) ∧ (dimword (:α) = 2 ** dimindex (:α)) ∧
    (w2n (n2w n) = n MOD dimword (:α)) ∧ 1 < 2 ∧
    ((k MOD n = k) ∨ ¬(k < n)) ∧ (1 ** n = 1) ∧ (n ** 1 = n) ∧
    ((dimindex (:α) = 1) ∨ dimindex (:α) − 1 ≠ 0) ∧
    ((a' = 1w) ∨ dimindex (:α) − 1 ≠ 0 ∨ ¬word_msb a') ∧ word_msb a ∧
    (dimindex (:α) − 1 = 0) ∧ w2n a ≠ 1
CNF2: ∃a.
  ∀a' n k.
    0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧ 0 ≤ dimword (:α) ∧
    0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ w2n a ∧
    (0 ≤ n ** 1 ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n)) ∧
    (0 ≤ 1 ** n ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n)) ∧
    (0 ≤ k MOD n ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n)) ∧
    (0 ≤ n MOD dimword (:α) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n)) ∧
    (0 ≤ w2n (n2w n) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n)) ∧
    ((dimword (:α) = 2 ** dimindex (:α)) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n)) ∧
    ((w2n (n2w n) = n MOD dimword (:α)) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n)) ∧
    (1 < 2 ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n)) ∧
    (¬(k < n) ∨ (k MOD n = k) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n)) ∧
    ((1 ** n = 1) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n)) ∧
    ((n ** 1 = n) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n)) ∧
    (dimindex (:α) − 1 ≠ 0 ∨ (dimindex (:α) = 1) ∨ ¬(0 ≤ k) ∨
     ¬(0 ≤ n)) ∧
    (¬word_msb a' ∨ dimindex (:α) − 1 ≠ 0 ∨ (a' = 1w) ∨ ¬(0 ≤ k) ∨
     ¬(0 ≤ n)) ∧ (word_msb a ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n)) ∧
    ((dimindex (:α) − 1 = 0) ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n)) ∧
    (w2n a ≠ 1 ∨ ¬(0 ≤ k) ∨ ¬(0 ≤ n))
Status: Unsatisfiable

User theorems:  []
|- ∀a. ¬word_msb a ⇒ if a = 0w then ¬word_msb (-a) else word_msb (-a)

Goal: [¬word_msb a,¬((dimindex (:α) − 1 = 0) ∨ (a = 0w) ∨ (a = INT_MINw))] ?- word_msb (-a)
CNF1: ∀a'.
  (word_msb (-a') ∨ (a' = 0w) ∨ word_msb a') ∧
  (¬word_msb (-a') ∨ a' ≠ 0w ∨ word_msb a') ∧ a ≠ INT_MINw ∧ a ≠ 0w ∧
  dimindex (:α) − 1 ≠ 0 ∧ ¬word_msb a ∧ ¬word_msb (-a)
Numeral: (0 ≤ dimindex (:α) − 1 ∧ 0 ≤ dimindex (:α)) ∧
∀a'.
  (word_msb (-a') ∨ (a' = 0w) ∨ word_msb a') ∧
  (¬word_msb (-a') ∨ a' ≠ 0w ∨ word_msb a') ∧ a ≠ INT_MINw ∧ a ≠ 0w ∧
  dimindex (:α) − 1 ≠ 0 ∧ ¬word_msb a ∧ ¬word_msb (-a)
CNF2: ∀a'.
  0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧
  (word_msb (-a') ∨ (a' = 0w) ∨ word_msb a') ∧
  (¬word_msb (-a') ∨ a' ≠ 0w ∨ word_msb a') ∧ a ≠ INT_MINw ∧ a ≠ 0w ∧
  dimindex (:α) − 1 ≠ 0 ∧ ¬word_msb a ∧ ¬word_msb (-a)
Status: Unsatisfiable

User theorems:  [] |- -INT_MINw = INT_MINw
 [] |- ∀w v. (-v = w) ⇔ (v = -w)
 [] |- ∀w. - -w = w
 []
|- ∀a.
     word_msb a ⇒
     if (dimindex (:α) − 1 = 0) ∨ (a = INT_MINw) then word_msb (-a)
     else ¬word_msb (-a)

Goal: [word_msb a,word_msb (-a),¬((dimindex (:α) − 1 = 0) ∨ (a = 0w) ∨ (a = INT_MINw))] ?- F
CNF1: ∀a' v.
  (¬word_msb (-a') ∨ (dimindex (:α) − 1 = 0) ∨ (a' = INT_MINw) ∨
   ¬word_msb a') ∧
  (word_msb (-a') ∨ dimindex (:α) − 1 ≠ 0 ∨ ¬word_msb a') ∧
  (word_msb (-a') ∨ a' ≠ INT_MINw ∨ ¬word_msb a') ∧ (- -a' = a') ∧
  ((-v = a') ∨ v ≠ -a') ∧ (-v ≠ a' ∨ (v = -a')) ∧
  (-INT_MINw = INT_MINw) ∧ word_msb a ∧ word_msb (-a) ∧
  dimindex (:α) − 1 ≠ 0 ∧ a ≠ 0w ∧ a ≠ INT_MINw
Numeral: (0 ≤ dimindex (:α) − 1 ∧ 0 ≤ dimindex (:α)) ∧
∀a' v.
  (¬word_msb (-a') ∨ (dimindex (:α) − 1 = 0) ∨ (a' = INT_MINw) ∨
   ¬word_msb a') ∧
  (word_msb (-a') ∨ dimindex (:α) − 1 ≠ 0 ∨ ¬word_msb a') ∧
  (word_msb (-a') ∨ a' ≠ INT_MINw ∨ ¬word_msb a') ∧ (- -a' = a') ∧
  ((-v = a') ∨ v ≠ -a') ∧ (-v ≠ a' ∨ (v = -a')) ∧
  (-INT_MINw = INT_MINw) ∧ word_msb a ∧ word_msb (-a) ∧
  dimindex (:α) − 1 ≠ 0 ∧ a ≠ 0w ∧ a ≠ INT_MINw
CNF2: ∀a' v.
  0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧
  (¬word_msb (-a') ∨ (dimindex (:α) − 1 = 0) ∨ (a' = INT_MINw) ∨
   ¬word_msb a') ∧
  (word_msb (-a') ∨ dimindex (:α) − 1 ≠ 0 ∨ ¬word_msb a') ∧
  (word_msb (-a') ∨ a' ≠ INT_MINw ∨ ¬word_msb a') ∧ (- -a' = a') ∧
  ((-v = a') ∨ v ≠ -a') ∧ (-v ≠ a' ∨ (v = -a')) ∧
  (-INT_MINw = INT_MINw) ∧ word_msb a ∧ word_msb (-a) ∧
  dimindex (:α) − 1 ≠ 0 ∧ a ≠ 0w ∧ a ≠ INT_MINw
Status: Unsatisfiable

User theorems:  [] |- ∀b n. b ≠ 0 ⇒ (SLICE b b n + SLICE (b − 1) 0 n = SLICE b 0 n)
 [] |- ∀n. n ≠ 0 ⇒ (SUC n − 2 = n − 1)

Goal: [n < dimword (:α),m ≠ 0,dimindex (:α) = SUC m,dimindex (:α) − 1 ≠ 0] ?- SLICE m 0 n = SLICE m m n + SLICE (m − 1) 0 n
CNF1: ∀n' n''.
  ((SUC n' − 2 = n' − 1) ∨ (n' = 0)) ∧
  ((SLICE n' n' n'' + SLICE (n' − 1) 0 n'' = SLICE n' 0 n'') ∨
   (n' = 0)) ∧ dimindex (:α) − 1 ≠ 0 ∧ (dimindex (:α) = SUC m) ∧ m ≠ 0 ∧
  n < dimword (:α) ∧ SLICE m 0 n ≠ SLICE m m n + SLICE (m − 1) 0 n
Numeral: (0 ≤ dimindex (:α) − 1 ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ SUC m ∧
 0 ≤ dimword (:α) ∧ 0 ≤ SLICE m 0 n ∧
 0 ≤ SLICE m m n + SLICE (m − 1) 0 n ∧ 0 ≤ SLICE m m n ∧
 0 ≤ SLICE (m − 1) 0 n ∧ 0 ≤ m − 1 ∧ 0 ≤ m ∧ 0 ≤ n) ∧
∀n' n''.
  0 ≤ n'' ∧ 0 ≤ n' ⇒
  (0 ≤ SUC n' − 2 ∧ 0 ≤ SUC n' ∧
   0 ≤ SLICE n' n' n'' + SLICE (n' − 1) 0 n'' ∧ 0 ≤ SLICE n' n' n'' ∧
   0 ≤ SLICE (n' − 1) 0 n'' ∧ 0 ≤ n' − 1 ∧ 0 ≤ SLICE n' 0 n'') ∧
  ((SUC n' − 2 = n' − 1) ∨ (n' = 0)) ∧
  ((SLICE n' n' n'' + SLICE (n' − 1) 0 n'' = SLICE n' 0 n'') ∨
   (n' = 0)) ∧ dimindex (:α) − 1 ≠ 0 ∧ (dimindex (:α) = SUC m) ∧ m ≠ 0 ∧
  n < dimword (:α) ∧ SLICE m 0 n ≠ SLICE m m n + SLICE (m − 1) 0 n
CNF2: ∀n' n''.
  0 ≤ n ∧ 0 ≤ m ∧ 0 ≤ m − 1 ∧ 0 ≤ SLICE (m − 1) 0 n ∧ 0 ≤ SLICE m m n ∧
  0 ≤ SLICE m m n + SLICE (m − 1) 0 n ∧ 0 ≤ SLICE m 0 n ∧
  0 ≤ dimword (:α) ∧ 0 ≤ SUC m ∧ 0 ≤ dimindex (:α) ∧
  0 ≤ dimindex (:α) − 1 ∧
  (0 ≤ SLICE n' 0 n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ n')) ∧
  (0 ≤ n' − 1 ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ n')) ∧
  (0 ≤ SLICE (n' − 1) 0 n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ n')) ∧
  (0 ≤ SLICE n' n' n'' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ n')) ∧
  (0 ≤ SLICE n' n' n'' + SLICE (n' − 1) 0 n'' ∨ ¬(0 ≤ n'') ∨
   ¬(0 ≤ n')) ∧ (0 ≤ SUC n' ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ n')) ∧
  (0 ≤ SUC n' − 2 ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ n')) ∧
  ((n' = 0) ∨ (SUC n' − 2 = n' − 1) ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ n')) ∧
  ((n' = 0) ∨
   (SLICE n' n' n'' + SLICE (n' − 1) 0 n'' = SLICE n' 0 n'') ∨
   ¬(0 ≤ n'') ∨ ¬(0 ≤ n')) ∧
  (dimindex (:α) − 1 ≠ 0 ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ n')) ∧
  ((dimindex (:α) = SUC m) ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ n')) ∧
  (m ≠ 0 ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ n')) ∧
  (n < dimword (:α) ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ n')) ∧
  (SLICE m 0 n ≠ SLICE m m n + SLICE (m − 1) 0 n ∨ ¬(0 ≤ n'') ∨
   ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems:  [] |- ∀b a. b ≠ 0 ⇒ BITS (b − 1) 0 a < 2 ** b

Goal: [y = x + (p + 1),x < y,Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)),Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)),w2n (-b) = 2 ** (dimindex (:α) − 1) − y,w2n a = 2 ** (dimindex (:α) − 1) + x,w2n b = 2 ** (dimindex (:α) − 1) + y,word_msb b,word_msb a,dimindex (:α) − 1 ≠ 0] ?- y < 2 ** (dimindex (:α) − 1)
CNF1: ∀b' a'.
  (BITS (b' − 1) 0 a' < 2 ** b' ∨ (b' = 0)) ∧ dimindex (:α) − 1 ≠ 0 ∧
  word_msb a ∧ word_msb b ∧ (w2n b = 2 ** (dimindex (:α) − 1) + y) ∧
  (w2n a = 2 ** (dimindex (:α) − 1) + x) ∧
  (w2n (-b) = 2 ** (dimindex (:α) − 1) − y) ∧
  Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∧
  Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∧ x < y ∧
  (y = x + (p + 1)) ∧ ¬(y < 2 ** (dimindex (:α) − 1))
Numeral: (0 ≤ 2 ** (dimindex (:α) − 1) + y ∧ 0 ≤ 2 ** (dimindex (:α) − 1) + x ∧
 0 ≤ w2n (-b) ∧ 0 ≤ 2 ** (dimindex (:α) − 1) − y ∧
 0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n a) ∧ 0 ≤ w2n a ∧
 0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n b) ∧
 0 ≤ dimindex (:α) − 1 − 1 ∧ 0 ≤ w2n b ∧ 0 ≤ x + (p + 1) ∧ 0 ≤ x ∧
 0 ≤ p + 1 ∧ 0 ≤ p ∧ 0 ≤ y ∧ 0 ≤ 2 ** (dimindex (:α) − 1) ∧
 0 ≤ dimindex (:α) − 1 ∧ 0 ≤ dimindex (:α)) ∧
∀b' a'.
  0 ≤ a' ∧ 0 ≤ b' ⇒
  (0 ≤ BITS (b' − 1) 0 a' ∧ 0 ≤ b' − 1 ∧ 0 ≤ 2 ** b') ∧
  (BITS (b' − 1) 0 a' < 2 ** b' ∨ (b' = 0)) ∧ dimindex (:α) − 1 ≠ 0 ∧
  word_msb a ∧ word_msb b ∧ (w2n b = 2 ** (dimindex (:α) − 1) + y) ∧
  (w2n a = 2 ** (dimindex (:α) − 1) + x) ∧
  (w2n (-b) = 2 ** (dimindex (:α) − 1) − y) ∧
  Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∧
  Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∧ x < y ∧
  (y = x + (p + 1)) ∧ ¬(y < 2 ** (dimindex (:α) − 1))
CNF2: ∀b' a'.
  0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧
  0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ y ∧ 0 ≤ p ∧ 0 ≤ p + 1 ∧ 0 ≤ x ∧
  0 ≤ x + (p + 1) ∧ 0 ≤ w2n b ∧ 0 ≤ dimindex (:α) − 1 − 1 ∧
  0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n b) ∧ 0 ≤ w2n a ∧
  0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n a) ∧
  0 ≤ 2 ** (dimindex (:α) − 1) − y ∧ 0 ≤ w2n (-b) ∧
  0 ≤ 2 ** (dimindex (:α) − 1) + x ∧ 0 ≤ 2 ** (dimindex (:α) − 1) + y ∧
  (0 ≤ 2 ** b' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (0 ≤ b' − 1 ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (0 ≤ BITS (b' − 1) 0 a' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((b' = 0) ∨ BITS (b' − 1) 0 a' < 2 ** b' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (dimindex (:α) − 1 ≠ 0 ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (word_msb a ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (word_msb b ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((w2n b = 2 ** (dimindex (:α) − 1) + y) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((w2n a = 2 ** (dimindex (:α) − 1) + x) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((w2n (-b) = 2 ** (dimindex (:α) − 1) − y) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∨ ¬(0 ≤ a') ∨
   ¬(0 ≤ b')) ∧
  (Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∨ ¬(0 ≤ a') ∨
   ¬(0 ≤ b')) ∧ (x < y ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((y = x + (p + 1)) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (¬(y < 2 ** (dimindex (:α) − 1)) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b'))
Status: Unsatisfiable

User theorems:  [] |- ∀b a. b ≠ 0 ⇒ BITS (b − 1) 0 a ≤ 2 ** b

Goal: [Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)),Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)),w2n (-b) = 2 ** dimindex (:α) − y,w2n a = x,w2n b = y,¬(w2n a < w2n b),¬word_msb b,¬word_msb a,dimindex (:α) − 1 ≠ 0,b ≠ 0w] ?- y ≤ 2 ** (dimindex (:α) − 1)
CNF1: ∀b' a'.
  (BITS (b' − 1) 0 a' ≤ 2 ** b' ∨ (b' = 0)) ∧ b ≠ 0w ∧
  dimindex (:α) − 1 ≠ 0 ∧ ¬word_msb a ∧ ¬word_msb b ∧ ¬(w2n a < w2n b) ∧
  (w2n b = y) ∧ (w2n a = x) ∧ (w2n (-b) = 2 ** dimindex (:α) − y) ∧
  Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∧
  Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∧
  ¬(y ≤ 2 ** (dimindex (:α) − 1))
Numeral: (0 ≤ w2n (-b) ∧ 0 ≤ 2 ** dimindex (:α) − y ∧ 0 ≤ 2 ** dimindex (:α) ∧
 0 ≤ x ∧ 0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n a) ∧ 0 ≤ w2n a ∧
 0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n b) ∧
 0 ≤ dimindex (:α) − 1 − 1 ∧ 0 ≤ w2n b ∧ 0 ≤ y ∧
 0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ dimindex (:α) − 1 ∧
 0 ≤ dimindex (:α)) ∧
∀b' a'.
  0 ≤ a' ∧ 0 ≤ b' ⇒
  (0 ≤ BITS (b' − 1) 0 a' ∧ 0 ≤ b' − 1 ∧ 0 ≤ 2 ** b') ∧
  (BITS (b' − 1) 0 a' ≤ 2 ** b' ∨ (b' = 0)) ∧ b ≠ 0w ∧
  dimindex (:α) − 1 ≠ 0 ∧ ¬word_msb a ∧ ¬word_msb b ∧ ¬(w2n a < w2n b) ∧
  (w2n b = y) ∧ (w2n a = x) ∧ (w2n (-b) = 2 ** dimindex (:α) − y) ∧
  Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∧
  Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∧
  ¬(y ≤ 2 ** (dimindex (:α) − 1))
CNF2: ∀b' a'.
  0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧
  0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ y ∧ 0 ≤ w2n b ∧
  0 ≤ dimindex (:α) − 1 − 1 ∧
  0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n b) ∧ 0 ≤ w2n a ∧
  0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n a) ∧ 0 ≤ x ∧
  0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) − y ∧ 0 ≤ w2n (-b) ∧
  (0 ≤ 2 ** b' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (0 ≤ b' − 1 ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (0 ≤ BITS (b' − 1) 0 a' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((b' = 0) ∨ BITS (b' − 1) 0 a' ≤ 2 ** b' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (b ≠ 0w ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (dimindex (:α) − 1 ≠ 0 ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (¬word_msb a ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (¬word_msb b ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (¬(w2n a < w2n b) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((w2n b = y) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((w2n a = x) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((w2n (-b) = 2 ** dimindex (:α) − y) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∨ ¬(0 ≤ a') ∨
   ¬(0 ≤ b')) ∧
  (Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∨ ¬(0 ≤ a') ∨
   ¬(0 ≤ b')) ∧
  (¬(y ≤ 2 ** (dimindex (:α) − 1)) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b'))
Status: Unsatisfiable

User theorems:  [] |- 2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α)
 [] |- ∀m n. m < n ⇒ m ≤ n
 [] |- ∀m n p. m ≤ n ∧ n ≤ p ⇒ m ≤ p

Goal: [y ≤ 2 ** (dimindex (:α) − 1),Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)),Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)),w2n (-b) = 2 ** dimindex (:α) − y,w2n a = x,w2n b = y,¬(w2n a < w2n b),¬word_msb b,¬word_msb a,dimindex (:α) − 1 ≠ 0,b ≠ 0w] ?- y ≤ 2 ** dimindex (:α)
CNF1: ∀m n p.
  (m ≤ p ∨ ¬(m ≤ n) ∨ ¬(n ≤ p)) ∧ (m ≤ n ∨ ¬(m < n)) ∧
  2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α) ∧ b ≠ 0w ∧
  dimindex (:α) − 1 ≠ 0 ∧ ¬word_msb a ∧ ¬word_msb b ∧ ¬(w2n a < w2n b) ∧
  (w2n b = y) ∧ (w2n a = x) ∧ (w2n (-b) = 2 ** dimindex (:α) − y) ∧
  Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∧
  Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∧
  y ≤ 2 ** (dimindex (:α) − 1) ∧ ¬(y ≤ 2 ** dimindex (:α))
Numeral: (0 ≤ w2n (-b) ∧ 0 ≤ 2 ** dimindex (:α) − y ∧ 0 ≤ x ∧
 0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n a) ∧ 0 ≤ w2n a ∧
 0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n b) ∧
 0 ≤ dimindex (:α) − 1 − 1 ∧ 0 ≤ w2n b ∧ 0 ≤ 2 ** (dimindex (:α) − 1) ∧
 0 ≤ dimindex (:α) − 1 ∧ 0 ≤ y ∧ 0 ≤ 2 ** dimindex (:α) ∧
 0 ≤ dimindex (:α)) ∧
∀m n p.
  0 ≤ p ∧ 0 ≤ m ∧ 0 ≤ n ⇒
  (m ≤ p ∨ ¬(m ≤ n) ∨ ¬(n ≤ p)) ∧ (m ≤ n ∨ ¬(m < n)) ∧
  2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α) ∧ b ≠ 0w ∧
  dimindex (:α) − 1 ≠ 0 ∧ ¬word_msb a ∧ ¬word_msb b ∧ ¬(w2n a < w2n b) ∧
  (w2n b = y) ∧ (w2n a = x) ∧ (w2n (-b) = 2 ** dimindex (:α) − y) ∧
  Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∧
  Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∧
  y ≤ 2 ** (dimindex (:α) − 1) ∧ ¬(y ≤ 2 ** dimindex (:α))
CNF2: ∀m n p.
  0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ y ∧
  0 ≤ dimindex (:α) − 1 ∧ 0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ w2n b ∧
  0 ≤ dimindex (:α) − 1 − 1 ∧
  0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n b) ∧ 0 ≤ w2n a ∧
  0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n a) ∧ 0 ≤ x ∧
  0 ≤ 2 ** dimindex (:α) − y ∧ 0 ≤ w2n (-b) ∧
  (¬(n ≤ p) ∨ ¬(m ≤ n) ∨ m ≤ p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (¬(m < n) ∨ m ≤ n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨
   ¬(0 ≤ n)) ∧ (b ≠ 0w ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (dimindex (:α) − 1 ≠ 0 ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (¬word_msb a ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (¬word_msb b ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (¬(w2n a < w2n b) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  ((w2n b = y) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  ((w2n a = x) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  ((w2n (-b) = 2 ** dimindex (:α) − y) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨
   ¬(0 ≤ n)) ∧
  (Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∨ ¬(0 ≤ p) ∨
   ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∨ ¬(0 ≤ p) ∨
   ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (y ≤ 2 ** (dimindex (:α) − 1) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (¬(y ≤ 2 ** dimindex (:α)) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n))
Status: Unsatisfiable

User theorems:  [] |- ∀b a. b ≠ 0 ⇒ BITS (b − 1) 0 a < 2 ** b

Goal: [y ≤ 2 ** dimindex (:α),y ≤ 2 ** (dimindex (:α) − 1),Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)),Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)),w2n (-b) = 2 ** dimindex (:α) − y,w2n a = x,w2n b = y,y ≤ x,¬word_msb b,¬word_msb a,dimindex (:α) − 1 ≠ 0,b ≠ 0w] ?- x < 2 ** (dimindex (:α) − 1)
CNF1: ∀b' a'.
  (BITS (b' − 1) 0 a' < 2 ** b' ∨ (b' = 0)) ∧ b ≠ 0w ∧
  dimindex (:α) − 1 ≠ 0 ∧ ¬word_msb a ∧ ¬word_msb b ∧ y ≤ x ∧
  (w2n b = y) ∧ (w2n a = x) ∧ (w2n (-b) = 2 ** dimindex (:α) − y) ∧
  Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∧
  Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∧
  y ≤ 2 ** (dimindex (:α) − 1) ∧ y ≤ 2 ** dimindex (:α) ∧
  ¬(x < 2 ** (dimindex (:α) − 1))
Numeral: (0 ≤ w2n (-b) ∧ 0 ≤ 2 ** dimindex (:α) − y ∧
 0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n a) ∧ 0 ≤ w2n a ∧
 0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n b) ∧
 0 ≤ dimindex (:α) − 1 − 1 ∧ 0 ≤ w2n b ∧ 0 ≤ y ∧
 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ x ∧ 0 ≤ 2 ** (dimindex (:α) − 1) ∧
 0 ≤ dimindex (:α) − 1 ∧ 0 ≤ dimindex (:α)) ∧
∀b' a'.
  0 ≤ a' ∧ 0 ≤ b' ⇒
  (0 ≤ BITS (b' − 1) 0 a' ∧ 0 ≤ b' − 1 ∧ 0 ≤ 2 ** b') ∧
  (BITS (b' − 1) 0 a' < 2 ** b' ∨ (b' = 0)) ∧ b ≠ 0w ∧
  dimindex (:α) − 1 ≠ 0 ∧ ¬word_msb a ∧ ¬word_msb b ∧ y ≤ x ∧
  (w2n b = y) ∧ (w2n a = x) ∧ (w2n (-b) = 2 ** dimindex (:α) − y) ∧
  Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∧
  Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∧
  y ≤ 2 ** (dimindex (:α) − 1) ∧ y ≤ 2 ** dimindex (:α) ∧
  ¬(x < 2 ** (dimindex (:α) − 1))
CNF2: ∀b' a'.
  0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧
  0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ x ∧ 0 ≤ 2 ** dimindex (:α) ∧
  0 ≤ y ∧ 0 ≤ w2n b ∧ 0 ≤ dimindex (:α) − 1 − 1 ∧
  0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n b) ∧ 0 ≤ w2n a ∧
  0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n a) ∧
  0 ≤ 2 ** dimindex (:α) − y ∧ 0 ≤ w2n (-b) ∧
  (0 ≤ 2 ** b' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (0 ≤ b' − 1 ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (0 ≤ BITS (b' − 1) 0 a' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((b' = 0) ∨ BITS (b' − 1) 0 a' < 2 ** b' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (b ≠ 0w ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (dimindex (:α) − 1 ≠ 0 ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (¬word_msb a ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (¬word_msb b ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (y ≤ x ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((w2n b = y) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((w2n a = x) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((w2n (-b) = 2 ** dimindex (:α) − y) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∨ ¬(0 ≤ a') ∨
   ¬(0 ≤ b')) ∧
  (Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∨ ¬(0 ≤ a') ∨
   ¬(0 ≤ b')) ∧ (y ≤ 2 ** (dimindex (:α) − 1) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (y ≤ 2 ** dimindex (:α) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (¬(x < 2 ** (dimindex (:α) − 1)) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b'))
Status: Unsatisfiable

User theorems:  [] |- ∀b a. b ≠ 0 ⇒ BITS (b − 1) 0 a ≤ 2 ** b

Goal: [Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)),Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)),w2n (-b) = 2 ** dimindex (:α) − y,w2n a = x,w2n b = y,w2n a < w2n b,¬word_msb b,¬word_msb a,dimindex (:α) − 1 ≠ 0,b ≠ 0w] ?- y ≤ 2 ** (dimindex (:α) − 1)
CNF1: ∀b' a'.
  (BITS (b' − 1) 0 a' ≤ 2 ** b' ∨ (b' = 0)) ∧ b ≠ 0w ∧
  dimindex (:α) − 1 ≠ 0 ∧ ¬word_msb a ∧ ¬word_msb b ∧ w2n a < w2n b ∧
  (w2n b = y) ∧ (w2n a = x) ∧ (w2n (-b) = 2 ** dimindex (:α) − y) ∧
  Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∧
  Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∧
  ¬(y ≤ 2 ** (dimindex (:α) − 1))
Numeral: (0 ≤ w2n (-b) ∧ 0 ≤ 2 ** dimindex (:α) − y ∧ 0 ≤ 2 ** dimindex (:α) ∧
 0 ≤ x ∧ 0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n a) ∧ 0 ≤ w2n a ∧
 0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n b) ∧
 0 ≤ dimindex (:α) − 1 − 1 ∧ 0 ≤ w2n b ∧ 0 ≤ y ∧
 0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ dimindex (:α) − 1 ∧
 0 ≤ dimindex (:α)) ∧
∀b' a'.
  0 ≤ a' ∧ 0 ≤ b' ⇒
  (0 ≤ BITS (b' − 1) 0 a' ∧ 0 ≤ b' − 1 ∧ 0 ≤ 2 ** b') ∧
  (BITS (b' − 1) 0 a' ≤ 2 ** b' ∨ (b' = 0)) ∧ b ≠ 0w ∧
  dimindex (:α) − 1 ≠ 0 ∧ ¬word_msb a ∧ ¬word_msb b ∧ w2n a < w2n b ∧
  (w2n b = y) ∧ (w2n a = x) ∧ (w2n (-b) = 2 ** dimindex (:α) − y) ∧
  Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∧
  Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∧
  ¬(y ≤ 2 ** (dimindex (:α) − 1))
CNF2: ∀b' a'.
  0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧
  0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ y ∧ 0 ≤ w2n b ∧
  0 ≤ dimindex (:α) − 1 − 1 ∧
  0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n b) ∧ 0 ≤ w2n a ∧
  0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n a) ∧ 0 ≤ x ∧
  0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) − y ∧ 0 ≤ w2n (-b) ∧
  (0 ≤ 2 ** b' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (0 ≤ b' − 1 ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (0 ≤ BITS (b' − 1) 0 a' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((b' = 0) ∨ BITS (b' − 1) 0 a' ≤ 2 ** b' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (b ≠ 0w ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (dimindex (:α) − 1 ≠ 0 ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (¬word_msb a ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (¬word_msb b ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (w2n a < w2n b ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((w2n b = y) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((w2n a = x) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((w2n (-b) = 2 ** dimindex (:α) − y) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∨ ¬(0 ≤ a') ∨
   ¬(0 ≤ b')) ∧
  (Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∨ ¬(0 ≤ a') ∨
   ¬(0 ≤ b')) ∧
  (¬(y ≤ 2 ** (dimindex (:α) − 1)) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b'))
Status: Unsatisfiable

User theorems:  [] |- 2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α)
 [] |- ∀m n. m < n ⇒ m ≤ n
 [] |- ∀m n p. m ≤ n ∧ n ≤ p ⇒ m ≤ p

Goal: [y ≤ 2 ** (dimindex (:α) − 1),Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)),Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)),w2n (-b) = 2 ** dimindex (:α) − y,w2n a = x,w2n b = y,w2n a < w2n b,¬word_msb b,¬word_msb a,dimindex (:α) − 1 ≠ 0,b ≠ 0w] ?- y ≤ 2 ** dimindex (:α)
CNF1: ∀m n p.
  (m ≤ p ∨ ¬(m ≤ n) ∨ ¬(n ≤ p)) ∧ (m ≤ n ∨ ¬(m < n)) ∧
  2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α) ∧ b ≠ 0w ∧
  dimindex (:α) − 1 ≠ 0 ∧ ¬word_msb a ∧ ¬word_msb b ∧ w2n a < w2n b ∧
  (w2n b = y) ∧ (w2n a = x) ∧ (w2n (-b) = 2 ** dimindex (:α) − y) ∧
  Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∧
  Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∧
  y ≤ 2 ** (dimindex (:α) − 1) ∧ ¬(y ≤ 2 ** dimindex (:α))
Numeral: (0 ≤ w2n (-b) ∧ 0 ≤ 2 ** dimindex (:α) − y ∧ 0 ≤ x ∧
 0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n a) ∧ 0 ≤ w2n a ∧
 0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n b) ∧
 0 ≤ dimindex (:α) − 1 − 1 ∧ 0 ≤ w2n b ∧ 0 ≤ 2 ** (dimindex (:α) − 1) ∧
 0 ≤ dimindex (:α) − 1 ∧ 0 ≤ y ∧ 0 ≤ 2 ** dimindex (:α) ∧
 0 ≤ dimindex (:α)) ∧
∀m n p.
  0 ≤ p ∧ 0 ≤ m ∧ 0 ≤ n ⇒
  (m ≤ p ∨ ¬(m ≤ n) ∨ ¬(n ≤ p)) ∧ (m ≤ n ∨ ¬(m < n)) ∧
  2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α) ∧ b ≠ 0w ∧
  dimindex (:α) − 1 ≠ 0 ∧ ¬word_msb a ∧ ¬word_msb b ∧ w2n a < w2n b ∧
  (w2n b = y) ∧ (w2n a = x) ∧ (w2n (-b) = 2 ** dimindex (:α) − y) ∧
  Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∧
  Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∧
  y ≤ 2 ** (dimindex (:α) − 1) ∧ ¬(y ≤ 2 ** dimindex (:α))
CNF2: ∀m n p.
  0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ y ∧
  0 ≤ dimindex (:α) − 1 ∧ 0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ w2n b ∧
  0 ≤ dimindex (:α) − 1 − 1 ∧
  0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n b) ∧ 0 ≤ w2n a ∧
  0 ≤ BITS (dimindex (:α) − 1 − 1) 0 (w2n a) ∧ 0 ≤ x ∧
  0 ≤ 2 ** dimindex (:α) − y ∧ 0 ≤ w2n (-b) ∧
  (¬(n ≤ p) ∨ ¬(m ≤ n) ∨ m ≤ p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (¬(m < n) ∨ m ≤ n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨
   ¬(0 ≤ n)) ∧ (b ≠ 0w ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (dimindex (:α) − 1 ≠ 0 ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (¬word_msb a ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (¬word_msb b ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (w2n a < w2n b ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  ((w2n b = y) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  ((w2n a = x) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  ((w2n (-b) = 2 ** dimindex (:α) − y) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨
   ¬(0 ≤ n)) ∧
  (Abbrev (x = BITS (dimindex (:α) − 1 − 1) 0 (w2n a)) ∨ ¬(0 ≤ p) ∨
   ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (Abbrev (y = BITS (dimindex (:α) − 1 − 1) 0 (w2n b)) ∨ ¬(0 ≤ p) ∨
   ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (y ≤ 2 ** (dimindex (:α) − 1) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n)) ∧
  (¬(y ≤ 2 ** dimindex (:α)) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n))
Status: Unsatisfiable

User theorems:  []
|- ∀a b.
     a < b ⇔
     (word_msb (a − b) ⇎
      (word_msb a ⇎ word_msb b) ∧ (word_msb (a − b) ⇎ word_msb a))
 []
|- ∀a b.
     dimindex (:α) − 1 ≠ 0 ∧ word_msb a ∧ word_msb b ∧
     word_msb (a − b) ⇒
     w2n a < w2n b
 []
|- ∀a b.
     dimindex (:α) − 1 ≠ 0 ∧ word_msb a ∧ word_msb b ∧
     ¬word_msb (a − b) ⇒
     ¬(w2n a < w2n b)
 []
|- ∀a b.
     dimindex (:α) − 1 ≠ 0 ∧ ¬word_msb a ∧ ¬word_msb b ∧
     word_msb (a − b) ⇒
     w2n a < w2n b
 []
|- ∀a b.
     dimindex (:α) − 1 ≠ 0 ∧ ¬word_msb a ∧ ¬word_msb b ∧
     ¬word_msb (a − b) ⇒
     ¬(w2n a < w2n b)

Goal: [dimindex (:α) − 1 ≠ 0] ?- a < b ⇔
(word_msb a ⇔ word_msb b) ∧ w2n a < w2n b ∨ word_msb a ∧ ¬word_msb b
CNF1: ∀a' b'.
  (¬(w2n a' < w2n b') ∨ (dimindex (:α) − 1 = 0) ∨ word_msb a' ∨
   word_msb b' ∨ word_msb (a' − b')) ∧
  (w2n a' < w2n b' ∨ (dimindex (:α) − 1 = 0) ∨ word_msb a' ∨
   word_msb b' ∨ ¬word_msb (a' − b')) ∧
  (¬(w2n a' < w2n b') ∨ (dimindex (:α) − 1 = 0) ∨ ¬word_msb a' ∨
   ¬word_msb b' ∨ word_msb (a' − b')) ∧
  (w2n a' < w2n b' ∨ (dimindex (:α) − 1 = 0) ∨ ¬word_msb a' ∨
   ¬word_msb b' ∨ ¬word_msb (a' − b')) ∧
  (a' < b' ∨ ¬word_msb (a' − b') ∨ ¬word_msb a') ∧
  (a' < b' ∨ ¬word_msb (a' − b') ∨ word_msb a' ∨ word_msb b') ∧
  (a' < b' ∨ ¬word_msb (a' − b') ∨ ¬word_msb a' ∨ ¬word_msb b') ∧
  (a' < b' ∨ word_msb (a' − b') ∨ word_msb b' ∨ ¬word_msb a') ∧
  (¬(a' < b') ∨ word_msb (a' − b') ∨ word_msb a') ∧
  (¬(a' < b') ∨ word_msb (a' − b') ∨ word_msb a' ∨ word_msb b') ∧
  (¬(a' < b') ∨ word_msb (a' − b') ∨ ¬word_msb a' ∨ ¬word_msb b') ∧
  (¬(a' < b') ∨ ¬word_msb (a' − b') ∨ ¬word_msb b' ∨ word_msb a') ∧
  dimindex (:α) − 1 ≠ 0 ∧ (a < b ∨ w2n a < w2n b ∨ ¬word_msb b) ∧
  (a < b ∨ ¬word_msb b ∨ word_msb a) ∧
  (a < b ∨ ¬word_msb b ∨ word_msb a) ∧
  (a < b ∨ w2n a < w2n b ∨ word_msb a) ∧
  (¬(a < b) ∨ ¬word_msb b ∨ ¬word_msb a ∨ ¬(w2n a < w2n b)) ∧
  (¬(a < b) ∨ word_msb b ∨ word_msb a ∨ ¬(w2n a < w2n b)) ∧
  (¬(a < b) ∨ ¬word_msb a ∨ word_msb b)
Numeral: (0 ≤ dimindex (:α) − 1 ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ w2n a ∧ 0 ≤ w2n b) ∧
∀a' b'.
  (0 ≤ w2n a' ∧ 0 ≤ w2n b') ∧
  (¬(w2n a' < w2n b') ∨ (dimindex (:α) − 1 = 0) ∨ word_msb a' ∨
   word_msb b' ∨ word_msb (a' − b')) ∧
  (w2n a' < w2n b' ∨ (dimindex (:α) − 1 = 0) ∨ word_msb a' ∨
   word_msb b' ∨ ¬word_msb (a' − b')) ∧
  (¬(w2n a' < w2n b') ∨ (dimindex (:α) − 1 = 0) ∨ ¬word_msb a' ∨
   ¬word_msb b' ∨ word_msb (a' − b')) ∧
  (w2n a' < w2n b' ∨ (dimindex (:α) − 1 = 0) ∨ ¬word_msb a' ∨
   ¬word_msb b' ∨ ¬word_msb (a' − b')) ∧
  (a' < b' ∨ ¬word_msb (a' − b') ∨ ¬word_msb a') ∧
  (a' < b' ∨ ¬word_msb (a' − b') ∨ word_msb a' ∨ word_msb b') ∧
  (a' < b' ∨ ¬word_msb (a' − b') ∨ ¬word_msb a' ∨ ¬word_msb b') ∧
  (a' < b' ∨ word_msb (a' − b') ∨ word_msb b' ∨ ¬word_msb a') ∧
  (¬(a' < b') ∨ word_msb (a' − b') ∨ word_msb a') ∧
  (¬(a' < b') ∨ word_msb (a' − b') ∨ word_msb a' ∨ word_msb b') ∧
  (¬(a' < b') ∨ word_msb (a' − b') ∨ ¬word_msb a' ∨ ¬word_msb b') ∧
  (¬(a' < b') ∨ ¬word_msb (a' − b') ∨ ¬word_msb b' ∨ word_msb a') ∧
  dimindex (:α) − 1 ≠ 0 ∧ (a < b ∨ w2n a < w2n b ∨ ¬word_msb b) ∧
  (a < b ∨ ¬word_msb b ∨ word_msb a) ∧
  (a < b ∨ ¬word_msb b ∨ word_msb a) ∧
  (a < b ∨ w2n a < w2n b ∨ word_msb a) ∧
  (¬(a < b) ∨ ¬word_msb b ∨ ¬word_msb a ∨ ¬(w2n a < w2n b)) ∧
  (¬(a < b) ∨ word_msb b ∨ word_msb a ∨ ¬(w2n a < w2n b)) ∧
  (¬(a < b) ∨ ¬word_msb a ∨ word_msb b)
CNF2: ∀a' b'.
  0 ≤ w2n b ∧ 0 ≤ w2n a ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧
  0 ≤ w2n b' ∧ 0 ≤ w2n a' ∧
  (¬(w2n a' < w2n b') ∨ (dimindex (:α) − 1 = 0) ∨ word_msb a' ∨
   word_msb b' ∨ word_msb (a' − b')) ∧
  (w2n a' < w2n b' ∨ (dimindex (:α) − 1 = 0) ∨ word_msb a' ∨
   word_msb b' ∨ ¬word_msb (a' − b')) ∧
  (¬(w2n a' < w2n b') ∨ (dimindex (:α) − 1 = 0) ∨ ¬word_msb a' ∨
   ¬word_msb b' ∨ word_msb (a' − b')) ∧
  (w2n a' < w2n b' ∨ (dimindex (:α) − 1 = 0) ∨ ¬word_msb a' ∨
   ¬word_msb b' ∨ ¬word_msb (a' − b')) ∧
  (a' < b' ∨ ¬word_msb (a' − b') ∨ ¬word_msb a') ∧
  (a' < b' ∨ ¬word_msb (a' − b') ∨ word_msb a' ∨ word_msb b') ∧
  (a' < b' ∨ ¬word_msb (a' − b') ∨ ¬word_msb a' ∨ ¬word_msb b') ∧
  (a' < b' ∨ word_msb (a' − b') ∨ word_msb b' ∨ ¬word_msb a') ∧
  (¬(a' < b') ∨ word_msb (a' − b') ∨ word_msb a') ∧
  (¬(a' < b') ∨ word_msb (a' − b') ∨ word_msb a' ∨ word_msb b') ∧
  (¬(a' < b') ∨ word_msb (a' − b') ∨ ¬word_msb a' ∨ ¬word_msb b') ∧
  (¬(a' < b') ∨ ¬word_msb (a' − b') ∨ ¬word_msb b' ∨ word_msb a') ∧
  dimindex (:α) − 1 ≠ 0 ∧ (a < b ∨ w2n a < w2n b ∨ ¬word_msb b) ∧
  (a < b ∨ ¬word_msb b ∨ word_msb a) ∧
  (a < b ∨ ¬word_msb b ∨ word_msb a) ∧
  (a < b ∨ w2n a < w2n b ∨ word_msb a) ∧
  (¬(a < b) ∨ ¬word_msb b ∨ ¬word_msb a ∨ ¬(w2n a < w2n b)) ∧
  (¬(a < b) ∨ word_msb b ∨ word_msb a ∨ ¬(w2n a < w2n b)) ∧
  (¬(a < b) ∨ ¬word_msb a ∨ word_msb b)
Status: Unsatisfiable

User theorems:  [] |- ∀m n. n < m ⇒ n ≤ m − 1
 [] |- ∀b a. b ≠ 0 ⇒ SLICE (b − 1) 0 a < 2 ** b
 [] |- (∀n. 0 + n = n) ∧ ∀m n. SUC m + n = SUC (m + n)

Goal: [m ≠ 0,dimindex (:α) = SUC m,SLICE m m n + SLICE (m − 1) 0 n = SLICE m 0 n,SLICE m m n = 0,1 ≤ m,¬BIT m n] ?- SLICE m 0 n ≤ 2 ** m − 1
CNF1: ∀m' n'.
  (SUC m' + n' = SUC (m' + n')) ∧ (0 + m' = m') ∧
  (SLICE (m' − 1) 0 n' < 2 ** m' ∨ (m' = 0)) ∧
  (n' ≤ m' − 1 ∨ ¬(n' < m')) ∧ ¬BIT m n ∧ 1 ≤ m ∧ (SLICE m m n = 0) ∧
  (SLICE m m n + SLICE (m − 1) 0 n = SLICE m 0 n) ∧
  (dimindex (:α) = SUC m) ∧ m ≠ 0 ∧ ¬(SLICE m 0 n ≤ 2 ** m − 1)
Numeral: (0 ≤ SLICE m m n + SLICE (m − 1) 0 n ∧ 0 ≤ SLICE m m n ∧
 0 ≤ SLICE (m − 1) 0 n ∧ 0 ≤ m − 1 ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ SUC m ∧
 0 ≤ SLICE m 0 n ∧ 0 ≤ n ∧ 0 ≤ 2 ** m − 1 ∧ 0 ≤ 2 ** m ∧ 0 ≤ m) ∧
∀m' n'.
  0 ≤ n' ∧ 0 ≤ m' ⇒
  (0 ≤ SUC m' + n' ∧ 0 ≤ SUC m' ∧ 0 ≤ SUC (m' + n') ∧ 0 ≤ m' + n' ∧
   0 ≤ 0 + m' ∧ 0 ≤ SLICE (m' − 1) 0 n' ∧ 0 ≤ 2 ** m' ∧ 0 ≤ m' − 1) ∧
  (SUC m' + n' = SUC (m' + n')) ∧ (0 + m' = m') ∧
  (SLICE (m' − 1) 0 n' < 2 ** m' ∨ (m' = 0)) ∧
  (n' ≤ m' − 1 ∨ ¬(n' < m')) ∧ ¬BIT m n ∧ 1 ≤ m ∧ (SLICE m m n = 0) ∧
  (SLICE m m n + SLICE (m − 1) 0 n = SLICE m 0 n) ∧
  (dimindex (:α) = SUC m) ∧ m ≠ 0 ∧ ¬(SLICE m 0 n ≤ 2 ** m − 1)
CNF2: ∀m' n'.
  0 ≤ m ∧ 0 ≤ 2 ** m ∧ 0 ≤ 2 ** m − 1 ∧ 0 ≤ n ∧ 0 ≤ SLICE m 0 n ∧
  0 ≤ SUC m ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ m − 1 ∧ 0 ≤ SLICE (m − 1) 0 n ∧
  0 ≤ SLICE m m n ∧ 0 ≤ SLICE m m n + SLICE (m − 1) 0 n ∧
  (0 ≤ m' − 1 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  (0 ≤ 2 ** m' ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  (0 ≤ SLICE (m' − 1) 0 n' ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  (0 ≤ 0 + m' ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  (0 ≤ m' + n' ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  (0 ≤ SUC (m' + n') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  (0 ≤ SUC m' ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  (0 ≤ SUC m' + n' ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  ((SUC m' + n' = SUC (m' + n')) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  ((0 + m' = m') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  ((m' = 0) ∨ SLICE (m' − 1) 0 n' < 2 ** m' ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  (¬(n' < m') ∨ n' ≤ m' − 1 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  (¬BIT m n ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧ (1 ≤ m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  ((SLICE m m n = 0) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  ((SLICE m m n + SLICE (m − 1) 0 n = SLICE m 0 n) ∨ ¬(0 ≤ n') ∨
   ¬(0 ≤ m')) ∧ ((dimindex (:α) = SUC m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  (m ≠ 0 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m')) ∧
  (¬(SLICE m 0 n ≤ 2 ** m − 1) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ m'))
Status: Unsatisfiable

User theorems:  [] |- ∀w v. -(v − w) = w − v
 [] |- ∀w. word_abs (-w) = word_abs w

Goal: [] ?- ∀a b. word_abs (a − b) = word_abs (b − a)
CNF1: ∃a b.
  ∀w v.
    (word_abs (-w) = word_abs w) ∧ (-(v − w) = w − v) ∧
    word_abs (a − b) ≠ word_abs (b − a)
Status: Unsatisfiable

User theorems:  [] |- ∀w. -w + w = 0w
 [] |- ∀w. w + -w = 0w
 [] |- (∀w. w + 0w = w) ∧ ∀w. 0w + w = w
 [] |- ∀v w x. v + (w + x) = v + w + x
 [] |- ∀v w. v + w = w + v

Goal: [] ?- -a + -1w + b + 1w = b + -a
CNF1: ∀v w x.
  (v + w = w + v) ∧ (v + (w + x) = v + w + x) ∧ (v + 0w = v) ∧
  (0w + v = v) ∧ (v + -v = 0w) ∧ (-v + v = 0w) ∧
  -a + -1w + b + 1w ≠ b + -a
Status: Time Out

User theorems:  [] |- ∀w. -w + w = 0w
 [] |- ∀w. w + -w = 0w
 [] |- (∀w. w + 0w = w) ∧ ∀w. 0w + w = w
 [] |- ∀v w x. v + (w + x) = v + w + x
 [] |- ∀v w. v + w = w + v

Goal: [] ?- a + (-b + -1w) + 1w = a + -b
CNF1: ∀v w x.
  (v + w = w + v) ∧ (v + (w + x) = v + w + x) ∧ (v + 0w = v) ∧
  (0w + v = v) ∧ (v + -v = 0w) ∧ (-v + v = 0w) ∧
  a + (-b + -1w) + 1w ≠ a + -b
Status: Time Out

User theorems: 
Goal: [] ?- (word_msb x ⇔ ¬word_msb y) ∧ (word_msb x ⇎ word_msb (x + ¬y + 1w)) ⇔
(word_msb x ⇎ word_msb y) ∧ (word_msb (x + ¬y + 1w) ⇎ word_msb x)
CNF1: (¬word_msb (x + ¬y + 1w) ∨ ¬word_msb x) ∧
(¬word_msb y ∨ ¬word_msb x ∨ ¬word_msb (x + ¬y + 1w)) ∧
(word_msb y ∨ word_msb x ∨ word_msb (x + ¬y + 1w)) ∧
(word_msb (x + ¬y + 1w) ∨ word_msb x) ∧
(word_msb (x + ¬y + 1w) ∨ word_msb x ∨ word_msb y) ∧
(word_msb y ∨ word_msb x) ∧ (¬word_msb y ∨ ¬word_msb x) ∧
(¬word_msb (x + ¬y + 1w) ∨ ¬word_msb x ∨ ¬word_msb y) ∧
(word_msb (x + ¬y + 1w) ∨ ¬word_msb x ∨ word_msb y) ∧
(¬word_msb (x + ¬y + 1w) ∨ word_msb x ∨ ¬word_msb y)
Status: Unsatisfiable

User theorems:  [] |- ∀n a b. a < 2 ** n ∧ b < 2 ** n ⇒ a + b < 2 ** (n + 1)
 [] |- 0 < n ⇒ (n − 1 + 1 = n)
 [] |- 0 < dimindex (:α)

Goal: [n' < 2 ** (dimindex (:α) − 1),n < 2 ** (dimindex (:α) − 1),n' < dimword (:α),n < dimword (:α)] ?- n + n' < 2 ** dimindex (:α)
CNF1: ∀n'' a b.
  0 < dimindex (:α) ∧ ((n − 1 + 1 = n) ∨ ¬(0 < n)) ∧
  (a + b < 2 ** (n'' + 1) ∨ ¬(a < 2 ** n'') ∨ ¬(b < 2 ** n'')) ∧
  n < dimword (:α) ∧ n' < dimword (:α) ∧ n < 2 ** (dimindex (:α) − 1) ∧
  n' < 2 ** (dimindex (:α) − 1) ∧ ¬(n + n' < 2 ** dimindex (:α))
Numeral: (0 ≤ n − 1 + 1 ∧ 0 ≤ n − 1 ∧ 0 ≤ dimword (:α) ∧
 0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ dimindex (:α) − 1 ∧ 0 ≤ n + n' ∧
 0 ≤ n ∧ 0 ≤ n' ∧ 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α)) ∧
∀n'' a b.
  0 ≤ a ∧ 0 ≤ b ∧ 0 ≤ n'' ⇒
  (0 ≤ a + b ∧ 0 ≤ 2 ** (n'' + 1) ∧ 0 ≤ n'' + 1 ∧ 0 ≤ 2 ** n'') ∧
  0 < dimindex (:α) ∧ ((n − 1 + 1 = n) ∨ ¬(0 < n)) ∧
  (a + b < 2 ** (n'' + 1) ∨ ¬(a < 2 ** n'') ∨ ¬(b < 2 ** n'')) ∧
  n < dimword (:α) ∧ n' < dimword (:α) ∧ n < 2 ** (dimindex (:α) − 1) ∧
  n' < 2 ** (dimindex (:α) − 1) ∧ ¬(n + n' < 2 ** dimindex (:α))
CNF2: ∀n'' a b.
  0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ n' ∧ 0 ≤ n ∧
  0 ≤ n + n' ∧ 0 ≤ dimindex (:α) − 1 ∧ 0 ≤ 2 ** (dimindex (:α) − 1) ∧
  0 ≤ dimword (:α) ∧ 0 ≤ n − 1 ∧ 0 ≤ n − 1 + 1 ∧
  (0 ≤ 2 ** n'' ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n'')) ∧
  (0 ≤ n'' + 1 ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n'')) ∧
  (0 ≤ 2 ** (n'' + 1) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n'')) ∧
  (0 ≤ a + b ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n'')) ∧
  (0 < dimindex (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n'')) ∧
  (¬(0 < n) ∨ (n − 1 + 1 = n) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n'')) ∧
  (¬(b < 2 ** n'') ∨ ¬(a < 2 ** n'') ∨ a + b < 2 ** (n'' + 1) ∨
   ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n'')) ∧
  (n < dimword (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n'')) ∧
  (n' < dimword (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n'')) ∧
  (n < 2 ** (dimindex (:α) − 1) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n'')) ∧
  (n' < 2 ** (dimindex (:α) − 1) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n'')) ∧
  (¬(n + n' < 2 ** dimindex (:α)) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n''))
Status: Time Out

User theorems:  []
|- INT_MAX (:α) < INT_MIN (:α) ∧ INT_MIN (:α) ≤ UINT_MAX (:α) ∧
   UINT_MAX (:α) < dimword (:α)

Goal: [UINT_MAX (:β) MOD dimword (:α) ≤ n,dimword (:β) = dimword (:α),dimindex (:β) = dimindex (:α),T,UINT_MAX (:β) ≤ n ∧ n < dimword (:α) ⇒ (n = UINT_MAX (:β)),n < dimword (:α)] ?- UINT_MAX (:β) < dimword (:α)
CNF1: UINT_MAX (:α) < dimword (:α) ∧ INT_MIN (:α) ≤ UINT_MAX (:α) ∧
INT_MAX (:α) < INT_MIN (:α) ∧ n < dimword (:α) ∧
((n = UINT_MAX (:β)) ∨ ¬(UINT_MAX (:β) ≤ n) ∨ ¬(n < dimword (:α))) ∧
(dimindex (:β) = dimindex (:α)) ∧ (dimword (:β) = dimword (:α)) ∧
UINT_MAX (:β) MOD dimword (:α) ≤ n ∧ ¬(UINT_MAX (:β) < dimword (:α))
Numeral: (0 ≤ UINT_MAX (:α) ∧ 0 ≤ INT_MAX (:α) ∧ 0 ≤ INT_MIN (:α) ∧
 0 ≤ dimindex (:β) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ dimword (:β) ∧
 0 ≤ UINT_MAX (:β) MOD dimword (:α) ∧ 0 ≤ n ∧ 0 ≤ UINT_MAX (:β) ∧
 0 ≤ dimword (:α)) ∧ UINT_MAX (:α) < dimword (:α) ∧
INT_MIN (:α) ≤ UINT_MAX (:α) ∧ INT_MAX (:α) < INT_MIN (:α) ∧
n < dimword (:α) ∧
((n = UINT_MAX (:β)) ∨ ¬(UINT_MAX (:β) ≤ n) ∨ ¬(n < dimword (:α))) ∧
(dimindex (:β) = dimindex (:α)) ∧ (dimword (:β) = dimword (:α)) ∧
UINT_MAX (:β) MOD dimword (:α) ≤ n ∧ ¬(UINT_MAX (:β) < dimword (:α))
CNF2: 0 ≤ dimword (:α) ∧ 0 ≤ UINT_MAX (:β) ∧ 0 ≤ n ∧
0 ≤ UINT_MAX (:β) MOD dimword (:α) ∧ 0 ≤ dimword (:β) ∧
0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ INT_MIN (:α) ∧
0 ≤ INT_MAX (:α) ∧ 0 ≤ UINT_MAX (:α) ∧ UINT_MAX (:α) < dimword (:α) ∧
INT_MIN (:α) ≤ UINT_MAX (:α) ∧ INT_MAX (:α) < INT_MIN (:α) ∧
n < dimword (:α) ∧
((n = UINT_MAX (:β)) ∨ ¬(UINT_MAX (:β) ≤ n) ∨ ¬(n < dimword (:α))) ∧
(dimindex (:β) = dimindex (:α)) ∧ (dimword (:β) = dimword (:α)) ∧
UINT_MAX (:β) MOD dimword (:α) ≤ n ∧ ¬(UINT_MAX (:β) < dimword (:α))
Status: Unknown

User theorems: 
Goal: [] ?- ∀n. (UINT_MAXw = n) ⇔ (n = UINT_MAXw)
CNF1: ∃n.
  ((UINT_MAXw = n) ∨ (n = UINT_MAXw)) ∧ (UINT_MAXw ≠ n ∨ n ≠ UINT_MAXw)
Status: Unsatisfiable

User theorems:  [] |- ∀w n. word_reverse (w ≪ n) = word_reverse w ⋙ n
 [] |- ∀w. word_reverse (word_reverse w) = w

Goal: [] ?- ∀w n. word_reverse (w ⋙ n) = word_reverse w ≪ n
CNF1: ∃w n.
  ∀w' n'.
    (word_reverse (word_reverse w') = w') ∧
    (word_reverse (w' ≪ n') = word_reverse w' ⋙ n') ∧
    word_reverse (w ⋙ n) ≠ word_reverse w ≪ n
Numeral: ∃w n.
  0 ≤ n ∧
  ∀w' n'.
    0 ≤ n' ⇒
    (word_reverse (word_reverse w') = w') ∧
    (word_reverse (w' ≪ n') = word_reverse w' ⋙ n') ∧
    word_reverse (w ⋙ n) ≠ word_reverse w ≪ n
CNF2: ∃w n.
  ∀w' n'.
    0 ≤ n ∧ ((word_reverse (word_reverse w') = w') ∨ ¬(0 ≤ n')) ∧
    ((word_reverse (w' ≪ n') = word_reverse w' ⋙ n') ∨ ¬(0 ≤ n')) ∧
    (word_reverse (w ⋙ n) ≠ word_reverse w ≪ n ∨ ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems: 
Goal: [n < k,x = n2w n,{n2w n' | F} = ∅,FINITE {n2w n | n < k}] ?- ∃n'. (n2w n = n2w n') ∧ (n' < k ∨ (n' = k))
CNF1: ∀n'.
  FINITE {n2w n | n < k} ∧ ({n2w n' | F} = ∅) ∧ (x = n2w n) ∧ n < k ∧
  (n2w n ≠ n2w n' ∨ ¬(n' < k)) ∧ (n2w n ≠ n2w n' ∨ n' ≠ k)
Lambda: ∃f1.
  (∀n'. f1 n' = (n2w n',F)) ∧
  ∃f.
    (∀n. f n = (n2w n,n < k)) ∧
    ∀n'.
      FINITE (GSPEC f) ∧ (GSPEC f1 = ∅) ∧ (x = n2w n) ∧ n < k ∧
      (n2w n ≠ n2w n' ∨ ¬(n' < k)) ∧ (n2w n ≠ n2w n' ∨ n' ≠ k)
Numeral: (0 ≤ n ∧ 0 ≤ k) ∧
∃f1.
  (∀n'. 0 ≤ n' ⇒ (f1 n' = (n2w n',F))) ∧
  ∃f.
    (∀n. 0 ≤ n ⇒ (f n = (n2w n,n < k))) ∧
    ∀n'.
      0 ≤ n' ⇒
      FINITE (GSPEC f) ∧ (GSPEC f1 = ∅) ∧ (x = n2w n) ∧ n < k ∧
      (n2w n ≠ n2w n' ∨ ¬(n' < k)) ∧ (n2w n ≠ n2w n' ∨ n' ≠ k)
CNF2: ∃f1 f.
  ∀n'.
    0 ≤ k ∧ 0 ≤ n ∧ ((f1 n' = (n2w n',F)) ∨ ¬(0 ≤ n')) ∧
    ((f n' = (n2w n',n' < k)) ∨ ¬(0 ≤ n')) ∧
    (FINITE (GSPEC f) ∨ ¬(0 ≤ n')) ∧ ((GSPEC f1 = ∅) ∨ ¬(0 ≤ n')) ∧
    ((x = n2w n) ∨ ¬(0 ≤ n')) ∧ (n < k ∨ ¬(0 ≤ n')) ∧
    (¬(n' < k) ∨ n2w n ≠ n2w n' ∨ ¬(0 ≤ n')) ∧
    (n' ≠ k ∨ n2w n ≠ n2w n' ∨ ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems: 
Goal: [x = n2w k,{n2w n | F} = ∅,FINITE {n2w n | n < k}] ?- ∃n. (n2w k = n2w n) ∧ (n < k ∨ (n = k))
CNF1: ∀n.
  FINITE {n2w n | n < k} ∧ ({n2w n | F} = ∅) ∧ (x = n2w k) ∧
  (n2w k ≠ n2w n ∨ ¬(n < k)) ∧ (n2w k ≠ n2w n ∨ n ≠ k)
Lambda: ∃f1.
  (∀n. f1 n = (n2w n,F)) ∧
  ∃f.
    (∀n. f n = (n2w n,n < k)) ∧
    ∀n.
      FINITE (GSPEC f) ∧ (GSPEC f1 = ∅) ∧ (x = n2w k) ∧
      (n2w k ≠ n2w n ∨ ¬(n < k)) ∧ (n2w k ≠ n2w n ∨ n ≠ k)
Numeral: 0 ≤ k ∧
∃f1.
  (∀n. 0 ≤ n ⇒ (f1 n = (n2w n,F))) ∧
  ∃f.
    (∀n. 0 ≤ n ⇒ (f n = (n2w n,n < k))) ∧
    ∀n.
      0 ≤ n ⇒
      FINITE (GSPEC f) ∧ (GSPEC f1 = ∅) ∧ (x = n2w k) ∧
      (n2w k ≠ n2w n ∨ ¬(n < k)) ∧ (n2w k ≠ n2w n ∨ n ≠ k)
CNF2: ∃f1 f.
  ∀n.
    0 ≤ k ∧ ((f1 n = (n2w n,F)) ∨ ¬(0 ≤ n)) ∧
    ((f n = (n2w n,n < k)) ∨ ¬(0 ≤ n)) ∧ (FINITE (GSPEC f) ∨ ¬(0 ≤ n)) ∧
    ((GSPEC f1 = ∅) ∨ ¬(0 ≤ n)) ∧ ((x = n2w k) ∨ ¬(0 ≤ n)) ∧
    (¬(n < k) ∨ n2w k ≠ n2w n ∨ ¬(0 ≤ n)) ∧
    (n ≠ k ∨ n2w k ≠ n2w n ∨ ¬(0 ≤ n))
Status: Unsatisfiable

User theorems: 
Goal: [n < k,x = n2w n,{n2w n' | F} = ∅,FINITE {n2w n | n < k}] ?- (n2w n = n2w k) ∨ ∃n'. (n2w n = n2w n') ∧ n' < k
CNF1: ∀n'.
  FINITE {n2w n | n < k} ∧ ({n2w n' | F} = ∅) ∧ (x = n2w n) ∧ n < k ∧
  n2w n ≠ n2w k ∧ (n2w n ≠ n2w n' ∨ ¬(n' < k))
Lambda: ∃f1.
  (∀n'. f1 n' = (n2w n',F)) ∧
  ∃f.
    (∀n. f n = (n2w n,n < k)) ∧
    ∀n'.
      FINITE (GSPEC f) ∧ (GSPEC f1 = ∅) ∧ (x = n2w n) ∧ n < k ∧
      n2w n ≠ n2w k ∧ (n2w n ≠ n2w n' ∨ ¬(n' < k))
Numeral: (0 ≤ n ∧ 0 ≤ k) ∧
∃f1.
  (∀n'. 0 ≤ n' ⇒ (f1 n' = (n2w n',F))) ∧
  ∃f.
    (∀n. 0 ≤ n ⇒ (f n = (n2w n,n < k))) ∧
    ∀n'.
      0 ≤ n' ⇒
      FINITE (GSPEC f) ∧ (GSPEC f1 = ∅) ∧ (x = n2w n) ∧ n < k ∧
      n2w n ≠ n2w k ∧ (n2w n ≠ n2w n' ∨ ¬(n' < k))
CNF2: ∃f1 f.
  ∀n'.
    0 ≤ k ∧ 0 ≤ n ∧ ((f1 n' = (n2w n',F)) ∨ ¬(0 ≤ n')) ∧
    ((f n' = (n2w n',n' < k)) ∨ ¬(0 ≤ n')) ∧
    (FINITE (GSPEC f) ∨ ¬(0 ≤ n')) ∧ ((GSPEC f1 = ∅) ∨ ¬(0 ≤ n')) ∧
    ((x = n2w n) ∨ ¬(0 ≤ n')) ∧ (n < k ∨ ¬(0 ≤ n')) ∧
    (n2w n ≠ n2w k ∨ ¬(0 ≤ n')) ∧
    (¬(n' < k) ∨ n2w n ≠ n2w n' ∨ ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems:  [] |- ∀m. 0 < 2 ** m

Goal: [] ?- 0 < 2 ** n
CNF1: ∀m. 0 < 2 ** m ∧ ¬(0 < 2 ** n)
Numeral: (0 ≤ 2 ** n ∧ 0 ≤ n) ∧
∀m. 0 ≤ m ⇒ 0 ≤ 2 ** m ∧ 0 < 2 ** m ∧ ¬(0 < 2 ** n)
CNF2: ∀m.
  0 ≤ n ∧ 0 ≤ 2 ** n ∧ (0 ≤ 2 ** m ∨ ¬(0 ≤ m)) ∧
  (0 < 2 ** m ∨ ¬(0 ≤ m)) ∧ (¬(0 < 2 ** n) ∨ ¬(0 ≤ m))
Status: Unsatisfiable

User theorems:  [] |- ∀w. n2w (w2n w) = w

Goal: [0 < m,y ≠ 0w] ?- w2n y ≠ 0
CNF1: ∀w. (n2w (w2n w) = w) ∧ y ≠ 0w ∧ 0 < m ∧ (w2n y = 0)
Numeral: (0 ≤ m ∧ 0 ≤ w2n y) ∧
∀w. 0 ≤ w2n w ∧ (n2w (w2n w) = w) ∧ y ≠ 0w ∧ 0 < m ∧ (w2n y = 0)
CNF2: ∀w.
  0 ≤ w2n y ∧ 0 ≤ m ∧ 0 ≤ w2n w ∧ (n2w (w2n w) = w) ∧ y ≠ 0w ∧ 0 < m ∧
  (w2n y = 0)
Status: Unsatisfiable

User theorems:  [] |- ∀n d. 0 < n ∧ 1 < d ⇒ n DIV d < n
 [] |- ∀m. 0 < m ⇒ 1 < 2 ** m
 [] |- 0 < x ⇔ x ≠ 0

Goal: [w2n y ≠ 0,0 < m,y ≠ 0w] ?- w2n y DIV 2 ** m < w2n y
CNF1: ∀m' d.
  (¬(0 < x) ∨ x ≠ 0) ∧ (0 < x ∨ (x = 0)) ∧ (1 < 2 ** m' ∨ ¬(0 < m')) ∧
  (m' DIV d < m' ∨ ¬(0 < m') ∨ ¬(1 < d)) ∧ y ≠ 0w ∧ 0 < m ∧ w2n y ≠ 0 ∧
  ¬(w2n y DIV 2 ** m < w2n y)
Numeral: (0 ≤ x ∧ 0 ≤ w2n y DIV 2 ** m ∧ 0 ≤ 2 ** m ∧ 0 ≤ m ∧ 0 ≤ w2n y) ∧
∀m' d.
  0 ≤ m' ∧ 0 ≤ d ⇒
  (0 ≤ 2 ** m' ∧ 0 ≤ m' DIV d) ∧ (¬(0 < x) ∨ x ≠ 0) ∧
  (0 < x ∨ (x = 0)) ∧ (1 < 2 ** m' ∨ ¬(0 < m')) ∧
  (m' DIV d < m' ∨ ¬(0 < m') ∨ ¬(1 < d)) ∧ y ≠ 0w ∧ 0 < m ∧ w2n y ≠ 0 ∧
  ¬(w2n y DIV 2 ** m < w2n y)
CNF2: ∀m' d.
  0 ≤ w2n y ∧ 0 ≤ m ∧ 0 ≤ 2 ** m ∧ 0 ≤ w2n y DIV 2 ** m ∧ 0 ≤ x ∧
  (0 ≤ m' DIV d ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ d)) ∧
  (0 ≤ 2 ** m' ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ d)) ∧
  (x ≠ 0 ∨ ¬(0 < x) ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ d)) ∧
  ((x = 0) ∨ 0 < x ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ d)) ∧
  (¬(0 < m') ∨ 1 < 2 ** m' ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ d)) ∧
  (¬(1 < d) ∨ ¬(0 < m') ∨ m' DIV d < m' ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ d)) ∧
  (y ≠ 0w ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ d)) ∧ (0 < m ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ d)) ∧
  (w2n y ≠ 0 ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ d)) ∧
  (¬(w2n y DIV 2 ** m < w2n y) ∨ ¬(0 ≤ m') ∨ ¬(0 ≤ d))
Status: Unsatisfiable

User theorems:  [] |- ∀m n. m ≤ n ⇔ ∃p. n = m + p
 [] |- ∀m n. m + n = n + m

Goal: [n' ≤ n,n' < dimword (:α),n < dimword (:α)] ?- ∃k. n = k + n'
CNF1: ∃p.
  ∀k n'' p'.
    (k + n'' = n'' + k) ∧ (k ≤ n'' ∨ n'' ≠ k + p') ∧
    (¬(k ≤ n'') ∨ (n'' = k + p k n'')) ∧ n < dimword (:α) ∧
    n' < dimword (:α) ∧ n' ≤ n ∧ n ≠ k + n'
Numeral: (0 ≤ dimword (:α) ∧ 0 ≤ n ∧ 0 ≤ n') ∧
∃p.
  ∀k n'' p'.
    0 ≤ p' ∧ 0 ≤ n'' ∧ 0 ≤ k ⇒
    (0 ≤ k + n'' ∧ 0 ≤ n'' + k ∧ 0 ≤ k + p' ∧ 0 ≤ k + p k n'' ∧
     0 ≤ p k n'' ∧ 0 ≤ k + n') ∧ (k + n'' = n'' + k) ∧
    (k ≤ n'' ∨ n'' ≠ k + p') ∧ (¬(k ≤ n'') ∨ (n'' = k + p k n'')) ∧
    n < dimword (:α) ∧ n' < dimword (:α) ∧ n' ≤ n ∧ n ≠ k + n'
CNF2: ∃p.
  ∀k n'' p'.
    0 ≤ n' ∧ 0 ≤ n ∧ 0 ≤ dimword (:α) ∧
    (0 ≤ k + n' ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ p k n'' ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ k + p k n'' ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ k + p' ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ n'' + k ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ k + n'' ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ k)) ∧
    ((k + n'' = n'' + k) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ k)) ∧
    (n'' ≠ k + p' ∨ k ≤ n'' ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ k)) ∧
    ((n'' = k + p k n'') ∨ ¬(k ≤ n'') ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n'') ∨
     ¬(0 ≤ k)) ∧
    (n < dimword (:α) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ k)) ∧
    (n' < dimword (:α) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ k)) ∧
    (n' ≤ n ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ k)) ∧
    (n ≠ k + n' ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n'') ∨ ¬(0 ≤ k))
Status: Unsatisfiable

User theorems:  [] |- ∀w v. (v − w = 0w) ⇔ (v = w)
 [] |- ∀a b. a < b ⇒ a ≠ b

Goal: [0w = x − y,0w ≤ 0w ⇒ 0w ≤ y − 0w,0w ≤ x − y,0w ≤ y,y ≤ x,y < x,0w < y] ?- 0w < x − y
CNF1: ∀a b.
  (a ≠ b ∨ ¬(a < b)) ∧ ((b − a = 0w) ∨ b ≠ a) ∧ (b − a ≠ 0w ∨ (b = a)) ∧
  0w < y ∧ y < x ∧ y ≤ x ∧ 0w ≤ y ∧ 0w ≤ x − y ∧
  (0w ≤ y − 0w ∨ ¬(0w ≤ 0w)) ∧ (0w = x − y) ∧ ¬(0w < x − y)
Status: Unsatisfiable

User theorems:  [] |- ∀w. w − 0w = w

Goal: [y < x,0w = y,y ≤ x,0w ≤ y] ?- x − y < x ∨ (x − y = x)
CNF1: ∀w.
  (w − 0w = w) ∧ 0w ≤ y ∧ y ≤ x ∧ (0w = y) ∧ y < x ∧ ¬(x − y < x) ∧
  x − y ≠ x
Status: Unsatisfiable

User theorems:  [] |- ∀w. w − 0w = w

Goal: [y = x,0w < y,y ≤ x,0w ≤ y] ?- 0w < x ∨ (0w = x)
CNF1: ∀w.
  (w − 0w = w) ∧ 0w ≤ y ∧ y ≤ x ∧ 0w < y ∧ (y = x) ∧ ¬(0w < x) ∧ 0w ≠ x
Status: Unsatisfiable

User theorems:  []
|- ∀a b n.
     ¬BIT n a ∨ ¬BIT n b ⇒
     (SBIT (BIT n a ∨ BIT n b) n = SBIT (BIT n a) n + SBIT (BIT n b) n)
 [] |- n < SUC n

Goal: [∀i. i < SUC n ⇒ ¬BIT i a ∨ ¬BIT i b,∀a b.
  (∀i. i < n ⇒ ¬BIT i a ∨ ¬BIT i b) ⇒
  (SUM n (λi. SBIT (BIT i a) i) + SUM n (λi. SBIT (BIT i b) i) =
   BITWISE n $\/ a b)] ?- SBIT (BIT n a) n + SBIT (BIT n b) n + BITWISE n $\/ a b =
SBIT (BIT n a ∨ BIT n b) n + BITWISE n $\/ a b
CNF1: ∃i.
  ∀a' b' n'.
    n < SUC n ∧
    ((SBIT (BIT n' a' ∨ BIT n' b') n' =
      SBIT (BIT n' a') n' + SBIT (BIT n' b') n') ∨ BIT n' a') ∧
    ((SBIT (BIT n' a' ∨ BIT n' b') n' =
      SBIT (BIT n' a') n' + SBIT (BIT n' b') n') ∨ BIT n' b') ∧
    ((SUM n (λi. SBIT (BIT i a') i) + SUM n (λi. SBIT (BIT i b') i) =
      BITWISE n $\/ a' b') ∨ BIT (i a' b') b') ∧
    ((SUM n (λi. SBIT (BIT i a') i) + SUM n (λi. SBIT (BIT i b') i) =
      BITWISE n $\/ a' b') ∨ BIT (i a' b') a') ∧
    ((SUM n (λi. SBIT (BIT i a') i) + SUM n (λi. SBIT (BIT i b') i) =
      BITWISE n $\/ a' b') ∨ i a' b' < n) ∧
    (¬BIT a' b ∨ ¬BIT a' a ∨ ¬(a' < SUC n)) ∧
    SBIT (BIT n a) n + SBIT (BIT n b) n + BITWISE n $\/ a b ≠
    SBIT (BIT n a ∨ BIT n b) n + BITWISE n $\/ a b
Lambda: ∃i.
  ∀a' b' n'.
    ∃f1.
      (∀i. f1 i = SBIT (BIT i b') i) ∧
      ∃f.
        (∀i. f i = SBIT (BIT i a') i) ∧ n < SUC n ∧
        ((SBIT (BIT n' a' ∨ BIT n' b') n' =
          SBIT (BIT n' a') n' + SBIT (BIT n' b') n') ∨ BIT n' a') ∧
        ((SBIT (BIT n' a' ∨ BIT n' b') n' =
          SBIT (BIT n' a') n' + SBIT (BIT n' b') n') ∨ BIT n' b') ∧
        ((SUM n f + SUM n f1 = BITWISE n $\/ a' b') ∨
         BIT (i a' b') b') ∧
        ((SUM n f + SUM n f1 = BITWISE n $\/ a' b') ∨
         BIT (i a' b') a') ∧
        ((SUM n f + SUM n f1 = BITWISE n $\/ a' b') ∨ i a' b' < n) ∧
        (¬BIT a' b ∨ ¬BIT a' a ∨ ¬(a' < SUC n)) ∧
        SBIT (BIT n a) n + SBIT (BIT n b) n + BITWISE n $\/ a b ≠
        SBIT (BIT n a ∨ BIT n b) n + BITWISE n $\/ a bUser theorems:  [] |- ∀m n. ¬(m < n) ⇔ n ≤ m
 [] |- ∀n p. 2 ** p ≤ n ∧ n < 2 ** SUC p ⇒ (LOG2 n = p)
 [] |- ∀n. n ≠ 0 ⇒ BIT (LOG2 n) n

Goal: [¬BIT (SUC n) (BITS n 0 x + BITS n 0 y),BITS n 0 x + BITS n 0 y ≠ 0,BIT (SUC n) y,¬BIT (SUC n) x,BITS n 0 x + BITS n 0 y < 2 ** SUC (SUC n),BITS n 0 y < 2 ** SUC n,BITS n 0 x < 2 ** SUC n] ?- BITS n 0 x + BITS n 0 y < 2 ** SUC n
CNF1: ∀n' p.
  (BIT (LOG2 n') n' ∨ (n' = 0)) ∧
  ((LOG2 n' = p) ∨ ¬(2 ** p ≤ n') ∨ ¬(n' < 2 ** SUC p)) ∧
  (¬(n' < p) ∨ ¬(p ≤ n')) ∧ (n' < p ∨ p ≤ n') ∧
  BITS n 0 x < 2 ** SUC n ∧ BITS n 0 y < 2 ** SUC n ∧
  BITS n 0 x + BITS n 0 y < 2 ** SUC (SUC n) ∧ ¬BIT (SUC n) x ∧
  BIT (SUC n) y ∧ BITS n 0 x + BITS n 0 y ≠ 0 ∧
  ¬BIT (SUC n) (BITS n 0 x + BITS n 0 y) ∧
  ¬(BITS n 0 x + BITS n 0 y < 2 ** SUC n)
Numeral: (0 ≤ 2 ** SUC (SUC n) ∧ 0 ≤ SUC (SUC n) ∧ 0 ≤ BITS n 0 x + BITS n 0 y ∧
 0 ≤ BITS n 0 x ∧ 0 ≤ x ∧ 0 ≤ BITS n 0 y ∧ 0 ≤ y ∧ 0 ≤ 2 ** SUC n ∧
 0 ≤ SUC n ∧ 0 ≤ n) ∧
∀n' p.
  0 ≤ p ∧ 0 ≤ n' ⇒
  (0 ≤ LOG2 n' ∧ 0 ≤ 2 ** p ∧ 0 ≤ 2 ** SUC p ∧ 0 ≤ SUC p) ∧
  (BIT (LOG2 n') n' ∨ (n' = 0)) ∧
  ((LOG2 n' = p) ∨ ¬(2 ** p ≤ n') ∨ ¬(n' < 2 ** SUC p)) ∧
  (¬(n' < p) ∨ ¬(p ≤ n')) ∧ (n' < p ∨ p ≤ n') ∧
  BITS n 0 x < 2 ** SUC n ∧ BITS n 0 y < 2 ** SUC n ∧
  BITS n 0 x + BITS n 0 y < 2 ** SUC (SUC n) ∧ ¬BIT (SUC n) x ∧
  BIT (SUC n) y ∧ BITS n 0 x + BITS n 0 y ≠ 0 ∧
  ¬BIT (SUC n) (BITS n 0 x + BITS n 0 y) ∧
  ¬(BITS n 0 x + BITS n 0 y < 2 ** SUC n)
CNF2: ∀n' p.
  0 ≤ n ∧ 0 ≤ SUC n ∧ 0 ≤ 2 ** SUC n ∧ 0 ≤ y ∧ 0 ≤ BITS n 0 y ∧ 0 ≤ x ∧
  0 ≤ BITS n 0 x ∧ 0 ≤ BITS n 0 x + BITS n 0 y ∧ 0 ≤ SUC (SUC n) ∧
  0 ≤ 2 ** SUC (SUC n) ∧ (0 ≤ SUC p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ 2 ** SUC p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ 2 ** p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ LOG2 n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  ((n' = 0) ∨ BIT (LOG2 n') n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (¬(n' < 2 ** SUC p) ∨ ¬(2 ** p ≤ n') ∨ (LOG2 n' = p) ∨ ¬(0 ≤ p) ∨
   ¬(0 ≤ n')) ∧ (¬(p ≤ n') ∨ ¬(n' < p) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (p ≤ n' ∨ n' < p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 x < 2 ** SUC n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 y < 2 ** SUC n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 x + BITS n 0 y < 2 ** SUC (SUC n) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (¬BIT (SUC n) x ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BIT (SUC n) y ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 x + BITS n 0 y ≠ 0 ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (¬BIT (SUC n) (BITS n 0 x + BITS n 0 y) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (¬(BITS n 0 x + BITS n 0 y < 2 ** SUC n) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems:  [] |- ∀m n. ¬(m < n) ⇔ n ≤ m
 [] |- ∀n p. 2 ** p ≤ n ∧ n < 2 ** SUC p ⇒ (LOG2 n = p)
 [] |- ∀n. n ≠ 0 ⇒ BIT (LOG2 n) n

Goal: [¬BIT (SUC n) (BITS n 0 x + BITS n 0 y),BITS n 0 x + BITS n 0 y ≠ 0,¬BIT (SUC n) y,BIT (SUC n) x,BITS n 0 x + BITS n 0 y < 2 ** SUC (SUC n),BITS n 0 y < 2 ** SUC n,BITS n 0 x < 2 ** SUC n] ?- BITS n 0 x + BITS n 0 y < 2 ** SUC n
CNF1: ∀n' p.
  (BIT (LOG2 n') n' ∨ (n' = 0)) ∧
  ((LOG2 n' = p) ∨ ¬(2 ** p ≤ n') ∨ ¬(n' < 2 ** SUC p)) ∧
  (¬(n' < p) ∨ ¬(p ≤ n')) ∧ (n' < p ∨ p ≤ n') ∧
  BITS n 0 x < 2 ** SUC n ∧ BITS n 0 y < 2 ** SUC n ∧
  BITS n 0 x + BITS n 0 y < 2 ** SUC (SUC n) ∧ BIT (SUC n) x ∧
  ¬BIT (SUC n) y ∧ BITS n 0 x + BITS n 0 y ≠ 0 ∧
  ¬BIT (SUC n) (BITS n 0 x + BITS n 0 y) ∧
  ¬(BITS n 0 x + BITS n 0 y < 2 ** SUC n)
Numeral: (0 ≤ 2 ** SUC (SUC n) ∧ 0 ≤ SUC (SUC n) ∧ 0 ≤ BITS n 0 x + BITS n 0 y ∧
 0 ≤ BITS n 0 x ∧ 0 ≤ x ∧ 0 ≤ BITS n 0 y ∧ 0 ≤ y ∧ 0 ≤ 2 ** SUC n ∧
 0 ≤ SUC n ∧ 0 ≤ n) ∧
∀n' p.
  0 ≤ p ∧ 0 ≤ n' ⇒
  (0 ≤ LOG2 n' ∧ 0 ≤ 2 ** p ∧ 0 ≤ 2 ** SUC p ∧ 0 ≤ SUC p) ∧
  (BIT (LOG2 n') n' ∨ (n' = 0)) ∧
  ((LOG2 n' = p) ∨ ¬(2 ** p ≤ n') ∨ ¬(n' < 2 ** SUC p)) ∧
  (¬(n' < p) ∨ ¬(p ≤ n')) ∧ (n' < p ∨ p ≤ n') ∧
  BITS n 0 x < 2 ** SUC n ∧ BITS n 0 y < 2 ** SUC n ∧
  BITS n 0 x + BITS n 0 y < 2 ** SUC (SUC n) ∧ BIT (SUC n) x ∧
  ¬BIT (SUC n) y ∧ BITS n 0 x + BITS n 0 y ≠ 0 ∧
  ¬BIT (SUC n) (BITS n 0 x + BITS n 0 y) ∧
  ¬(BITS n 0 x + BITS n 0 y < 2 ** SUC n)
CNF2: ∀n' p.
  0 ≤ n ∧ 0 ≤ SUC n ∧ 0 ≤ 2 ** SUC n ∧ 0 ≤ y ∧ 0 ≤ BITS n 0 y ∧ 0 ≤ x ∧
  0 ≤ BITS n 0 x ∧ 0 ≤ BITS n 0 x + BITS n 0 y ∧ 0 ≤ SUC (SUC n) ∧
  0 ≤ 2 ** SUC (SUC n) ∧ (0 ≤ SUC p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ 2 ** SUC p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ 2 ** p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ LOG2 n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  ((n' = 0) ∨ BIT (LOG2 n') n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (¬(n' < 2 ** SUC p) ∨ ¬(2 ** p ≤ n') ∨ (LOG2 n' = p) ∨ ¬(0 ≤ p) ∨
   ¬(0 ≤ n')) ∧ (¬(p ≤ n') ∨ ¬(n' < p) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (p ≤ n' ∨ n' < p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 x < 2 ** SUC n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 y < 2 ** SUC n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 x + BITS n 0 y < 2 ** SUC (SUC n) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BIT (SUC n) x ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (¬BIT (SUC n) y ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 x + BITS n 0 y ≠ 0 ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (¬BIT (SUC n) (BITS n 0 x + BITS n 0 y) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (¬(BITS n 0 x + BITS n 0 y < 2 ** SUC n) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems:  [] |- ∀m n. ¬(m < n) ⇔ n ≤ m
 [] |- ∀n p. 2 ** p ≤ n ∧ n < 2 ** SUC p ⇒ (LOG2 n = p)
 [] |- ∀n. n ≠ 0 ⇒ BIT (LOG2 n) n

Goal: [BITS n 0 x + BITS n 0 y + 1 ≠ 0,¬BIT (SUC n) (BITS n 0 x + BITS n 0 y + 1),BITS n 0 x + BITS n 0 y ≠ 0,BIT (SUC n) y,¬BIT (SUC n) x,BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC (SUC n),BITS n 0 y < 2 ** SUC n,BITS n 0 x < 2 ** SUC n] ?- BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC n
CNF1: ∀n' p.
  (BIT (LOG2 n') n' ∨ (n' = 0)) ∧
  ((LOG2 n' = p) ∨ ¬(2 ** p ≤ n') ∨ ¬(n' < 2 ** SUC p)) ∧
  (¬(n' < p) ∨ ¬(p ≤ n')) ∧ (n' < p ∨ p ≤ n') ∧
  BITS n 0 x < 2 ** SUC n ∧ BITS n 0 y < 2 ** SUC n ∧
  BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC (SUC n) ∧ ¬BIT (SUC n) x ∧
  BIT (SUC n) y ∧ BITS n 0 x + BITS n 0 y ≠ 0 ∧
  ¬BIT (SUC n) (BITS n 0 x + BITS n 0 y + 1) ∧
  BITS n 0 x + BITS n 0 y + 1 ≠ 0 ∧
  ¬(BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC n)
Numeral: (0 ≤ 2 ** SUC (SUC n) ∧ 0 ≤ SUC (SUC n) ∧
 0 ≤ BITS n 0 x + BITS n 0 y + 1 ∧ 0 ≤ BITS n 0 x + BITS n 0 y ∧
 0 ≤ BITS n 0 x ∧ 0 ≤ x ∧ 0 ≤ BITS n 0 y ∧ 0 ≤ y ∧ 0 ≤ 2 ** SUC n ∧
 0 ≤ SUC n ∧ 0 ≤ n) ∧
∀n' p.
  0 ≤ p ∧ 0 ≤ n' ⇒
  (0 ≤ LOG2 n' ∧ 0 ≤ 2 ** p ∧ 0 ≤ 2 ** SUC p ∧ 0 ≤ SUC p) ∧
  (BIT (LOG2 n') n' ∨ (n' = 0)) ∧
  ((LOG2 n' = p) ∨ ¬(2 ** p ≤ n') ∨ ¬(n' < 2 ** SUC p)) ∧
  (¬(n' < p) ∨ ¬(p ≤ n')) ∧ (n' < p ∨ p ≤ n') ∧
  BITS n 0 x < 2 ** SUC n ∧ BITS n 0 y < 2 ** SUC n ∧
  BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC (SUC n) ∧ ¬BIT (SUC n) x ∧
  BIT (SUC n) y ∧ BITS n 0 x + BITS n 0 y ≠ 0 ∧
  ¬BIT (SUC n) (BITS n 0 x + BITS n 0 y + 1) ∧
  BITS n 0 x + BITS n 0 y + 1 ≠ 0 ∧
  ¬(BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC n)
CNF2: ∀n' p.
  0 ≤ n ∧ 0 ≤ SUC n ∧ 0 ≤ 2 ** SUC n ∧ 0 ≤ y ∧ 0 ≤ BITS n 0 y ∧ 0 ≤ x ∧
  0 ≤ BITS n 0 x ∧ 0 ≤ BITS n 0 x + BITS n 0 y ∧
  0 ≤ BITS n 0 x + BITS n 0 y + 1 ∧ 0 ≤ SUC (SUC n) ∧
  0 ≤ 2 ** SUC (SUC n) ∧ (0 ≤ SUC p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ 2 ** SUC p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ 2 ** p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ LOG2 n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  ((n' = 0) ∨ BIT (LOG2 n') n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (¬(n' < 2 ** SUC p) ∨ ¬(2 ** p ≤ n') ∨ (LOG2 n' = p) ∨ ¬(0 ≤ p) ∨
   ¬(0 ≤ n')) ∧ (¬(p ≤ n') ∨ ¬(n' < p) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (p ≤ n' ∨ n' < p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 x < 2 ** SUC n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 y < 2 ** SUC n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC (SUC n) ∨ ¬(0 ≤ p) ∨
   ¬(0 ≤ n')) ∧ (¬BIT (SUC n) x ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BIT (SUC n) y ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 x + BITS n 0 y ≠ 0 ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (¬BIT (SUC n) (BITS n 0 x + BITS n 0 y + 1) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 x + BITS n 0 y + 1 ≠ 0 ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (¬(BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC n) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n'))
Status: Time Out

User theorems:  [] |- ∀m n. ¬(m < n) ⇔ n ≤ m
 [] |- ∀n p. 2 ** p ≤ n ∧ n < 2 ** SUC p ⇒ (LOG2 n = p)
 [] |- ∀n. n ≠ 0 ⇒ BIT (LOG2 n) n

Goal: [BITS n 0 x + BITS n 0 y + 1 ≠ 0,¬BIT (SUC n) (BITS n 0 x + BITS n 0 y + 1),BITS n 0 x + BITS n 0 y ≠ 0,¬BIT (SUC n) y,BIT (SUC n) x,BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC (SUC n),BITS n 0 y < 2 ** SUC n,BITS n 0 x < 2 ** SUC n] ?- BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC n
CNF1: ∀n' p.
  (BIT (LOG2 n') n' ∨ (n' = 0)) ∧
  ((LOG2 n' = p) ∨ ¬(2 ** p ≤ n') ∨ ¬(n' < 2 ** SUC p)) ∧
  (¬(n' < p) ∨ ¬(p ≤ n')) ∧ (n' < p ∨ p ≤ n') ∧
  BITS n 0 x < 2 ** SUC n ∧ BITS n 0 y < 2 ** SUC n ∧
  BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC (SUC n) ∧ BIT (SUC n) x ∧
  ¬BIT (SUC n) y ∧ BITS n 0 x + BITS n 0 y ≠ 0 ∧
  ¬BIT (SUC n) (BITS n 0 x + BITS n 0 y + 1) ∧
  BITS n 0 x + BITS n 0 y + 1 ≠ 0 ∧
  ¬(BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC n)
Numeral: (0 ≤ 2 ** SUC (SUC n) ∧ 0 ≤ SUC (SUC n) ∧
 0 ≤ BITS n 0 x + BITS n 0 y + 1 ∧ 0 ≤ BITS n 0 x + BITS n 0 y ∧
 0 ≤ BITS n 0 x ∧ 0 ≤ x ∧ 0 ≤ BITS n 0 y ∧ 0 ≤ y ∧ 0 ≤ 2 ** SUC n ∧
 0 ≤ SUC n ∧ 0 ≤ n) ∧
∀n' p.
  0 ≤ p ∧ 0 ≤ n' ⇒
  (0 ≤ LOG2 n' ∧ 0 ≤ 2 ** p ∧ 0 ≤ 2 ** SUC p ∧ 0 ≤ SUC p) ∧
  (BIT (LOG2 n') n' ∨ (n' = 0)) ∧
  ((LOG2 n' = p) ∨ ¬(2 ** p ≤ n') ∨ ¬(n' < 2 ** SUC p)) ∧
  (¬(n' < p) ∨ ¬(p ≤ n')) ∧ (n' < p ∨ p ≤ n') ∧
  BITS n 0 x < 2 ** SUC n ∧ BITS n 0 y < 2 ** SUC n ∧
  BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC (SUC n) ∧ BIT (SUC n) x ∧
  ¬BIT (SUC n) y ∧ BITS n 0 x + BITS n 0 y ≠ 0 ∧
  ¬BIT (SUC n) (BITS n 0 x + BITS n 0 y + 1) ∧
  BITS n 0 x + BITS n 0 y + 1 ≠ 0 ∧
  ¬(BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC n)
CNF2: ∀n' p.
  0 ≤ n ∧ 0 ≤ SUC n ∧ 0 ≤ 2 ** SUC n ∧ 0 ≤ y ∧ 0 ≤ BITS n 0 y ∧ 0 ≤ x ∧
  0 ≤ BITS n 0 x ∧ 0 ≤ BITS n 0 x + BITS n 0 y ∧
  0 ≤ BITS n 0 x + BITS n 0 y + 1 ∧ 0 ≤ SUC (SUC n) ∧
  0 ≤ 2 ** SUC (SUC n) ∧ (0 ≤ SUC p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ 2 ** SUC p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ 2 ** p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ LOG2 n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  ((n' = 0) ∨ BIT (LOG2 n') n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (¬(n' < 2 ** SUC p) ∨ ¬(2 ** p ≤ n') ∨ (LOG2 n' = p) ∨ ¬(0 ≤ p) ∨
   ¬(0 ≤ n')) ∧ (¬(p ≤ n') ∨ ¬(n' < p) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (p ≤ n' ∨ n' < p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 x < 2 ** SUC n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 y < 2 ** SUC n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC (SUC n) ∨ ¬(0 ≤ p) ∨
   ¬(0 ≤ n')) ∧ (BIT (SUC n) x ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (¬BIT (SUC n) y ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 x + BITS n 0 y ≠ 0 ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (¬BIT (SUC n) (BITS n 0 x + BITS n 0 y + 1) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (BITS n 0 x + BITS n 0 y + 1 ≠ 0 ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n')) ∧
  (¬(BITS n 0 x + BITS n 0 y + 1 < 2 ** SUC n) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ n'))
Status: Time Out

User theorems:  []
|- ∀n a b.
     BIT (SUC n) (a + b) ⇔
     if BIT (SUC n) (BITS n 0 a + BITS n 0 b) then
       BIT (SUC n) a ⇔ BIT (SUC n) b
     else BIT (SUC n) a ⇎ BIT (SUC n) b
 []
|- ∀n a b.
     BIT (SUC n) (a + b + 1) ⇔
     if BIT (SUC n) (BITS n 0 a + BITS n 0 b + 1) then
       BIT (SUC n) a ⇔ BIT (SUC n) b
     else BIT (SUC n) a ⇎ BIT (SUC n) b

Goal: [∀x y c.
  BSUM i (λi. BIT i x) (λi. BIT i y) c ⇔
  BIT i (x + y + if c then 1 else 0)] ?- ((BIT (SUC i) x ⇔ ¬BIT (SUC i) y) ⇔
 ¬BIT (SUC i) (BITS i 0 x + BITS i 0 y)) ⇔ BIT (SUC i) (x + y)
CNF1: ∀x' y' b c.
  (¬BIT (SUC x') (y' + b + 1) ∨
   BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ ¬BIT (SUC x') y' ∨
   ¬BIT (SUC x') b) ∧
  (¬BIT (SUC x') (y' + b + 1) ∨
   BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
   BIT (SUC x') b) ∧
  (¬BIT (SUC x') (y' + b + 1) ∨
   ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
   ¬BIT (SUC x') b) ∧
  (¬BIT (SUC x') (y' + b + 1) ∨
   ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ ¬BIT (SUC x') y' ∨
   BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b + 1) ∨
   ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ ¬BIT (SUC x') y' ∨
   ¬BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b + 1) ∨
   ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
   BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b + 1) ∨
   BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
   ¬BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b + 1) ∨
   BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ ¬BIT (SUC x') y' ∨
   BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b) ∨ BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   ¬BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b) ∨ BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b) ∨ ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b) ∨ ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   ¬BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
  (¬BIT (SUC x') (y' + b) ∨ ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   ¬BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
  (¬BIT (SUC x') (y' + b) ∨ ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
  (¬BIT (SUC x') (y' + b) ∨ BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
  (¬BIT (SUC x') (y' + b) ∨ BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   ¬BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
  (¬BSUM i (λi. BIT i x') (λi. BIT i y') c ∨
   BIT i (x' + y' + if c then 1 else 0)) ∧
  (BSUM i (λi. BIT i x') (λi. BIT i y') c ∨
   ¬BIT i (x' + y' + if c then 1 else 0)) ∧
  (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬BIT (SUC i) x ∨
   BIT (SUC i) y ∨ BIT (SUC i) (x + y)) ∧
  (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ BIT (SUC i) x ∨
   ¬BIT (SUC i) y ∨ BIT (SUC i) (x + y)) ∧
  (BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ BIT (SUC i) x ∨
   BIT (SUC i) y ∨ BIT (SUC i) (x + y)) ∧
  (BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬BIT (SUC i) x ∨
   ¬BIT (SUC i) y ∨ BIT (SUC i) (x + y)) ∧
  (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬BIT (SUC i) x ∨
   ¬BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y)) ∧
  (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ BIT (SUC i) x ∨
   BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y)) ∧
  (BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ BIT (SUC i) x ∨
   ¬BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y)) ∧
  (BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬BIT (SUC i) x ∨
   BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y))
Lambda: ∀x' y' b c.
  ∃f1.
    (∀i. f1 i ⇔ BIT i y') ∧
    ∃f.
      (∀i. f i ⇔ BIT i x') ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (¬BSUM i f f1 c ∨ BIT i (x' + y' + if c then 1 else 0)) ∧
      (BSUM i f f1 c ∨ ¬BIT i (x' + y' + if c then 1 else 0)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬BIT (SUC i) x ∨
       BIT (SUC i) y ∨ BIT (SUC i) (x + y)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ BIT (SUC i) (x + y)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ BIT (SUC i) x ∨
       BIT (SUC i) y ∨ BIT (SUC i) (x + y)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ BIT (SUC i) (x + y)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ BIT (SUC i) x ∨
       BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬BIT (SUC i) x ∨
       BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y))
Numeral: (0 ≤ BITS i 0 x + BITS i 0 y ∧ 0 ≤ BITS i 0 x ∧ 0 ≤ BITS i 0 y ∧
 0 ≤ SUC i ∧ 0 ≤ i ∧ 0 ≤ x + y ∧ 0 ≤ x ∧ 0 ≤ y) ∧
∀x' y' b c.
  0 ≤ b ∧ 0 ≤ x' ∧ 0 ≤ y' ⇒
  (0 ≤ y' + b + 1 ∧ 0 ≤ BITS x' 0 y' + BITS x' 0 b + 1 ∧ 0 ≤ y' + b ∧
   0 ≤ BITS x' 0 y' + BITS x' 0 b ∧ 0 ≤ BITS x' 0 y' ∧ 0 ≤ BITS x' 0 b ∧
   0 ≤ SUC x' ∧ 0 ≤ x' + y' + (if c then 1 else 0) ∧ 0 ≤ x' + y' ∧
   0 ≤ if c then 1 else 0) ∧
  ∃f1.
    (∀i. 0 ≤ i ⇒ (f1 i ⇔ BIT i y')) ∧
    ∃f.
      (∀i. 0 ≤ i ⇒ (f i ⇔ BIT i x')) ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (¬BSUM i f f1 c ∨ BIT i (x' + y' + if c then 1 else 0)) ∧
      (BSUM i f f1 c ∨ ¬BIT i (x' + y' + if c then 1 else 0)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬BIT (SUC i) x ∨
       BIT (SUC i) y ∨ BIT (SUC i) (x + y)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ BIT (SUC i) (x + y)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ BIT (SUC i) x ∨
       BIT (SUC i) y ∨ BIT (SUC i) (x + y)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ BIT (SUC i) (x + y)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ BIT (SUC i) x ∨
       BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬BIT (SUC i) x ∨
       BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y))
CNF2: ∃f1 f.
  ∀x' y' b c i'.
    0 ≤ y ∧ 0 ≤ x ∧ 0 ≤ x + y ∧ 0 ≤ i ∧ 0 ≤ SUC i ∧ 0 ≤ BITS i 0 y ∧
    0 ≤ BITS i 0 x ∧ 0 ≤ BITS i 0 x + BITS i 0 y ∧
    (0 ≤ (if c then 1 else 0) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (0 ≤ x' + y' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (0 ≤ x' + y' + (if c then 1 else 0) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧ (0 ≤ SUC x' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (0 ≤ BITS x' 0 b ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (0 ≤ BITS x' 0 y' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (0 ≤ BITS x' 0 y' + BITS x' 0 b ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧ (0 ≤ y' + b ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (0 ≤ BITS x' 0 y' + BITS x' 0 b + 1 ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧ (0 ≤ y' + b + 1 ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬(0 ≤ i') ∨ ¬f1 x' y' b c i' ∨ BIT i' y' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬(0 ≤ i') ∨ f1 x' y' b c i' ∨ ¬BIT i' y' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬(0 ≤ i') ∨ ¬f x' y' b c i' ∨ BIT i' x' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬(0 ≤ i') ∨ f x' y' b c i' ∨ ¬BIT i' x' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     ¬BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     ¬BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     ¬BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     ¬BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') (y' + b) ∨
     ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') (y' + b) ∨
     ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
     BIT (SUC x') (y' + b) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
     BIT (SUC x') (y' + b) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
     ¬BIT (SUC x') (y' + b) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
     ¬BIT (SUC x') (y' + b) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
     ¬BIT (SUC x') (y' + b) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
     ¬BIT (SUC x') (y' + b) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT i (x' + y' + if c then 1 else 0) ∨
     ¬BSUM i (f x' y' b c) (f1 x' y' b c) c ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬BIT i (x' + y' + if c then 1 else 0) ∨
     BSUM i (f x' y' b c) (f1 x' y' b c) c ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (BIT (SUC i) (x + y) ∨ BIT (SUC i) y ∨ ¬BIT (SUC i) x ∨
     ¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (BIT (SUC i) (x + y) ∨ ¬BIT (SUC i) y ∨ BIT (SUC i) x ∨
     ¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (BIT (SUC i) (x + y) ∨ BIT (SUC i) y ∨ BIT (SUC i) x ∨
     BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (BIT (SUC i) (x + y) ∨ ¬BIT (SUC i) y ∨ ¬BIT (SUC i) x ∨
     BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬BIT (SUC i) (x + y) ∨ ¬BIT (SUC i) y ∨ ¬BIT (SUC i) x ∨
     ¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬BIT (SUC i) (x + y) ∨ BIT (SUC i) y ∨ BIT (SUC i) x ∨
     ¬BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬BIT (SUC i) (x + y) ∨ ¬BIT (SUC i) y ∨ BIT (SUC i) x ∨
     BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬BIT (SUC i) (x + y) ∨ BIT (SUC i) y ∨ ¬BIT (SUC i) x ∨
     BIT (SUC i) (BITS i 0 x + BITS i 0 y) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y'))
Status: Time Out

User theorems:  []
|- ∀n a b.
     BIT (SUC n) (a + b) ⇔
     if BIT (SUC n) (BITS n 0 a + BITS n 0 b) then
       BIT (SUC n) a ⇔ BIT (SUC n) b
     else BIT (SUC n) a ⇎ BIT (SUC n) b
 []
|- ∀n a b.
     BIT (SUC n) (a + b + 1) ⇔
     if BIT (SUC n) (BITS n 0 a + BITS n 0 b + 1) then
       BIT (SUC n) a ⇔ BIT (SUC n) b
     else BIT (SUC n) a ⇎ BIT (SUC n) b

Goal: [∀x y c.
  BSUM i (λi. BIT i x) (λi. BIT i y) c ⇔
  BIT i (x + y + if c then 1 else 0)] ?- ((BIT (SUC i) x ⇔ ¬BIT (SUC i) y) ⇔
 ¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1)) ⇔ BIT (SUC i) (x + y + 1)
CNF1: ∀x' y' b c.
  (¬BIT (SUC x') (y' + b + 1) ∨
   BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ ¬BIT (SUC x') y' ∨
   ¬BIT (SUC x') b) ∧
  (¬BIT (SUC x') (y' + b + 1) ∨
   BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
   BIT (SUC x') b) ∧
  (¬BIT (SUC x') (y' + b + 1) ∨
   ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
   ¬BIT (SUC x') b) ∧
  (¬BIT (SUC x') (y' + b + 1) ∨
   ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ ¬BIT (SUC x') y' ∨
   BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b + 1) ∨
   ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ ¬BIT (SUC x') y' ∨
   ¬BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b + 1) ∨
   ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
   BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b + 1) ∨
   BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
   ¬BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b + 1) ∨
   BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ ¬BIT (SUC x') y' ∨
   BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b) ∨ BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   ¬BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b) ∨ BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b) ∨ ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
  (BIT (SUC x') (y' + b) ∨ ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   ¬BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
  (¬BIT (SUC x') (y' + b) ∨ ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   ¬BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
  (¬BIT (SUC x') (y' + b) ∨ ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
  (¬BIT (SUC x') (y' + b) ∨ BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
  (¬BIT (SUC x') (y' + b) ∨ BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
   ¬BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
  (¬BSUM i (λi. BIT i x') (λi. BIT i y') c ∨
   BIT i (x' + y' + if c then 1 else 0)) ∧
  (BSUM i (λi. BIT i x') (λi. BIT i y') c ∨
   ¬BIT i (x' + y' + if c then 1 else 0)) ∧
  (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬BIT (SUC i) x ∨
   BIT (SUC i) y ∨ BIT (SUC i) (x + y + 1)) ∧
  (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ BIT (SUC i) x ∨
   ¬BIT (SUC i) y ∨ BIT (SUC i) (x + y + 1)) ∧
  (BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ BIT (SUC i) x ∨
   BIT (SUC i) y ∨ BIT (SUC i) (x + y + 1)) ∧
  (BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬BIT (SUC i) x ∨
   ¬BIT (SUC i) y ∨ BIT (SUC i) (x + y + 1)) ∧
  (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬BIT (SUC i) x ∨
   ¬BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y + 1)) ∧
  (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ BIT (SUC i) x ∨
   BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y + 1)) ∧
  (BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ BIT (SUC i) x ∨
   ¬BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y + 1)) ∧
  (BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬BIT (SUC i) x ∨
   BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y + 1))
Lambda: ∀x' y' b c.
  ∃f1.
    (∀i. f1 i ⇔ BIT i y') ∧
    ∃f.
      (∀i. f i ⇔ BIT i x') ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (¬BSUM i f f1 c ∨ BIT i (x' + y' + if c then 1 else 0)) ∧
      (BSUM i f f1 c ∨ ¬BIT i (x' + y' + if c then 1 else 0)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬BIT (SUC i) x ∨
       BIT (SUC i) y ∨ BIT (SUC i) (x + y + 1)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ BIT (SUC i) (x + y + 1)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ BIT (SUC i) x ∨
       BIT (SUC i) y ∨ BIT (SUC i) (x + y + 1)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ BIT (SUC i) (x + y + 1)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y + 1)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ BIT (SUC i) x ∨
       BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y + 1)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y + 1)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬BIT (SUC i) x ∨
       BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y + 1))
Numeral: (0 ≤ BITS i 0 x + BITS i 0 y + 1 ∧ 0 ≤ BITS i 0 x + BITS i 0 y ∧
 0 ≤ BITS i 0 x ∧ 0 ≤ BITS i 0 y ∧ 0 ≤ SUC i ∧ 0 ≤ i ∧ 0 ≤ x + y + 1 ∧
 0 ≤ x + y ∧ 0 ≤ x ∧ 0 ≤ y) ∧
∀x' y' b c.
  0 ≤ b ∧ 0 ≤ x' ∧ 0 ≤ y' ⇒
  (0 ≤ y' + b + 1 ∧ 0 ≤ BITS x' 0 y' + BITS x' 0 b + 1 ∧ 0 ≤ y' + b ∧
   0 ≤ BITS x' 0 y' + BITS x' 0 b ∧ 0 ≤ BITS x' 0 y' ∧ 0 ≤ BITS x' 0 b ∧
   0 ≤ SUC x' ∧ 0 ≤ x' + y' + (if c then 1 else 0) ∧ 0 ≤ x' + y' ∧
   0 ≤ if c then 1 else 0) ∧
  ∃f1.
    (∀i. 0 ≤ i ⇒ (f1 i ⇔ BIT i y')) ∧
    ∃f.
      (∀i. 0 ≤ i ⇒ (f i ⇔ BIT i x')) ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ ¬BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨ BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b + 1) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
       ¬BIT (SUC x') y' ∨ BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') y' ∨
       BIT (SUC x') b) ∧
      (¬BIT (SUC x') (y' + b) ∨
       BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ ¬BIT (SUC x') y' ∨
       ¬BIT (SUC x') b) ∧
      (¬BSUM i f f1 c ∨ BIT i (x' + y' + if c then 1 else 0)) ∧
      (BSUM i f f1 c ∨ ¬BIT i (x' + y' + if c then 1 else 0)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬BIT (SUC i) x ∨
       BIT (SUC i) y ∨ BIT (SUC i) (x + y + 1)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ BIT (SUC i) (x + y + 1)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ BIT (SUC i) x ∨
       BIT (SUC i) y ∨ BIT (SUC i) (x + y + 1)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ BIT (SUC i) (x + y + 1)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y + 1)) ∧
      (¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ BIT (SUC i) x ∨
       BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y + 1)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ BIT (SUC i) x ∨
       ¬BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y + 1)) ∧
      (BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬BIT (SUC i) x ∨
       BIT (SUC i) y ∨ ¬BIT (SUC i) (x + y + 1))
CNF2: ∃f1 f.
  ∀x' y' b c i'.
    0 ≤ y ∧ 0 ≤ x ∧ 0 ≤ x + y ∧ 0 ≤ x + y + 1 ∧ 0 ≤ i ∧ 0 ≤ SUC i ∧
    0 ≤ BITS i 0 y ∧ 0 ≤ BITS i 0 x ∧ 0 ≤ BITS i 0 x + BITS i 0 y ∧
    0 ≤ BITS i 0 x + BITS i 0 y + 1 ∧
    (0 ≤ (if c then 1 else 0) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (0 ≤ x' + y' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (0 ≤ x' + y' + (if c then 1 else 0) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧ (0 ≤ SUC x' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (0 ≤ BITS x' 0 b ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (0 ≤ BITS x' 0 y' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (0 ≤ BITS x' 0 y' + BITS x' 0 b ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧ (0 ≤ y' + b ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (0 ≤ BITS x' 0 y' + BITS x' 0 b + 1 ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧ (0 ≤ y' + b + 1 ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬(0 ≤ i') ∨ ¬f1 x' y' b c i' ∨ BIT i' y' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬(0 ≤ i') ∨ f1 x' y' b c i' ∨ ¬BIT i' y' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬(0 ≤ i') ∨ ¬f x' y' b c i' ∨ BIT i' x' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬(0 ≤ i') ∨ f x' y' b c i' ∨ ¬BIT i' x' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     ¬BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     ¬BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     ¬BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     ¬BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b + 1) ∨
     BIT (SUC x') (y' + b + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') (y' + b) ∨
     ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨ BIT (SUC x') (y' + b) ∨
     ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
     BIT (SUC x') (y' + b) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
     BIT (SUC x') (y' + b) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
     ¬BIT (SUC x') (y' + b) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     ¬BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
     ¬BIT (SUC x') (y' + b) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT (SUC x') b ∨ BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
     ¬BIT (SUC x') (y' + b) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (¬BIT (SUC x') b ∨ ¬BIT (SUC x') y' ∨
     BIT (SUC x') (BITS x' 0 y' + BITS x' 0 b) ∨
     ¬BIT (SUC x') (y' + b) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨ ¬(0 ≤ y')) ∧
    (BIT i (x' + y' + if c then 1 else 0) ∨
     ¬BSUM i (f x' y' b c) (f1 x' y' b c) c ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬BIT i (x' + y' + if c then 1 else 0) ∨
     BSUM i (f x' y' b c) (f1 x' y' b c) c ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (BIT (SUC i) (x + y + 1) ∨ BIT (SUC i) y ∨ ¬BIT (SUC i) x ∨
     ¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (BIT (SUC i) (x + y + 1) ∨ ¬BIT (SUC i) y ∨ BIT (SUC i) x ∨
     ¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (BIT (SUC i) (x + y + 1) ∨ BIT (SUC i) y ∨ BIT (SUC i) x ∨
     BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (BIT (SUC i) (x + y + 1) ∨ ¬BIT (SUC i) y ∨ ¬BIT (SUC i) x ∨
     BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬BIT (SUC i) (x + y + 1) ∨ ¬BIT (SUC i) y ∨ ¬BIT (SUC i) x ∨
     ¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬BIT (SUC i) (x + y + 1) ∨ BIT (SUC i) y ∨ BIT (SUC i) x ∨
     ¬BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬BIT (SUC i) (x + y + 1) ∨ ¬BIT (SUC i) y ∨ BIT (SUC i) x ∨
     BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y')) ∧
    (¬BIT (SUC i) (x + y + 1) ∨ BIT (SUC i) y ∨ ¬BIT (SUC i) x ∨
     BIT (SUC i) (BITS i 0 x + BITS i 0 y + 1) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ x') ∨
     ¬(0 ≤ y'))
Status: Time Out

User theorems: 
Goal: [a ' (h + (i + 1)),h + (i + 1) ≤ dimindex (:α) − 1,i < dimindex (:α),h + 1 ≤ dimindex (:α) − 1,∀i.
  i < dimindex (:α) ⇒
  ¬(h + (i + 1) ≤ dimindex (:α) − 1) ∨ ¬w ' (h + (i + 1))] ?- ¬w ' (h + (i + 1))
CNF1: ∀i'.
  (¬w ' (h + (i' + 1)) ∨ ¬(h + (i' + 1) ≤ dimindex (:α) − 1) ∨
   ¬(i' < dimindex (:α))) ∧ h + 1 ≤ dimindex (:α) − 1 ∧
  i < dimindex (:α) ∧ h + (i + 1) ≤ dimindex (:α) − 1 ∧
  a ' (h + (i + 1)) ∧ w ' (h + (i + 1))
Numeral: (0 ≤ h + 1 ∧ 0 ≤ dimindex (:α) − 1 ∧ 0 ≤ dimindex (:α) ∧
 0 ≤ h + (i + 1) ∧ 0 ≤ h ∧ 0 ≤ i + 1 ∧ 0 ≤ i) ∧
∀i'.
  0 ≤ i' ⇒
  (0 ≤ h + (i' + 1) ∧ 0 ≤ i' + 1) ∧
  (¬w ' (h + (i' + 1)) ∨ ¬(h + (i' + 1) ≤ dimindex (:α) − 1) ∨
   ¬(i' < dimindex (:α))) ∧ h + 1 ≤ dimindex (:α) − 1 ∧
  i < dimindex (:α) ∧ h + (i + 1) ≤ dimindex (:α) − 1 ∧
  a ' (h + (i + 1)) ∧ w ' (h + (i + 1))
CNF2: ∀i'.
  0 ≤ i ∧ 0 ≤ i + 1 ∧ 0 ≤ h ∧ 0 ≤ h + (i + 1) ∧ 0 ≤ dimindex (:α) ∧
  0 ≤ dimindex (:α) − 1 ∧ 0 ≤ h + 1 ∧ (0 ≤ i' + 1 ∨ ¬(0 ≤ i')) ∧
  (0 ≤ h + (i' + 1) ∨ ¬(0 ≤ i')) ∧
  (¬(i' < dimindex (:α)) ∨ ¬(h + (i' + 1) ≤ dimindex (:α) − 1) ∨
   ¬w ' (h + (i' + 1)) ∨ ¬(0 ≤ i')) ∧
  (h + 1 ≤ dimindex (:α) − 1 ∨ ¬(0 ≤ i')) ∧
  (i < dimindex (:α) ∨ ¬(0 ≤ i')) ∧
  (h + (i + 1) ≤ dimindex (:α) − 1 ∨ ¬(0 ≤ i')) ∧
  (a ' (h + (i + 1)) ∨ ¬(0 ≤ i')) ∧ (w ' (h + (i + 1)) ∨ ¬(0 ≤ i'))
Status: Unsatisfiable

User theorems:  [] |- LOG2 = LOG 2
 [] |- ∀m. SUC m = m + 1
 [] |- ∀m n p. m ≤ n ∧ n < p ⇒ m < p

Goal: [n − 1 < 2 ** SUC (LOG 2 (n − 1)),2 ** LOG 2 (n − 1) ≤ n − 1,0 < n − 1,x ≤ n − 1,P x,x < n,n ≤ dimindex (:α),1 < n] ?- x < 2 ** (LOG2 (n − 1) + 1)
CNF1: ∀m n' p.
  (m < p ∨ ¬(m ≤ n') ∨ ¬(n' < p)) ∧ (SUC m = m + 1) ∧ (LOG2 = LOG 2) ∧
  1 < n ∧ n ≤ dimindex (:α) ∧ x < n ∧ P x ∧ x ≤ n − 1 ∧ 0 < n − 1 ∧
  2 ** LOG 2 (n − 1) ≤ n − 1 ∧ n − 1 < 2 ** SUC (LOG 2 (n − 1)) ∧
  ¬(x < 2 ** (LOG2 (n − 1) + 1))
Numeral: (0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** LOG 2 (n − 1) ∧
 0 ≤ 2 ** SUC (LOG 2 (n − 1)) ∧ 0 ≤ SUC (LOG 2 (n − 1)) ∧
 0 ≤ LOG 2 (n − 1) ∧ 0 ≤ x ∧ 0 ≤ 2 ** (LOG2 (n − 1) + 1) ∧
 0 ≤ LOG2 (n − 1) + 1 ∧ 0 ≤ LOG2 (n − 1) ∧ 0 ≤ n − 1 ∧ 0 ≤ n) ∧
∀m n' p.
  0 ≤ n' ∧ 0 ≤ p ∧ 0 ≤ m ⇒
  (0 ≤ SUC m ∧ 0 ≤ m + 1) ∧ (m < p ∨ ¬(m ≤ n') ∨ ¬(n' < p)) ∧
  (SUC m = m + 1) ∧ (LOG2 = LOG 2) ∧ 1 < n ∧ n ≤ dimindex (:α) ∧ x < n ∧
  P x ∧ x ≤ n − 1 ∧ 0 < n − 1 ∧ 2 ** LOG 2 (n − 1) ≤ n − 1 ∧
  n − 1 < 2 ** SUC (LOG 2 (n − 1)) ∧ ¬(x < 2 ** (LOG2 (n − 1) + 1))
CNF2: ∀m n' p.
  0 ≤ n ∧ 0 ≤ n − 1 ∧ 0 ≤ LOG2 (n − 1) ∧ 0 ≤ LOG2 (n − 1) + 1 ∧
  0 ≤ 2 ** (LOG2 (n − 1) + 1) ∧ 0 ≤ x ∧ 0 ≤ LOG 2 (n − 1) ∧
  0 ≤ SUC (LOG 2 (n − 1)) ∧ 0 ≤ 2 ** SUC (LOG 2 (n − 1)) ∧
  0 ≤ 2 ** LOG 2 (n − 1) ∧ 0 ≤ dimindex (:α) ∧
  (0 ≤ m + 1 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m)) ∧
  (0 ≤ SUC m ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m)) ∧
  (¬(n' < p) ∨ ¬(m ≤ n') ∨ m < p ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m)) ∧
  ((SUC m = m + 1) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m)) ∧
  ((LOG2 = LOG 2) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m)) ∧
  (1 < n ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m)) ∧
  (n ≤ dimindex (:α) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m)) ∧
  (x < n ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m)) ∧
  (P x ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m)) ∧
  (x ≤ n − 1 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m)) ∧
  (0 < n − 1 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m)) ∧
  (2 ** LOG 2 (n − 1) ≤ n − 1 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m)) ∧
  (n − 1 < 2 ** SUC (LOG 2 (n − 1)) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m)) ∧
  (¬(x < 2 ** (LOG2 (n − 1) + 1)) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m))
Status: Unsatisfiable

User theorems:  []
|- ∀h w P a.
     ((dimindex (:α) − 1 -- h + 1) w = 0w) ⇒
     (((h -- 0) a = w) ∧ ((dimindex (:α) − 1 -- h + 1) a = 0w) ⇔
      (a = w))

Goal: [(dimindex (:α) − 1 -- LOG2 (n − 1) + 1) (n2w x) = 0w,x < 2 ** (LOG2 (n − 1) + 1),n − 1 < 2 ** SUC (LOG 2 (n − 1)),2 ** LOG 2 (n − 1) ≤ n − 1,0 < n − 1,x ≤ n − 1,P x,x < n,n ≤ dimindex (:α),1 < n] ?- (m = n2w x) ⇔
((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m = 0w) ∧
((LOG2 (n − 1) -- 0) m = n2w x)
CNF1: ∀h w a.
  ((a = w) ∨ (h -- 0) a ≠ w ∨ (dimindex (:α) − 1 -- h + 1) a ≠ 0w ∨
   (dimindex (:α) − 1 -- h + 1) w ≠ 0w) ∧
  (a ≠ w ∨ ((h -- 0) a = w) ∨ (dimindex (:α) − 1 -- h + 1) w ≠ 0w) ∧
  (a ≠ w ∨ ((dimindex (:α) − 1 -- h + 1) a = 0w) ∨
   (dimindex (:α) − 1 -- h + 1) w ≠ 0w) ∧ 1 < n ∧ n ≤ dimindex (:α) ∧
  x < n ∧ P x ∧ x ≤ n − 1 ∧ 0 < n − 1 ∧ 2 ** LOG 2 (n − 1) ≤ n − 1 ∧
  n − 1 < 2 ** SUC (LOG 2 (n − 1)) ∧ x < 2 ** (LOG2 (n − 1) + 1) ∧
  ((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) (n2w x) = 0w) ∧
  ((m = n2w x) ∨ ((LOG2 (n − 1) -- 0) m = n2w x)) ∧
  ((m = n2w x) ∨ ((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m = 0w)) ∧
  (m ≠ n2w x ∨ (dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m ≠ 0w ∨
   (LOG2 (n − 1) -- 0) m ≠ n2w x)
Numeral: (0 ≤ 2 ** LOG 2 (n − 1) ∧ 0 ≤ 2 ** SUC (LOG 2 (n − 1)) ∧
 0 ≤ SUC (LOG 2 (n − 1)) ∧ 0 ≤ LOG 2 (n − 1) ∧
 0 ≤ 2 ** (LOG2 (n − 1) + 1) ∧ 0 ≤ dimindex (:α) − 1 ∧
 0 ≤ dimindex (:α) ∧ 0 ≤ LOG2 (n − 1) + 1 ∧ 0 ≤ LOG2 (n − 1) ∧
 0 ≤ n − 1 ∧ 0 ≤ n ∧ 0 ≤ x) ∧
∀h w a.
  0 ≤ h ⇒
  0 ≤ h + 1 ∧
  ((a = w) ∨ (h -- 0) a ≠ w ∨ (dimindex (:α) − 1 -- h + 1) a ≠ 0w ∨
   (dimindex (:α) − 1 -- h + 1) w ≠ 0w) ∧
  (a ≠ w ∨ ((h -- 0) a = w) ∨ (dimindex (:α) − 1 -- h + 1) w ≠ 0w) ∧
  (a ≠ w ∨ ((dimindex (:α) − 1 -- h + 1) a = 0w) ∨
   (dimindex (:α) − 1 -- h + 1) w ≠ 0w) ∧ 1 < n ∧ n ≤ dimindex (:α) ∧
  x < n ∧ P x ∧ x ≤ n − 1 ∧ 0 < n − 1 ∧ 2 ** LOG 2 (n − 1) ≤ n − 1 ∧
  n − 1 < 2 ** SUC (LOG 2 (n − 1)) ∧ x < 2 ** (LOG2 (n − 1) + 1) ∧
  ((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) (n2w x) = 0w) ∧
  ((m = n2w x) ∨ ((LOG2 (n − 1) -- 0) m = n2w x)) ∧
  ((m = n2w x) ∨ ((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m = 0w)) ∧
  (m ≠ n2w x ∨ (dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m ≠ 0w ∨
   (LOG2 (n − 1) -- 0) m ≠ n2w x)
CNF2: ∀h w a.
  0 ≤ x ∧ 0 ≤ n ∧ 0 ≤ n − 1 ∧ 0 ≤ LOG2 (n − 1) ∧ 0 ≤ LOG2 (n − 1) + 1 ∧
  0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧
  0 ≤ 2 ** (LOG2 (n − 1) + 1) ∧ 0 ≤ LOG 2 (n − 1) ∧
  0 ≤ SUC (LOG 2 (n − 1)) ∧ 0 ≤ 2 ** SUC (LOG 2 (n − 1)) ∧
  0 ≤ 2 ** LOG 2 (n − 1) ∧ (0 ≤ h + 1 ∨ ¬(0 ≤ h)) ∧
  ((dimindex (:α) − 1 -- h + 1) w ≠ 0w ∨
   (dimindex (:α) − 1 -- h + 1) a ≠ 0w ∨ (h -- 0) a ≠ w ∨ (a = w) ∨
   ¬(0 ≤ h)) ∧
  ((dimindex (:α) − 1 -- h + 1) w ≠ 0w ∨ ((h -- 0) a = w) ∨ a ≠ w ∨
   ¬(0 ≤ h)) ∧
  ((dimindex (:α) − 1 -- h + 1) w ≠ 0w ∨
   ((dimindex (:α) − 1 -- h + 1) a = 0w) ∨ a ≠ w ∨ ¬(0 ≤ h)) ∧
  (1 < n ∨ ¬(0 ≤ h)) ∧ (n ≤ dimindex (:α) ∨ ¬(0 ≤ h)) ∧
  (x < n ∨ ¬(0 ≤ h)) ∧ (P x ∨ ¬(0 ≤ h)) ∧ (x ≤ n − 1 ∨ ¬(0 ≤ h)) ∧
  (0 < n − 1 ∨ ¬(0 ≤ h)) ∧ (2 ** LOG 2 (n − 1) ≤ n − 1 ∨ ¬(0 ≤ h)) ∧
  (n − 1 < 2 ** SUC (LOG 2 (n − 1)) ∨ ¬(0 ≤ h)) ∧
  (x < 2 ** (LOG2 (n − 1) + 1) ∨ ¬(0 ≤ h)) ∧
  (((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) (n2w x) = 0w) ∨ ¬(0 ≤ h)) ∧
  (((LOG2 (n − 1) -- 0) m = n2w x) ∨ (m = n2w x) ∨ ¬(0 ≤ h)) ∧
  (((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m = 0w) ∨ (m = n2w x) ∨
   ¬(0 ≤ h)) ∧
  ((LOG2 (n − 1) -- 0) m ≠ n2w x ∨
   (dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m ≠ 0w ∨ m ≠ n2w x ∨
   ¬(0 ≤ h))
Status: Unsatisfiable

User theorems:  [] |- ∀m. m ≤ m
 []
|- ∀P n m.
     1 < n ∧ n ≤ dimindex (:α) ⇒
     (FOLDL (λa j. a ∨ (m = n2w j) ∧ P j) F (COUNT_LIST n) ⇔
      FOLDL (λa j. a ∨ ((LOG2 (n − 1) -- 0) m = n2w j) ∧ P j) F
        (COUNT_LIST n) ∧
      ((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m = 0w))

Goal: [i < dimindex (:α),1 < dimindex (:α),dimindex (:α) ≠ 1] ?- FOLDL (λa j. a ∨ (m = n2w j) ∧ i + j < dimindex (:α) ∧ w ' (i + j)) F
  (COUNT_LIST (dimindex (:α))) ⇔
FOLDL
  (λa j.
     a ∨
     ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j) ∧
     i + j < dimindex (:α) ∧ w ' (i + j)) F
  (COUNT_LIST (dimindex (:α))) ∧
((dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m = 0w)
CNF1: ∀m' P n m''.
  (((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m'' = 0w) ∨
   ¬FOLDL (λa j. (a ∨ (m'' = n2w j)) ∧ (a ∨ P j)) F (COUNT_LIST n) ∨
   ¬(1 < n) ∨ ¬(n ≤ dimindex (:α))) ∧
  (FOLDL (λa j. (a ∨ ((LOG2 (n − 1) -- 0) m'' = n2w j)) ∧ (a ∨ P j)) F
     (COUNT_LIST n) ∨
   ¬FOLDL (λa j. (a ∨ (m'' = n2w j)) ∧ (a ∨ P j)) F (COUNT_LIST n) ∨
   ¬(1 < n) ∨ ¬(n ≤ dimindex (:α))) ∧
  ((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m'' ≠ 0w ∨
   ¬FOLDL (λa j. (a ∨ ((LOG2 (n − 1) -- 0) m'' = n2w j)) ∧ (a ∨ P j)) F
      (COUNT_LIST n) ∨
   FOLDL (λa j. (a ∨ (m'' = n2w j)) ∧ (a ∨ P j)) F (COUNT_LIST n) ∨
   ¬(1 < n) ∨ ¬(n ≤ dimindex (:α))) ∧ m' ≤ m' ∧ dimindex (:α) ≠ 1 ∧
  1 < dimindex (:α) ∧ i < dimindex (:α) ∧
  (FOLDL
     (λa j.
        (a ∨ (m = n2w j)) ∧ (a ∨ i + j < dimindex (:α)) ∧
        (a ∨ w ' (i + j))) F (COUNT_LIST (dimindex (:α))) ∨
   ((dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m = 0w)) ∧
  (FOLDL
     (λa j.
        (a ∨ (m = n2w j)) ∧ (a ∨ i + j < dimindex (:α)) ∧
        (a ∨ w ' (i + j))) F (COUNT_LIST (dimindex (:α))) ∨
   FOLDL
     (λa j.
        (a ∨ ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j)) ∧
        (a ∨ i + j < dimindex (:α)) ∧ (a ∨ w ' (i + j))) F
     (COUNT_LIST (dimindex (:α)))) ∧
  (¬FOLDL
      (λa j.
         (a ∨ (m = n2w j)) ∧ (a ∨ i + j < dimindex (:α)) ∧
         (a ∨ w ' (i + j))) F (COUNT_LIST (dimindex (:α))) ∨
   ¬FOLDL
      (λa j.
         (a ∨ ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j)) ∧
         (a ∨ i + j < dimindex (:α)) ∧ (a ∨ w ' (i + j))) F
      (COUNT_LIST (dimindex (:α))) ∨
   (dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m ≠ 0w)
Lambda: ∃f3.
  (∀a j.
     f3 a j ⇔
     (a ∨ ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j)) ∧
     (a ∨ i + j < dimindex (:α)) ∧ (a ∨ w ' (i + j))) ∧
  ∃f2.
    (∀a j.
       f2 a j ⇔
       (a ∨ (m = n2w j)) ∧ (a ∨ i + j < dimindex (:α)) ∧
       (a ∨ w ' (i + j))) ∧
    ∀m' P n m''.
      ∃f1.
        (∀a j. f1 a j ⇔ (a ∨ (m'' = n2w j)) ∧ (a ∨ P j)) ∧
        ∃f.
          (∀a j.
             f a j ⇔
             (a ∨ ((LOG2 (n − 1) -- 0) m'' = n2w j)) ∧ (a ∨ P j)) ∧
          (((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m'' = 0w) ∨
           ¬FOLDL f1 F (COUNT_LIST n) ∨ ¬(1 < n) ∨
           ¬(n ≤ dimindex (:α))) ∧
          (FOLDL f F (COUNT_LIST n) ∨ ¬FOLDL f1 F (COUNT_LIST n) ∨
           ¬(1 < n) ∨ ¬(n ≤ dimindex (:α))) ∧
          ((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m'' ≠ 0w ∨
           ¬FOLDL f F (COUNT_LIST n) ∨ FOLDL f1 F (COUNT_LIST n) ∨
           ¬(1 < n) ∨ ¬(n ≤ dimindex (:α))) ∧ m' ≤ m' ∧
          dimindex (:α) ≠ 1 ∧ 1 < dimindex (:α) ∧ i < dimindex (:α) ∧
          (FOLDL f2 F (COUNT_LIST (dimindex (:α))) ∨
           ((dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m =
            0w)) ∧
          (FOLDL f2 F (COUNT_LIST (dimindex (:α))) ∨
           FOLDL f3 F (COUNT_LIST (dimindex (:α)))) ∧
          (¬FOLDL f2 F (COUNT_LIST (dimindex (:α))) ∨
           ¬FOLDL f3 F (COUNT_LIST (dimindex (:α))) ∨
           (diUser theorems:  [] |- ∀m. m ≤ m
 []
|- ∀P n m.
     1 < n ∧ n ≤ dimindex (:α) ⇒
     (FOLDL (λa j. a ∨ (m = n2w j) ∧ P j) F (COUNT_LIST n) ⇔
      FOLDL (λa j. a ∨ ((LOG2 (n − 1) -- 0) m = n2w j) ∧ P j) F
        (COUNT_LIST n) ∧
      ((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m = 0w))

Goal: [i < dimindex (:α),1 < dimindex (:α),dimindex (:α) ≠ 1] ?- FOLDL (λa j. a ∨ (m = n2w j) ∧ (w ≫ j) ' i) F
  (COUNT_LIST (dimindex (:α))) ∨
n2w (dimindex (:α) − 1) <₊ m ∧ word_msb w ⇔
FOLDL
  (λa j. a ∨ ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j) ∧ (w ≫ j) ' i)
  F (COUNT_LIST (dimindex (:α))) ∧
((dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m = 0w) ∨
n2w (dimindex (:α) − 1) <₊ m ∧ word_msb w
CNF1: ∀m' P n m''.
  (((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m'' = 0w) ∨
   ¬FOLDL (λa j. (a ∨ (m'' = n2w j)) ∧ (a ∨ P j)) F (COUNT_LIST n) ∨
   ¬(1 < n) ∨ ¬(n ≤ dimindex (:α))) ∧
  (FOLDL (λa j. (a ∨ ((LOG2 (n − 1) -- 0) m'' = n2w j)) ∧ (a ∨ P j)) F
     (COUNT_LIST n) ∨
   ¬FOLDL (λa j. (a ∨ (m'' = n2w j)) ∧ (a ∨ P j)) F (COUNT_LIST n) ∨
   ¬(1 < n) ∨ ¬(n ≤ dimindex (:α))) ∧
  ((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m'' ≠ 0w ∨
   ¬FOLDL (λa j. (a ∨ ((LOG2 (n − 1) -- 0) m'' = n2w j)) ∧ (a ∨ P j)) F
      (COUNT_LIST n) ∨
   FOLDL (λa j. (a ∨ (m'' = n2w j)) ∧ (a ∨ P j)) F (COUNT_LIST n) ∨
   ¬(1 < n) ∨ ¬(n ≤ dimindex (:α))) ∧ m' ≤ m' ∧ dimindex (:α) ≠ 1 ∧
  1 < dimindex (:α) ∧ i < dimindex (:α) ∧
  (word_msb w ∨
   FOLDL (λa j. (a ∨ (m = n2w j)) ∧ (a ∨ (w ≫ j) ' i)) F
     (COUNT_LIST (dimindex (:α))) ∨
   ((dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m = 0w)) ∧
  (n2w (dimindex (:α) − 1) <₊ m ∨
   FOLDL (λa j. (a ∨ (m = n2w j)) ∧ (a ∨ (w ≫ j) ' i)) F
     (COUNT_LIST (dimindex (:α))) ∨
   ((dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m = 0w) ∨
   word_msb w) ∧
  (n2w (dimindex (:α) − 1) <₊ m ∨
   FOLDL (λa j. (a ∨ (m = n2w j)) ∧ (a ∨ (w ≫ j) ' i)) F
     (COUNT_LIST (dimindex (:α))) ∨
   FOLDL
     (λa j.
        (a ∨ ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j)) ∧
        (a ∨ (w ≫ j) ' i)) F (COUNT_LIST (dimindex (:α))) ∨
   word_msb w) ∧
  (word_msb w ∨
   FOLDL (λa j. (a ∨ (m = n2w j)) ∧ (a ∨ (w ≫ j) ' i)) F
     (COUNT_LIST (dimindex (:α))) ∨
   FOLDL
     (λa j.
        (a ∨ ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j)) ∧
        (a ∨ (w ≫ j) ' i)) F (COUNT_LIST (dimindex (:α)))) ∧
  (word_msb w ∨
   FOLDL (λa j. (a ∨ (m = n2w j)) ∧ (a ∨ (w ≫ j) ' i)) F
     (COUNT_LIST (dimindex (:α))) ∨
   FOLDL
     (λa j.
        (a ∨ ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j)) ∧
        (a ∨ (w ≫ j) ' i)) F (COUNT_LIST (dimindex (:α))) ∨
   n2w (dimindex (:α) − 1) <₊ m) ∧
  (n2w (dimindex (:α) − 1) <₊ m ∨
   FOLDL (λa j. (a ∨ (m = n2w j)) ∧ (a ∨ (w ≫ j) ' i)) F
     (COUNT_LIST (dimindex (:α))) ∨
   FOLDL
     (λa j.
        (a ∨ ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j)) ∧
        (a ∨ (w ≫ j) ' i)) F (COUNT_LIST (dimindex (:α)))) ∧
  (n2w (dimindex (:α) − 1) <₊ m ∨
   FOLDL (λa j. (a ∨ (m = n2w j)) ∧ (a ∨ (w ≫ j) ' i)) F
     (COUNT_LIST (dimindex (:α))) ∨
   ((dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m = 0w)) ∧
  (word_msb w ∨
   FOLDL (λa j. (a ∨ (m = n2w j)) ∧ (a ∨ (w ≫ j) ' i)) F
     (COUNT_LIST (dimindex (:α))) ∨
   ((dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m = 0w) ∨
   n2w (dimindex (:α) − 1) <₊ m) ∧
  (¬word_msb w ∨ ¬(n2w (dimindex (:α) − 1) <₊ m) ∨
   ¬FOLDL
      (λa j.
         (a ∨ ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j)) ∧
         (a ∨ (w ≫ j) ' i)) F (COUNT_LIST (dimindex (:α))) ∨
   (dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m ≠ 0w) ∧
  (¬FOLDL (λa j. (a ∨ (m = n2w j)) ∧ (a ∨ (w ≫ j) ' i)) F
      (COUNT_LIST (dimindex (:α))) ∨
   ¬FOLDL
      (λa j.
         (a ∨ ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j)) ∧
         (a ∨ (w ≫ j) ' i)) F (COUNT_LIST (dimindex (:α))) ∨
   (dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m ≠ 0w) ∧
  (¬FOLDL (λa j. (a ∨ (m = n2w j)) ∧ (a ∨ (w ≫ j) ' i)) F
      (COUNT_LIST (dimindex (:α))) ∨ ¬(n2w (dimindex (:α) − 1) <₊ m) ∨
   ¬word_msb w) ∧ (¬word_msb w ∨ ¬(n2w (dimindex (:α) − 1) <₊ m))
Lambda: ∃f3.
  (∀a j. f3 a j ⇔ (a ∨ (m = n2w j)) ∧ (a ∨ (w ≫ j) ' i)) ∧
  ∃f2.
    (∀a j.
       f2 a j ⇔
       (a ∨ ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j)) ∧
       (a ∨ (w ≫ j) ' i)) ∧
    ∀m' P n m''.
      ∃f1.
        (∀a j. f1 a j ⇔ (a ∨ (m'' = n2w j)) ∧ (a ∨ P j)) ∧
        ∃f.
          (∀a j.
             f a j ⇔
             (a ∨ ((LOG2 (n − 1) -- 0) m'' = n2w j)) ∧ (a ∨ P j)) ∧
          (((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m'' = 0w) ∨
           ¬FOLDL f1 F (COUNT_LIST n) ∨ ¬(1 < n) ∨
           ¬(n ≤ dimindex (:α))) ∧
          (FOLDL f F (COUNT_LIST n) ∨ ¬FOLDL f1 F (COUNT_LIST n) ∨
           ¬(1 < n) ∨ ¬(n ≤ dimindex (:α))) ∧
          ((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m'' ≠ 0w ∨
           ¬FOLDL f F (COUNT_LIST n) ∨ FOLDL f1 F (COUNT_LIST n) ∨
           ¬(1 < n) ∨ ¬(n ≤ dimindex (:α))) ∧ m' ≤ m' ∧
          dimindex (:α) ≠ 1 ∧ 1 < dimindex (:α) ∧ i < dimindex (:α) ∧
          (word_msb w ∨ FOLDL f3 F (COUNT_LIST (dimindex (:α))) ∨
           ((dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m =
            0w)) ∧
          (n2w (dimindex (:α) − 1) <₊ m ∨
           FOLDL f3 F (COUNT_LIST (dimindex (:α))) ∨
           ((dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m =
            0w) ∨ word_msb w) ∧
          (n2w (dimindex (:α) − 1) <₊ m ∨
           FOLDL f3 F (COUNT_LIST (dimindex (:α))) ∨
           FOLDL f2 F (COUNT_LIST (dimindex (:α))) ∨ word_msb w) ∧
          (word_msb w ∨ FOLDL f3 F (COUNT_LIST (dimindex (:α))) ∨
           FOLDL f2 F (COUNT_LIST (dimindex (:α)))) ∧
          (word_msb w ∨ FOLDL f3 F (COUNT_LIST (dimindex (:α))) ∨
           FOLDL f2 F (COUNT_LIST (dimindex (:α))) ∨
           n2w (dimindex (:α) − 1) <₊ m) ∧
          (n2w (dimindex (:α) − 1) <₊ m ∨
           FOLDL f3 F (COUNT_LIST (dimindex (:α))) ∨
           FOLDL f2 F (COUNT_LIST (dimindex (:α)))) ∧
          (n2w (dimindex (:α) − 1) <₊ m ∨
           FOLDL f3 F (COUNT_LIST (dimindex (:α))) ∨
           ((dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m =
            0w)) ∧
          (word_msb w ∨ FOLDL f3 F (COUNT_LIST (dimindex (:α))) ∨
           ((dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m =
            0w) ∨ n2w (dimindex (:α) − 1) <₊ m) ∧
          (¬word_msb w ∨ ¬(n2w (dimindex (:α) − 1) <₊ m) ∨
           ¬FOLDL f2 F (COUNT_LIST (dimindex (:α))) ∨
           (dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m ≠ 0w) ∧
          (¬FOLDL f3 F (COUNT_LIST (dimindex (:α))) ∨
           ¬FOLDL f2 F (COUNT_LIST (dimindex (:α))) ∨
           (dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m ≠ 0w) ∧
          (¬FOLDL f3 F (COUNT_LIST (dimindex (:α))) ∨
           ¬(n2w (dimindex (:α) − 1) <₊ m) ∨ ¬word_msb w) ∧
          (¬word_msb w ∨ ¬(n2w (dimindex (:α) − 1) <₊ m))mindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m ≠ 0w)User theorems:  [] |- ∀m. m ≤ m
 []
|- ∀P n m.
     1 < n ∧ n ≤ dimindex (:α) ⇒
     (FOLDL (λa j. a ∨ (m = n2w j) ∧ P j) F (COUNT_LIST n) ⇔
      FOLDL (λa j. a ∨ ((LOG2 (n − 1) -- 0) m = n2w j) ∧ P j) F
        (COUNT_LIST n) ∧
      ((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m = 0w))

Goal: [i < dimindex (:α),1 < dimindex (:α),dimindex (:α) ≠ 1] ?- FOLDL (λa j. a ∨ (m = n2w j) ∧ j ≤ i ∧ w ' (i − j)) F
  (COUNT_LIST (dimindex (:α))) ⇔
FOLDL
  (λa j.
     a ∨
     ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j) ∧ j ≤ i ∧ w ' (i − j))
  F (COUNT_LIST (dimindex (:α))) ∧
((dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m = 0w)
CNF1: ∀m' P n m''.
  (((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m'' = 0w) ∨
   ¬FOLDL (λa j. (a ∨ (m'' = n2w j)) ∧ (a ∨ P j)) F (COUNT_LIST n) ∨
   ¬(1 < n) ∨ ¬(n ≤ dimindex (:α))) ∧
  (FOLDL (λa j. (a ∨ ((LOG2 (n − 1) -- 0) m'' = n2w j)) ∧ (a ∨ P j)) F
     (COUNT_LIST n) ∨
   ¬FOLDL (λa j. (a ∨ (m'' = n2w j)) ∧ (a ∨ P j)) F (COUNT_LIST n) ∨
   ¬(1 < n) ∨ ¬(n ≤ dimindex (:α))) ∧
  ((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m'' ≠ 0w ∨
   ¬FOLDL (λa j. (a ∨ ((LOG2 (n − 1) -- 0) m'' = n2w j)) ∧ (a ∨ P j)) F
      (COUNT_LIST n) ∨
   FOLDL (λa j. (a ∨ (m'' = n2w j)) ∧ (a ∨ P j)) F (COUNT_LIST n) ∨
   ¬(1 < n) ∨ ¬(n ≤ dimindex (:α))) ∧ m' ≤ m' ∧ dimindex (:α) ≠ 1 ∧
  1 < dimindex (:α) ∧ i < dimindex (:α) ∧
  (FOLDL (λa j. (a ∨ (m = n2w j)) ∧ (a ∨ j ≤ i) ∧ (a ∨ w ' (i − j))) F
     (COUNT_LIST (dimindex (:α))) ∨
   ((dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m = 0w)) ∧
  (FOLDL (λa j. (a ∨ (m = n2w j)) ∧ (a ∨ j ≤ i) ∧ (a ∨ w ' (i − j))) F
     (COUNT_LIST (dimindex (:α))) ∨
   FOLDL
     (λa j.
        (a ∨ ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j)) ∧
        (a ∨ j ≤ i) ∧ (a ∨ w ' (i − j))) F
     (COUNT_LIST (dimindex (:α)))) ∧
  (¬FOLDL (λa j. (a ∨ (m = n2w j)) ∧ (a ∨ j ≤ i) ∧ (a ∨ w ' (i − j))) F
      (COUNT_LIST (dimindex (:α))) ∨
   ¬FOLDL
      (λa j.
         (a ∨ ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j)) ∧
         (a ∨ j ≤ i) ∧ (a ∨ w ' (i − j))) F
      (COUNT_LIST (dimindex (:α))) ∨
   (dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m ≠ 0w)
Lambda: ∃f3.
  (∀a j.
     f3 a j ⇔
     (a ∨ ((LOG2 (dimindex (:α) − 1) -- 0) m = n2w j)) ∧ (a ∨ j ≤ i) ∧
     (a ∨ w ' (i − j))) ∧
  ∃f2.
    (∀a j.
       f2 a j ⇔ (a ∨ (m = n2w j)) ∧ (a ∨ j ≤ i) ∧ (a ∨ w ' (i − j))) ∧
    ∀m' P n m''.
      ∃f1.
        (∀a j. f1 a j ⇔ (a ∨ (m'' = n2w j)) ∧ (a ∨ P j)) ∧
        ∃f.
          (∀a j.
             f a j ⇔
             (a ∨ ((LOG2 (n − 1) -- 0) m'' = n2w j)) ∧ (a ∨ P j)) ∧
          (((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m'' = 0w) ∨
           ¬FOLDL f1 F (COUNT_LIST n) ∨ ¬(1 < n) ∨
           ¬(n ≤ dimindex (:α))) ∧
          (FOLDL f F (COUNT_LIST n) ∨ ¬FOLDL f1 F (COUNT_LIST n) ∨
           ¬(1 < n) ∨ ¬(n ≤ dimindex (:α))) ∧
          ((dimindex (:α) − 1 -- LOG2 (n − 1) + 1) m'' ≠ 0w ∨
           ¬FOLDL f F (COUNT_LIST n) ∨ FOLDL f1 F (COUNT_LIST n) ∨
           ¬(1 < n) ∨ ¬(n ≤ dimindex (:α))) ∧ m' ≤ m' ∧
          dimindex (:α) ≠ 1 ∧ 1 < dimindex (:α) ∧ i < dimindex (:α) ∧
          (FOLDL f2 F (COUNT_LIST (dimindex (:α))) ∨
           ((dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m =
            0w)) ∧
          (FOLDL f2 F (COUNT_LIST (dimindex (:α))) ∨
           FOLDL f3 F (COUNT_LIST (dimindex (:α)))) ∧
          (¬FOLDL f2 F (COUNT_LIST (dimindex (:α))) ∨
           ¬FOLDL f3 F (COUNT_LIST (dimindex (:α))) ∨
           (dimindex (:α) − 1 -- LOG2 (dimindex (:α) − 1) + 1) m ≠ 0w)User theorems: 
Goal: [P n ⇒ (n = i),FOLDL (λa j. a ∨ P j ∧ f j) F (COUNT_LIST n) ⇔ f i,i < n,∀i j. P i ∧ P j ∧ i < n ∧ j < n ⇒ (i = j),P i,i < SUC n,∀f P i.
  i < n ∧ P i ∧ (∀i j. P i ∧ P j ∧ i < n ∧ j < n ⇒ (i = j)) ⇒
  (FOLDL (λa j. a ∨ P j ∧ f j) F (COUNT_LIST n) ⇔ f i)] ?- f i ∨ P n ∧ f n ⇔ f i
CNF1: ∃i' j.
  ∀i'' j' f' P' i'''.
    (f' i''' ∨ ¬FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ i' f' P' i''' ≠ j f' P' i''') ∧
    (¬f' i''' ∨ FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ i' f' P' i''' ≠ j f' P' i''') ∧
    (f' i''' ∨ ¬FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ P' (i' f' P' i''')) ∧
    (¬f' i''' ∨ FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ P' (i' f' P' i''')) ∧
    (f' i''' ∨ ¬FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ P' (j f' P' i''')) ∧
    (¬f' i''' ∨ FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ P' (j f' P' i''')) ∧
    (f' i''' ∨ ¬FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ i' f' P' i''' < n) ∧
    (¬f' i''' ∨ FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ i' f' P' i''' < n) ∧
    (¬f' i''' ∨ FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ j f' P' i''' < n) ∧
    (f' i''' ∨ ¬FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ j f' P' i''' < n) ∧ i < SUC n ∧ P i ∧
    ((i'' = j') ∨ ¬P i'' ∨ ¬P j' ∨ ¬(i'' < n) ∨ ¬(j' < n)) ∧ i < n ∧
    (FOLDL (λa j. (a ∨ P j) ∧ (a ∨ f j)) F (COUNT_LIST n) ∨ ¬f i) ∧
    (¬FOLDL (λa j. (a ∨ P j) ∧ (a ∨ f j)) F (COUNT_LIST n) ∨ f i) ∧
    ((n = i) ∨ ¬P n) ∧ (f n ∨ f i) ∧ (P n ∨ f i) ∧ ¬f i ∧
    (¬f n ∨ ¬P n ∨ ¬f i)
Lambda: ∃f2.
  (∀a j. f2 a j ⇔ (a ∨ P j) ∧ (a ∨ f j)) ∧
  ∃i' j.
    ∀i'' j' f' P' i'''.
      ∃f1.
        (∀a j. f1 a j ⇔ (a ∨ P' j) ∧ (a ∨ f' j)) ∧
        (f' i''' ∨ ¬FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         i' f' P' i''' ≠ j f' P' i''') ∧
        (¬f' i''' ∨ FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         i' f' P' i''' ≠ j f' P' i''') ∧
        (f' i''' ∨ ¬FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         P' (i' f' P' i''')) ∧
        (¬f' i''' ∨ FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         P' (i' f' P' i''')) ∧
        (f' i''' ∨ ¬FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         P' (j f' P' i''')) ∧
        (¬f' i''' ∨ FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         P' (j f' P' i''')) ∧
        (f' i''' ∨ ¬FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         i' f' P' i''' < n) ∧
        (¬f' i''' ∨ FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         i' f' P' i''' < n) ∧
        (¬f' i''' ∨ FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         j f' P' i''' < n) ∧
        (f' i''' ∨ ¬FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         j f' P' i''' < n) ∧ i < SUC n ∧ P i ∧
        ((i'' = j') ∨ ¬P i'' ∨ ¬P j' ∨ ¬(i'' < n) ∨ ¬(j' < n)) ∧ i < n ∧
        (FOLDL f2 F (COUNT_LIST n) ∨ ¬f i) ∧
        (¬FOLDL f2 F (COUNT_LIST n) ∨ f i) ∧ ((n = i) ∨ ¬P n) ∧
        (f n ∨ f i) ∧ (P n ∨ f i) ∧ ¬f i ∧ (¬f n ∨ ¬P n ∨ ¬f i)User theorems: 
Goal: [i < n,∀i j. P i ∧ P j ∧ i < n ∧ j < n ⇒ (i = j),∀i j. P i ∧ P j ∧ i < SUC n ∧ j < SUC n ⇒ (i = j),P i,i < SUC n,∀f P i.
  i < n ∧ P i ∧ (∀i j. P i ∧ P j ∧ i < n ∧ j < n ⇒ (i = j)) ⇒
  (FOLDL (λa j. a ∨ P j ∧ f j) F (COUNT_LIST n) ⇔ f i)] ?- FOLDL (λa j. a ∨ P j ∧ f j) F (COUNT_LIST n) ⇔ f i
CNF1: ∃i' j.
  ∀i'' j' f' P' i'''.
    (f' i''' ∨ ¬FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ i' f' P' i''' ≠ j f' P' i''') ∧
    (¬f' i''' ∨ FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ i' f' P' i''' ≠ j f' P' i''') ∧
    (f' i''' ∨ ¬FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ P' (i' f' P' i''')) ∧
    (¬f' i''' ∨ FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ P' (i' f' P' i''')) ∧
    (f' i''' ∨ ¬FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ P' (j f' P' i''')) ∧
    (¬f' i''' ∨ FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ P' (j f' P' i''')) ∧
    (f' i''' ∨ ¬FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ i' f' P' i''' < n) ∧
    (¬f' i''' ∨ FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ i' f' P' i''' < n) ∧
    (¬f' i''' ∨ FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ j f' P' i''' < n) ∧
    (f' i''' ∨ ¬FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     ¬(i''' < n) ∨ ¬P' i''' ∨ j f' P' i''' < n) ∧ i < SUC n ∧ P i ∧
    ((i'' = j') ∨ ¬P i'' ∨ ¬P j' ∨ ¬(i'' < SUC n) ∨ ¬(j' < SUC n)) ∧
    ((i'' = j') ∨ ¬P i'' ∨ ¬P j' ∨ ¬(i'' < n) ∨ ¬(j' < n)) ∧ i < n ∧
    (FOLDL (λa j. (a ∨ P j) ∧ (a ∨ f j)) F (COUNT_LIST n) ∨ f i) ∧
    (¬FOLDL (λa j. (a ∨ P j) ∧ (a ∨ f j)) F (COUNT_LIST n) ∨ ¬f i)
Lambda: ∃f2.
  (∀a j. f2 a j ⇔ (a ∨ P j) ∧ (a ∨ f j)) ∧
  ∃i' j.
    ∀i'' j' f' P' i'''.
      ∃f1.
        (∀a j. f1 a j ⇔ (a ∨ P' j) ∧ (a ∨ f' j)) ∧
        (f' i''' ∨ ¬FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         i' f' P' i''' ≠ j f' P' i''') ∧
        (¬f' i''' ∨ FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         i' f' P' i''' ≠ j f' P' i''') ∧
        (f' i''' ∨ ¬FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         P' (i' f' P' i''')) ∧
        (¬f' i''' ∨ FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         P' (i' f' P' i''')) ∧
        (f' i''' ∨ ¬FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         P' (j f' P' i''')) ∧
        (¬f' i''' ∨ FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         P' (j f' P' i''')) ∧
        (f' i''' ∨ ¬FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         i' f' P' i''' < n) ∧
        (¬f' i''' ∨ FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         i' f' P' i''' < n) ∧
        (¬f' i''' ∨ FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         j f' P' i''' < n) ∧
        (f' i''' ∨ ¬FOLDL f1 F (COUNT_LIST n) ∨ ¬(i''' < n) ∨ ¬P' i''' ∨
         j f' P' i''' < n) ∧ i < SUC n ∧ P i ∧
        ((i'' = j') ∨ ¬P i'' ∨ ¬P j' ∨ ¬(i'' < SUC n) ∨ ¬(j' < SUC n)) ∧
        ((i'' = j') ∨ ¬P i'' ∨ ¬P j' ∨ ¬(i'' < n) ∨ ¬(j' < n)) ∧ i < n ∧
        (FOLDL f2 F (COUNT_LIST n) ∨ f i) ∧
        (¬FOLDL f2 F (COUNT_LIST n) ∨ ¬f i)User theorems: 
Goal: [∀j. j < n ⇒ ¬P j,∀j. j < SUC n ⇒ ¬P j,∀P f.
  (∀j. j < n ⇒ ¬P j) ⇒
  (FOLDL (λa j. a ∨ P j ∧ f j) F (COUNT_LIST n) ⇔ F)] ?- ¬FOLDL (λa j. a ∨ P j ∧ f j) F (COUNT_LIST n)
CNF1: ∃j.
  ∀j' P' f'.
    (¬FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     P' (j P' f')) ∧
    (¬FOLDL (λa j. (a ∨ P' j) ∧ (a ∨ f' j)) F (COUNT_LIST n) ∨
     j P' f' < n) ∧ (¬P j' ∨ ¬(j' < SUC n)) ∧ (¬P j' ∨ ¬(j' < n)) ∧
    FOLDL (λa j. (a ∨ P j) ∧ (a ∨ f j)) F (COUNT_LIST n)
Lambda: ∃f2.
  (∀a j. f2 a j ⇔ (a ∨ P j) ∧ (a ∨ f j)) ∧
  ∃j.
    ∀j' P' f'.
      ∃f1.
        (∀a j. f1 a j ⇔ (a ∨ P' j) ∧ (a ∨ f' j)) ∧
        (¬FOLDL f1 F (COUNT_LIST n) ∨ P' (j P' f')) ∧
        (¬FOLDL f1 F (COUNT_LIST n) ∨ j P' f' < n) ∧
        (¬P j' ∨ ¬(j' < SUC n)) ∧ (¬P j' ∨ ¬(j' < n)) ∧
        FOLDL f2 F (COUNT_LIST n)User theorems: 
Goal: [(n DIV 2 ** (dimindex (:α) − 1)) MOD 2 ≠ 1] ?- ¬(2 ** (dimindex (:α) − 1) ≤ n ∧ n < 2 ** dimindex (:α)) ⇒
¬(2 ** (dimindex (:α) − 1) ≤ n) ∨ ¬(n < 2 ** dimindex (:α))
CNF1: (n DIV 2 ** (dimindex (:α) − 1)) MOD 2 ≠ 1 ∧
(¬(2 ** (dimindex (:α) − 1) ≤ n) ∨ ¬(n < 2 ** dimindex (:α))) ∧
2 ** (dimindex (:α) − 1) ≤ n ∧ n < 2 ** dimindex (:α)
Numeral: (0 ≤ (n DIV 2 ** (dimindex (:α) − 1)) MOD 2 ∧
 0 ≤ n DIV 2 ** (dimindex (:α) − 1) ∧ 0 ≤ 2 ** (dimindex (:α) − 1) ∧
 0 ≤ dimindex (:α) − 1 ∧ 0 ≤ n ∧ 0 ≤ 2 ** dimindex (:α) ∧
 0 ≤ dimindex (:α)) ∧ (n DIV 2 ** (dimindex (:α) − 1)) MOD 2 ≠ 1 ∧
(¬(2 ** (dimindex (:α) − 1) ≤ n) ∨ ¬(n < 2 ** dimindex (:α))) ∧
2 ** (dimindex (:α) − 1) ≤ n ∧ n < 2 ** dimindex (:α)
CNF2: 0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ n ∧
0 ≤ dimindex (:α) − 1 ∧ 0 ≤ 2 ** (dimindex (:α) − 1) ∧
0 ≤ n DIV 2 ** (dimindex (:α) − 1) ∧
0 ≤ (n DIV 2 ** (dimindex (:α) − 1)) MOD 2 ∧
(n DIV 2 ** (dimindex (:α) − 1)) MOD 2 ≠ 1 ∧
(¬(2 ** (dimindex (:α) − 1) ≤ n) ∨ ¬(n < 2 ** dimindex (:α))) ∧
2 ** (dimindex (:α) − 1) ≤ n ∧ n < 2 ** dimindex (:α)
Status: Unsatisfiable

User theorems:  [] |- k ≠ 0 ⇒ (j % k % k = j % k)
 [] |- k ≠ 0 ⇒ ((i % k − j % k) % k = (i − j) % k)

Goal: [&(2 * INT_MIN (:α)) ≠ 0,n MOD (2 * INT_MIN (:α)) < 2 * INT_MIN (:α),n ≠ 0,i = -&n,i < 0,1 ≤ dimword (:α),1 ≤ INT_MIN (:α),0 < dimword (:α),dimword (:α) = 2 * INT_MIN (:α)] ?- (&(2 * INT_MIN (:α)) − &n) % &(2 * INT_MIN (:α)) =
(&(2 * INT_MIN (:α)) − &n % &(2 * INT_MIN (:α))) % &(2 * INT_MIN (:α))
CNF1: (((i % k − j % k) % k = (i − j) % k) ∨ (k = 0)) ∧
((j % k % k = j % k) ∨ (k = 0)) ∧ (dimword (:α) = 2 * INT_MIN (:α)) ∧
0 < dimword (:α) ∧ 1 ≤ INT_MIN (:α) ∧ 1 ≤ dimword (:α) ∧ i < 0 ∧
(i = -&n) ∧ n ≠ 0 ∧ n MOD (2 * INT_MIN (:α)) < 2 * INT_MIN (:α) ∧
&(2 * INT_MIN (:α)) ≠ 0 ∧
(&(2 * INT_MIN (:α)) − &n) % &(2 * INT_MIN (:α)) ≠
(&(2 * INT_MIN (:α)) − &n % &(2 * INT_MIN (:α))) % &(2 * INT_MIN (:α))
Numeral: (0 ≤ dimword (:α) ∧ 0 ≤ n MOD (2 * INT_MIN (:α)) ∧ 0 ≤ n ∧
 0 ≤ 2 * INT_MIN (:α) ∧ 0 ≤ INT_MIN (:α)) ∧
(((i % k − j % k) % k = (i − j) % k) ∨ (k = 0)) ∧
((j % k % k = j % k) ∨ (k = 0)) ∧ (dimword (:α) = 2 * INT_MIN (:α)) ∧
0 < dimword (:α) ∧ 1 ≤ INT_MIN (:α) ∧ 1 ≤ dimword (:α) ∧ i < 0 ∧
(i = -&n) ∧ n ≠ 0 ∧ n MOD (2 * INT_MIN (:α)) < 2 * INT_MIN (:α) ∧
&(2 * INT_MIN (:α)) ≠ 0 ∧
(&(2 * INT_MIN (:α)) − &n) % &(2 * INT_MIN (:α)) ≠
(&(2 * INT_MIN (:α)) − &n % &(2 * INT_MIN (:α))) % &(2 * INT_MIN (:α))
CNF2: 0 ≤ INT_MIN (:α) ∧ 0 ≤ 2 * INT_MIN (:α) ∧ 0 ≤ n ∧
0 ≤ n MOD (2 * INT_MIN (:α)) ∧ 0 ≤ dimword (:α) ∧
(((i % k − j % k) % k = (i − j) % k) ∨ (k = 0)) ∧
((j % k % k = j % k) ∨ (k = 0)) ∧ (dimword (:α) = 2 * INT_MIN (:α)) ∧
0 < dimword (:α) ∧ 1 ≤ INT_MIN (:α) ∧ 1 ≤ dimword (:α) ∧ i < 0 ∧
(i = -&n) ∧ n ≠ 0 ∧ n MOD (2 * INT_MIN (:α)) < 2 * INT_MIN (:α) ∧
&(2 * INT_MIN (:α)) ≠ 0 ∧
(&(2 * INT_MIN (:α)) − &n) % &(2 * INT_MIN (:α)) ≠
(&(2 * INT_MIN (:α)) − &n % &(2 * INT_MIN (:α))) % &(2 * INT_MIN (:α))
Status: Unknown

User theorems:  [] |- ∀i. INT_MIN (:α) ≤ i ∧ i < 0 ⇒ Num (-i) ≤ INT_MIN (:α)
 [] |- INT_MIN (:α) < dimword (:α)
 [] |- ∀m n p. m ≤ n ∧ n < p ⇒ m < p

Goal: [] ?- ∀i. INT_MIN (:α) ≤ i ∧ i < 0 ⇒ Num (-i) < dimword (:α)
CNF1: ∃i.
  ∀i' m n p.
    (m < p ∨ ¬(m ≤ n) ∨ ¬(n < p)) ∧ INT_MIN (:α) < dimword (:α) ∧
    (Num (-i') ≤ INT_MIN (:α) ∨ ¬(INT_MIN (:α) ≤ i') ∨ ¬(i' < 0)) ∧
    i < 0 ∧ INT_MIN (:α) ≤ i ∧ ¬(Num (-i) < dimword (:α))
Numeral: (0 ≤ INT_MIN (:α) ∧ 0 ≤ dimword (:α)) ∧
∃i.
  0 ≤ Num (-i) ∧
  ∀i' m n p.
    0 ≤ m ∧ 0 ≤ n ∧ 0 ≤ p ⇒
    0 ≤ Num (-i') ∧ (m < p ∨ ¬(m ≤ n) ∨ ¬(n < p)) ∧
    INT_MIN (:α) < dimword (:α) ∧
    (Num (-i') ≤ INT_MIN (:α) ∨ ¬(INT_MIN (:α) ≤ i') ∨ ¬(i' < 0)) ∧
    i < 0 ∧ INT_MIN (:α) ≤ i ∧ ¬(Num (-i) < dimword (:α))
CNF2: ∃i.
  ∀i' m n p.
    0 ≤ dimword (:α) ∧ 0 ≤ INT_MIN (:α) ∧ 0 ≤ Num (-i) ∧
    (0 ≤ Num (-i') ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (¬(n < p) ∨ ¬(m ≤ n) ∨ m < p ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (INT_MIN (:α) < dimword (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (¬(i' < 0) ∨ ¬(INT_MIN (:α) ≤ i') ∨ Num (-i') ≤ INT_MIN (:α) ∨
     ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (i < 0 ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (INT_MIN (:α) ≤ i ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (¬(Num (-i) < dimword (:α)) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p))
Status: Unsatisfiable

User theorems:  [] |- ∀a b. a ≤ b ⇒ 2 ** a ≤ 2 ** b

Goal: [Num (-i) ≤ 2 ** (dimindex (:α) − 1),dimindex (:α) ≤ dimindex (:β),i < 0,INT_MIN (:α) ≤ i] ?- 2 ** dimindex (:α) ≤ 2 ** dimindex (:β)
CNF1: ∀a b.
  (2 ** a ≤ 2 ** b ∨ ¬(a ≤ b)) ∧ INT_MIN (:α) ≤ i ∧ i < 0 ∧
  dimindex (:α) ≤ dimindex (:β) ∧ Num (-i) ≤ 2 ** (dimindex (:α) − 1) ∧
  ¬(2 ** dimindex (:α) ≤ 2 ** dimindex (:β))
Numeral: (0 ≤ Num (-i) ∧ 0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ dimindex (:α) − 1 ∧
 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:β) ∧
 0 ≤ dimindex (:β)) ∧
∀a b.
  0 ≤ a ∧ 0 ≤ b ⇒
  (0 ≤ 2 ** a ∧ 0 ≤ 2 ** b) ∧ (2 ** a ≤ 2 ** b ∨ ¬(a ≤ b)) ∧
  INT_MIN (:α) ≤ i ∧ i < 0 ∧ dimindex (:α) ≤ dimindex (:β) ∧
  Num (-i) ≤ 2 ** (dimindex (:α) − 1) ∧
  ¬(2 ** dimindex (:α) ≤ 2 ** dimindex (:β))
CNF2: ∀a b.
  0 ≤ dimindex (:β) ∧ 0 ≤ 2 ** dimindex (:β) ∧ 0 ≤ dimindex (:α) ∧
  0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧
  0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ Num (-i) ∧
  (0 ≤ 2 ** b ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (0 ≤ 2 ** a ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (¬(a ≤ b) ∨ 2 ** a ≤ 2 ** b ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (INT_MIN (:α) ≤ i ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (i < 0 ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (dimindex (:α) ≤ dimindex (:β) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (Num (-i) ≤ 2 ** (dimindex (:α) − 1) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (¬(2 ** dimindex (:α) ≤ 2 ** dimindex (:β)) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b))
Status: Unsatisfiable

User theorems:  [] |- 2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α)
 [] |- ∀m n p. m ≤ n ∧ n < p ⇒ m < p
 [] |- ∀m n p. m < n ∧ n ≤ p ⇒ m < p

Goal: [2 ** dimindex (:α) ≤ 2 ** dimindex (:β),Num (-i) ≤ 2 ** (dimindex (:α) − 1),dimindex (:α) ≤ dimindex (:β),i < 0,INT_MIN (:α) ≤ i] ?- Num (-i) < 2 ** dimindex (:α) ∧ Num (-i) < 2 ** dimindex (:β)
CNF1: ∀m n p.
  (m < p ∨ ¬(m < n) ∨ ¬(n ≤ p)) ∧ (m < p ∨ ¬(m ≤ n) ∨ ¬(n < p)) ∧
  2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α) ∧ INT_MIN (:α) ≤ i ∧
  i < 0 ∧ dimindex (:α) ≤ dimindex (:β) ∧
  Num (-i) ≤ 2 ** (dimindex (:α) − 1) ∧
  2 ** dimindex (:α) ≤ 2 ** dimindex (:β) ∧
  (¬(Num (-i) < 2 ** dimindex (:α)) ∨ ¬(Num (-i) < 2 ** dimindex (:β)))
Numeral: (0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ dimindex (:α) − 1 ∧
 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ Num (-i) ∧
 0 ≤ 2 ** dimindex (:β) ∧ 0 ≤ dimindex (:β)) ∧
∀m n p.
  0 ≤ m ∧ 0 ≤ n ∧ 0 ≤ p ⇒
  (m < p ∨ ¬(m < n) ∨ ¬(n ≤ p)) ∧ (m < p ∨ ¬(m ≤ n) ∨ ¬(n < p)) ∧
  2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α) ∧ INT_MIN (:α) ≤ i ∧
  i < 0 ∧ dimindex (:α) ≤ dimindex (:β) ∧
  Num (-i) ≤ 2 ** (dimindex (:α) − 1) ∧
  2 ** dimindex (:α) ≤ 2 ** dimindex (:β) ∧
  (¬(Num (-i) < 2 ** dimindex (:α)) ∨ ¬(Num (-i) < 2 ** dimindex (:β)))
CNF2: ∀m n p.
  0 ≤ dimindex (:β) ∧ 0 ≤ 2 ** dimindex (:β) ∧ 0 ≤ Num (-i) ∧
  0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧
  0 ≤ 2 ** (dimindex (:α) − 1) ∧
  (¬(n ≤ p) ∨ ¬(m < n) ∨ m < p ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (¬(n < p) ∨ ¬(m ≤ n) ∨ m < p ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨
   ¬(0 ≤ p)) ∧ (INT_MIN (:α) ≤ i ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (i < 0 ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (dimindex (:α) ≤ dimindex (:β) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (Num (-i) ≤ 2 ** (dimindex (:α) − 1) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨
   ¬(0 ≤ p)) ∧
  (2 ** dimindex (:α) ≤ 2 ** dimindex (:β) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨
   ¬(0 ≤ p)) ∧
  (¬(Num (-i) < 2 ** dimindex (:β)) ∨ ¬(Num (-i) < 2 ** dimindex (:α)) ∨
   ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p))
Status: Unknown

User theorems:  [] |- 0 < dimindex (:α)
 [] |- 0 < i ⇔ i ≠ 0

Goal: [dimindex (:β) = 0,¬(0 < i),¬(i < dimindex (:β)),i < dimindex (:α),dimindex (:β) ≤ dimindex (:α),j ≤ INT_MAX (:β),INT_MIN (:β) ≤ j,¬(j < 0)] ?- F
CNF1: (¬(0 < i) ∨ i ≠ 0) ∧ (0 < i ∨ (i = 0)) ∧ 0 < dimindex (:α) ∧
(dimindex (:β) = 0) ∧ ¬(0 < i) ∧ ¬(i < dimindex (:β)) ∧
i < dimindex (:α) ∧ dimindex (:β) ≤ dimindex (:α) ∧ j ≤ INT_MAX (:β) ∧
INT_MIN (:β) ≤ j ∧ ¬(j < 0)
Numeral: (0 ≤ i ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ dimindex (:α)) ∧ (¬(0 < i) ∨ i ≠ 0) ∧
(0 < i ∨ (i = 0)) ∧ 0 < dimindex (:α) ∧ (dimindex (:β) = 0) ∧ ¬(0 < i) ∧
¬(i < dimindex (:β)) ∧ i < dimindex (:α) ∧
dimindex (:β) ≤ dimindex (:α) ∧ j ≤ INT_MAX (:β) ∧ INT_MIN (:β) ≤ j ∧
¬(j < 0)
CNF2: 0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ i ∧ (¬(0 < i) ∨ i ≠ 0) ∧
(0 < i ∨ (i = 0)) ∧ 0 < dimindex (:α) ∧ (dimindex (:β) = 0) ∧ ¬(0 < i) ∧
¬(i < dimindex (:β)) ∧ i < dimindex (:α) ∧
dimindex (:β) ≤ dimindex (:α) ∧ j ≤ INT_MAX (:β) ∧ INT_MIN (:β) ≤ j ∧
¬(j < 0)
Status: Unknown

User theorems:  [] |- ∀m n p. m < n ∧ n < p ⇒ m < p

Goal: [2 ** (dimindex (:β) − 1) < 2 ** i,Num j < 2 ** (dimindex (:β) − 1),0 < i,dimindex (:β) ≤ i,i < dimindex (:α),dimindex (:β) ≤ dimindex (:α),j < &(2 ** (dimindex (:β) − 1)),INT_MIN (:β) ≤ j,0 ≤ j] ?- Num j < 2 ** i
CNF1: ∀m n p.
  (m < p ∨ ¬(m < n) ∨ ¬(n < p)) ∧ 0 ≤ j ∧ INT_MIN (:β) ≤ j ∧
  j < &(2 ** (dimindex (:β) − 1)) ∧ dimindex (:β) ≤ dimindex (:α) ∧
  i < dimindex (:α) ∧ dimindex (:β) ≤ i ∧ 0 < i ∧
  Num j < 2 ** (dimindex (:β) − 1) ∧ 2 ** (dimindex (:β) − 1) < 2 ** i ∧
  ¬(Num j < 2 ** i)
Numeral: (0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** (dimindex (:β) − 1) ∧
 0 ≤ dimindex (:β) − 1 ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ Num j ∧ 0 ≤ 2 ** i ∧
 0 ≤ i) ∧
∀m n p.
  0 ≤ m ∧ 0 ≤ n ∧ 0 ≤ p ⇒
  (m < p ∨ ¬(m < n) ∨ ¬(n < p)) ∧ 0 ≤ j ∧ INT_MIN (:β) ≤ j ∧
  j < &(2 ** (dimindex (:β) − 1)) ∧ dimindex (:β) ≤ dimindex (:α) ∧
  i < dimindex (:α) ∧ dimindex (:β) ≤ i ∧ 0 < i ∧
  Num j < 2 ** (dimindex (:β) − 1) ∧ 2 ** (dimindex (:β) − 1) < 2 ** i ∧
  ¬(Num j < 2 ** i)
CNF2: ∀m n p.
  0 ≤ i ∧ 0 ≤ 2 ** i ∧ 0 ≤ Num j ∧ 0 ≤ dimindex (:β) ∧
  0 ≤ dimindex (:β) − 1 ∧ 0 ≤ 2 ** (dimindex (:β) − 1) ∧
  0 ≤ dimindex (:α) ∧
  (¬(n < p) ∨ ¬(m < n) ∨ m < p ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (0 ≤ j ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (INT_MIN (:β) ≤ j ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (j < &(2 ** (dimindex (:β) − 1)) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (dimindex (:β) ≤ dimindex (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (i < dimindex (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (dimindex (:β) ≤ i ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (0 < i ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (Num j < 2 ** (dimindex (:β) − 1) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (2 ** (dimindex (:β) − 1) < 2 ** i ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
  (¬(Num j < 2 ** i) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p))
Status: Unknown

User theorems:  []
|- ∀i.
     INT_MIN (:α) ≤ i ∧ i < 0 ∧ dimindex (:α) ≤ dimindex (:β) ⇒
     ∃n.
       INT_MIN (:α) ≤ n ∧ n < dimword (:α) ∧ (-n2w (Num (-i)) = n2w n) ∧
       (-n2w (Num (-i)) =
        n2w (2 ** dimindex (:β) − 2 ** dimindex (:α) + n))

Goal: [i < dimindex (:α),dimindex (:β) ≤ dimindex (:α),j ≤ INT_MAX (:β),INT_MIN (:β) ≤ j,j < 0] ?- ∃n.
  INT_MIN (:β) ≤ n ∧ n < dimword (:β) ∧ (-n2w (Num (-j)) = n2w n) ∧
  (-n2w (Num (-j)) = n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n))
CNF1: ∃n.
  ∀i' n'.
    ((-n2w (Num (-i')) =
      n2w (2 ** dimindex (:β) − 2 ** dimindex (:α) + n i')) ∨
     ¬(INT_MIN (:α) ≤ i') ∨ ¬(i' < 0) ∨
     ¬(dimindex (:α) ≤ dimindex (:β))) ∧
    ((-n2w (Num (-i')) = n2w (n i')) ∨ ¬(INT_MIN (:α) ≤ i') ∨
     ¬(i' < 0) ∨ ¬(dimindex (:α) ≤ dimindex (:β))) ∧
    (n i' < dimword (:α) ∨ ¬(INT_MIN (:α) ≤ i') ∨ ¬(i' < 0) ∨
     ¬(dimindex (:α) ≤ dimindex (:β))) ∧
    (INT_MIN (:α) ≤ n i' ∨ ¬(INT_MIN (:α) ≤ i') ∨ ¬(i' < 0) ∨
     ¬(dimindex (:α) ≤ dimindex (:β))) ∧ j < 0 ∧ INT_MIN (:β) ≤ j ∧
    j ≤ INT_MAX (:β) ∧ dimindex (:β) ≤ dimindex (:α) ∧
    i < dimindex (:α) ∧
    (¬(INT_MIN (:β) ≤ n') ∨ ¬(n' < dimword (:β)) ∨
     -n2w (Num (-j)) ≠ n2w n' ∨
     -n2w (Num (-j)) ≠
     n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n'))
Numeral: (0 ≤ 2 ** dimindex (:β) − 2 ** dimindex (:α) ∧ 0 ≤ dimword (:α) ∧
 0 ≤ INT_MIN (:α) ∧ 0 ≤ i ∧ 0 ≤ INT_MIN (:β) ∧ 0 ≤ dimword (:β) ∧
 0 ≤ Num (-j) ∧ 0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) ∧
 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:β) ∧
 0 ≤ dimindex (:β)) ∧
∃n.
  ∀i' n'.
    0 ≤ n' ⇒
    (0 ≤ 2 ** dimindex (:β) − 2 ** dimindex (:α) + n i' ∧
     0 ≤ Num (-i') ∧ 0 ≤ n i' ∧
     0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) + n') ∧
    ((-n2w (Num (-i')) =
      n2w (2 ** dimindex (:β) − 2 ** dimindex (:α) + n i')) ∨
     ¬(INT_MIN (:α) ≤ i') ∨ ¬(i' < 0) ∨
     ¬(dimindex (:α) ≤ dimindex (:β))) ∧
    ((-n2w (Num (-i')) = n2w (n i')) ∨ ¬(INT_MIN (:α) ≤ i') ∨
     ¬(i' < 0) ∨ ¬(dimindex (:α) ≤ dimindex (:β))) ∧
    (n i' < dimword (:α) ∨ ¬(INT_MIN (:α) ≤ i') ∨ ¬(i' < 0) ∨
     ¬(dimindex (:α) ≤ dimindex (:β))) ∧
    (INT_MIN (:α) ≤ n i' ∨ ¬(INT_MIN (:α) ≤ i') ∨ ¬(i' < 0) ∨
     ¬(dimindex (:α) ≤ dimindex (:β))) ∧ j < 0 ∧ INT_MIN (:β) ≤ j ∧
    j ≤ INT_MAX (:β) ∧ dimindex (:β) ≤ dimindex (:α) ∧
    i < dimindex (:α) ∧
    (¬(INT_MIN (:β) ≤ n') ∨ ¬(n' < dimword (:β)) ∨
     -n2w (Num (-j)) ≠ n2w n' ∨
     -n2w (Num (-j)) ≠
     n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n'))
CNF2: ∃n.
  ∀i' n'.
    0 ≤ dimindex (:β) ∧ 0 ≤ 2 ** dimindex (:β) ∧ 0 ≤ dimindex (:α) ∧
    0 ≤ 2 ** dimindex (:α) ∧
    0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) ∧ 0 ≤ Num (-j) ∧
    0 ≤ dimword (:β) ∧ 0 ≤ INT_MIN (:β) ∧ 0 ≤ i ∧ 0 ≤ INT_MIN (:α) ∧
    0 ≤ dimword (:α) ∧ 0 ≤ 2 ** dimindex (:β) − 2 ** dimindex (:α) ∧
    (0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) + n' ∨ ¬(0 ≤ n')) ∧
    (0 ≤ n i' ∨ ¬(0 ≤ n')) ∧ (0 ≤ Num (-i') ∨ ¬(0 ≤ n')) ∧
    (0 ≤ 2 ** dimindex (:β) − 2 ** dimindex (:α) + n i' ∨ ¬(0 ≤ n')) ∧
    (¬(dimindex (:α) ≤ dimindex (:β)) ∨ ¬(i' < 0) ∨
     ¬(INT_MIN (:α) ≤ i') ∨
     (-n2w (Num (-i')) =
      n2w (2 ** dimindex (:β) − 2 ** dimindex (:α) + n i')) ∨
     ¬(0 ≤ n')) ∧
    (¬(dimindex (:α) ≤ dimindex (:β)) ∨ ¬(i' < 0) ∨
     ¬(INT_MIN (:α) ≤ i') ∨ (-n2w (Num (-i')) = n2w (n i')) ∨
     ¬(0 ≤ n')) ∧
    (¬(dimindex (:α) ≤ dimindex (:β)) ∨ ¬(i' < 0) ∨
     ¬(INT_MIN (:α) ≤ i') ∨ n i' < dimword (:α) ∨ ¬(0 ≤ n')) ∧
    (¬(dimindex (:α) ≤ dimindex (:β)) ∨ ¬(i' < 0) ∨
     ¬(INT_MIN (:α) ≤ i') ∨ INT_MIN (:α) ≤ n i' ∨ ¬(0 ≤ n')) ∧
    (j < 0 ∨ ¬(0 ≤ n')) ∧ (INT_MIN (:β) ≤ j ∨ ¬(0 ≤ n')) ∧
    (j ≤ INT_MAX (:β) ∨ ¬(0 ≤ n')) ∧
    (dimindex (:β) ≤ dimindex (:α) ∨ ¬(0 ≤ n')) ∧
    (i < dimindex (:α) ∨ ¬(0 ≤ n')) ∧
    (-n2w (Num (-j)) ≠
     n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n') ∨
     -n2w (Num (-j)) ≠ n2w n' ∨ ¬(n' < dimword (:β)) ∨
     ¬(INT_MIN (:β) ≤ n') ∨ ¬(0 ≤ n'))
Status: Unknown

User theorems:  [] |- ∀m n. n < m ⇒ ∃p. p + n = m

Goal: [dimindex (:β) ≤ i,-n2w (Num (-j)) = n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n),-n2w (Num (-j)) = n2w n,n < dimword (:β),INT_MIN (:β) ≤ n,i < dimindex (:α),dimindex (:β) ≤ dimindex (:α),j ≤ INT_MAX (:β),INT_MIN (:β) ≤ j,j < 0] ?- ∃k. dimindex (:α) = k + i
CNF1: ∃p.
  ∀k n'.
    ((p k n' + n' = k) ∨ ¬(n' < k)) ∧ j < 0 ∧ INT_MIN (:β) ≤ j ∧
    j ≤ INT_MAX (:β) ∧ dimindex (:β) ≤ dimindex (:α) ∧
    i < dimindex (:α) ∧ INT_MIN (:β) ≤ n ∧ n < dimword (:β) ∧
    (-n2w (Num (-j)) = n2w n) ∧
    (-n2w (Num (-j)) =
     n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n)) ∧
    dimindex (:β) ≤ i ∧ dimindex (:α) ≠ k + i
Numeral: (0 ≤ INT_MIN (:β) ∧ 0 ≤ dimword (:β) ∧ 0 ≤ Num (-j) ∧
 0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) + n ∧
 0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) ∧ 0 ≤ 2 ** dimindex (:α) ∧
 0 ≤ 2 ** dimindex (:β) ∧ 0 ≤ n ∧ 0 ≤ dimindex (:β) ∧
 0 ≤ dimindex (:α) ∧ 0 ≤ i) ∧
∃p.
  ∀k n'.
    0 ≤ n' ∧ 0 ≤ k ⇒
    (0 ≤ p k n' + n' ∧ 0 ≤ p k n' ∧ 0 ≤ k + i) ∧
    ((p k n' + n' = k) ∨ ¬(n' < k)) ∧ j < 0 ∧ INT_MIN (:β) ≤ j ∧
    j ≤ INT_MAX (:β) ∧ dimindex (:β) ≤ dimindex (:α) ∧
    i < dimindex (:α) ∧ INT_MIN (:β) ≤ n ∧ n < dimword (:β) ∧
    (-n2w (Num (-j)) = n2w n) ∧
    (-n2w (Num (-j)) =
     n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n)) ∧
    dimindex (:β) ≤ i ∧ dimindex (:α) ≠ k + i
CNF2: ∃p.
  ∀k n'.
    0 ≤ i ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ n ∧
    0 ≤ 2 ** dimindex (:β) ∧ 0 ≤ 2 ** dimindex (:α) ∧
    0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) ∧
    0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) + n ∧ 0 ≤ Num (-j) ∧
    0 ≤ dimword (:β) ∧ 0 ≤ INT_MIN (:β) ∧
    (0 ≤ k + i ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ p k n' ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ p k n' + n' ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (¬(n' < k) ∨ (p k n' + n' = k) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (j < 0 ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (INT_MIN (:β) ≤ j ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (j ≤ INT_MAX (:β) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (dimindex (:β) ≤ dimindex (:α) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (i < dimindex (:α) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (INT_MIN (:β) ≤ n ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (n < dimword (:β) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    ((-n2w (Num (-j)) = n2w n) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    ((-n2w (Num (-j)) =
      n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n)) ∨ ¬(0 ≤ n') ∨
     ¬(0 ≤ k)) ∧ (dimindex (:β) ≤ i ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (dimindex (:α) ≠ k + i ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k))
Status: Unsatisfiable

User theorems:  [] |- ∀a b. a < b ⇒ 2 ** a < 2 ** b
 [] |- ∀a b. a ≤ b ⇒ 2 ** a ≤ 2 ** b

Goal: [2 ** dimindex (:α) MOD 2 ** i = 0,dimindex (:β) ≤ i,-n2w (Num (-j)) = n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n),-n2w (Num (-j)) = n2w n,n < dimword (:β),INT_MIN (:β) ≤ n,i < dimindex (:α),dimindex (:β) ≤ dimindex (:α),j ≤ INT_MAX (:β),INT_MIN (:β) ≤ j,j < 0] ?- 2 ** i < 2 ** dimindex (:α) ∧ 2 ** dimindex (:β) ≤ 2 ** i
CNF1: ∀a b.
  (2 ** a ≤ 2 ** b ∨ ¬(a ≤ b)) ∧ (2 ** a < 2 ** b ∨ ¬(a < b)) ∧ j < 0 ∧
  INT_MIN (:β) ≤ j ∧ j ≤ INT_MAX (:β) ∧ dimindex (:β) ≤ dimindex (:α) ∧
  i < dimindex (:α) ∧ INT_MIN (:β) ≤ n ∧ n < dimword (:β) ∧
  (-n2w (Num (-j)) = n2w n) ∧
  (-n2w (Num (-j)) =
   n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n)) ∧
  dimindex (:β) ≤ i ∧ (2 ** dimindex (:α) MOD 2 ** i = 0) ∧
  (¬(2 ** i < 2 ** dimindex (:α)) ∨ ¬(2 ** dimindex (:β) ≤ 2 ** i))
Numeral: (0 ≤ INT_MIN (:β) ∧ 0 ≤ dimword (:β) ∧ 0 ≤ Num (-j) ∧
 0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) + n ∧
 0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) ∧ 0 ≤ n ∧
 0 ≤ 2 ** dimindex (:α) MOD 2 ** i ∧ 0 ≤ 2 ** dimindex (:α) ∧
 0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:β) ∧ 0 ≤ dimindex (:β) ∧
 0 ≤ 2 ** i ∧ 0 ≤ i) ∧
∀a b.
  0 ≤ a ∧ 0 ≤ b ⇒
  (0 ≤ 2 ** a ∧ 0 ≤ 2 ** b) ∧ (2 ** a ≤ 2 ** b ∨ ¬(a ≤ b)) ∧
  (2 ** a < 2 ** b ∨ ¬(a < b)) ∧ j < 0 ∧ INT_MIN (:β) ≤ j ∧
  j ≤ INT_MAX (:β) ∧ dimindex (:β) ≤ dimindex (:α) ∧ i < dimindex (:α) ∧
  INT_MIN (:β) ≤ n ∧ n < dimword (:β) ∧ (-n2w (Num (-j)) = n2w n) ∧
  (-n2w (Num (-j)) =
   n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n)) ∧
  dimindex (:β) ≤ i ∧ (2 ** dimindex (:α) MOD 2 ** i = 0) ∧
  (¬(2 ** i < 2 ** dimindex (:α)) ∨ ¬(2 ** dimindex (:β) ≤ 2 ** i))
CNF2: ∀a b.
  0 ≤ i ∧ 0 ≤ 2 ** i ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ 2 ** dimindex (:β) ∧
  0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) ∧
  0 ≤ 2 ** dimindex (:α) MOD 2 ** i ∧ 0 ≤ n ∧
  0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) ∧
  0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) + n ∧ 0 ≤ Num (-j) ∧
  0 ≤ dimword (:β) ∧ 0 ≤ INT_MIN (:β) ∧
  (0 ≤ 2 ** b ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (0 ≤ 2 ** a ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (¬(a ≤ b) ∨ 2 ** a ≤ 2 ** b ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (¬(a < b) ∨ 2 ** a < 2 ** b ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (j < 0 ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (INT_MIN (:β) ≤ j ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (j ≤ INT_MAX (:β) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (dimindex (:β) ≤ dimindex (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (i < dimindex (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (INT_MIN (:β) ≤ n ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (n < dimword (:β) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  ((-n2w (Num (-j)) = n2w n) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  ((-n2w (Num (-j)) =
    n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n)) ∨ ¬(0 ≤ a) ∨
   ¬(0 ≤ b)) ∧ (dimindex (:β) ≤ i ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  ((2 ** dimindex (:α) MOD 2 ** i = 0) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b)) ∧
  (¬(2 ** dimindex (:β) ≤ 2 ** i) ∨ ¬(2 ** i < 2 ** dimindex (:α)) ∨
   ¬(0 ≤ a) ∨ ¬(0 ≤ b))
Status: Unsatisfiable

User theorems:  [] |- dimword (:α) = 2 ** dimindex (:α)
 [] |- ∀a b. a ≤ b ⇒ 2 ** a ≤ 2 ** b
 [] |- b ≤ a ∧ c < b ⇒ a − b + c < a

Goal: [2 ** dimindex (:α) − 2 ** dimindex (:β) =
(2 ** (dimindex (:α) − i) − 1) * 2 ** i + (2 ** i − 2 ** dimindex (:β)),2 ** dimindex (:β) ≤ 2 ** i,2 ** i < 2 ** dimindex (:α),2 ** dimindex (:α) MOD 2 ** i = 0,dimindex (:β) ≤ i,-n2w (Num (-j)) = n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n),-n2w (Num (-j)) = n2w n,n < dimword (:β),INT_MIN (:β) ≤ n,i < dimindex (:α),dimindex (:β) ≤ dimindex (:α),j ≤ INT_MAX (:β),INT_MIN (:β) ≤ j,j < 0] ?- 2 ** i − 2 ** dimindex (:β) + n < 2 ** i
CNF1: ∀a' b'.
  (a − b + c < a ∨ ¬(b ≤ a) ∨ ¬(c < b)) ∧
  (2 ** a' ≤ 2 ** b' ∨ ¬(a' ≤ b')) ∧
  (dimword (:α) = 2 ** dimindex (:α)) ∧ j < 0 ∧ INT_MIN (:β) ≤ j ∧
  j ≤ INT_MAX (:β) ∧ dimindex (:β) ≤ dimindex (:α) ∧ i < dimindex (:α) ∧
  INT_MIN (:β) ≤ n ∧ n < dimword (:β) ∧ (-n2w (Num (-j)) = n2w n) ∧
  (-n2w (Num (-j)) =
   n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n)) ∧
  dimindex (:β) ≤ i ∧ (2 ** dimindex (:α) MOD 2 ** i = 0) ∧
  2 ** i < 2 ** dimindex (:α) ∧ 2 ** dimindex (:β) ≤ 2 ** i ∧
  (2 ** dimindex (:α) − 2 ** dimindex (:β) =
   (2 ** (dimindex (:α) − i) − 1) * 2 ** i +
   (2 ** i − 2 ** dimindex (:β))) ∧
  ¬(2 ** i − 2 ** dimindex (:β) + n < 2 ** i)
Numeral: (0 ≤ a − b + c ∧ 0 ≤ a − b ∧ 0 ≤ a ∧ 0 ≤ c ∧ 0 ≤ b ∧ 0 ≤ dimword (:α) ∧
 0 ≤ INT_MIN (:β) ∧ 0 ≤ dimword (:β) ∧ 0 ≤ Num (-j) ∧
 0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) + n ∧
 0 ≤ 2 ** dimindex (:α) MOD 2 ** i ∧
 0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) ∧ 0 ≤ 2 ** dimindex (:α) ∧
 0 ≤
 (2 ** (dimindex (:α) − i) − 1) * 2 ** i +
 (2 ** i − 2 ** dimindex (:β)) ∧
 0 ≤ (2 ** (dimindex (:α) − i) − 1) * 2 ** i ∧
 0 ≤ 2 ** (dimindex (:α) − i) − 1 ∧ 0 ≤ 2 ** (dimindex (:α) − i) ∧
 0 ≤ dimindex (:α) − i ∧ 0 ≤ dimindex (:α) ∧
 0 ≤ 2 ** i − 2 ** dimindex (:β) + n ∧ 0 ≤ 2 ** i − 2 ** dimindex (:β) ∧
 0 ≤ 2 ** dimindex (:β) ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ n ∧ 0 ≤ 2 ** i ∧
 0 ≤ i) ∧
∀a' b'.
  0 ≤ a' ∧ 0 ≤ b' ⇒
  (0 ≤ 2 ** a' ∧ 0 ≤ 2 ** b') ∧ (a − b + c < a ∨ ¬(b ≤ a) ∨ ¬(c < b)) ∧
  (2 ** a' ≤ 2 ** b' ∨ ¬(a' ≤ b')) ∧
  (dimword (:α) = 2 ** dimindex (:α)) ∧ j < 0 ∧ INT_MIN (:β) ≤ j ∧
  j ≤ INT_MAX (:β) ∧ dimindex (:β) ≤ dimindex (:α) ∧ i < dimindex (:α) ∧
  INT_MIN (:β) ≤ n ∧ n < dimword (:β) ∧ (-n2w (Num (-j)) = n2w n) ∧
  (-n2w (Num (-j)) =
   n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n)) ∧
  dimindex (:β) ≤ i ∧ (2 ** dimindex (:α) MOD 2 ** i = 0) ∧
  2 ** i < 2 ** dimindex (:α) ∧ 2 ** dimindex (:β) ≤ 2 ** i ∧
  (2 ** dimindex (:α) − 2 ** dimindex (:β) =
   (2 ** (dimindex (:α) − i) − 1) * 2 ** i +
   (2 ** i − 2 ** dimindex (:β))) ∧
  ¬(2 ** i − 2 ** dimindex (:β) + n < 2 ** i)
CNF2: ∀a' b'.
  0 ≤ i ∧ 0 ≤ 2 ** i ∧ 0 ≤ n ∧ 0 ≤ dimindex (:β) ∧
  0 ≤ 2 ** dimindex (:β) ∧ 0 ≤ 2 ** i − 2 ** dimindex (:β) ∧
  0 ≤ 2 ** i − 2 ** dimindex (:β) + n ∧ 0 ≤ dimindex (:α) ∧
  0 ≤ dimindex (:α) − i ∧ 0 ≤ 2 ** (dimindex (:α) − i) ∧
  0 ≤ 2 ** (dimindex (:α) − i) − 1 ∧
  0 ≤ (2 ** (dimindex (:α) − i) − 1) * 2 ** i ∧
  0 ≤
  (2 ** (dimindex (:α) − i) − 1) * 2 ** i +
  (2 ** i − 2 ** dimindex (:β)) ∧ 0 ≤ 2 ** dimindex (:α) ∧
  0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) ∧
  0 ≤ 2 ** dimindex (:α) MOD 2 ** i ∧
  0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) + n ∧ 0 ≤ Num (-j) ∧
  0 ≤ dimword (:β) ∧ 0 ≤ INT_MIN (:β) ∧ 0 ≤ dimword (:α) ∧ 0 ≤ b ∧
  0 ≤ c ∧ 0 ≤ a ∧ 0 ≤ a − b ∧ 0 ≤ a − b + c ∧
  (0 ≤ 2 ** b' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (0 ≤ 2 ** a' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (¬(c < b) ∨ ¬(b ≤ a) ∨ a − b + c < a ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (¬(a' ≤ b') ∨ 2 ** a' ≤ 2 ** b' ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((dimword (:α) = 2 ** dimindex (:α)) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (j < 0 ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (INT_MIN (:β) ≤ j ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (j ≤ INT_MAX (:β) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (dimindex (:β) ≤ dimindex (:α) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (i < dimindex (:α) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (INT_MIN (:β) ≤ n ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (n < dimword (:β) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((-n2w (Num (-j)) = n2w n) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((-n2w (Num (-j)) =
    n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n)) ∨ ¬(0 ≤ a') ∨
   ¬(0 ≤ b')) ∧ (dimindex (:β) ≤ i ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((2 ** dimindex (:α) MOD 2 ** i = 0) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (2 ** i < 2 ** dimindex (:α) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (2 ** dimindex (:β) ≤ 2 ** i ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  ((2 ** dimindex (:α) − 2 ** dimindex (:β) =
    (2 ** (dimindex (:α) − i) − 1) * 2 ** i +
    (2 ** i − 2 ** dimindex (:β))) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b')) ∧
  (¬(2 ** i − 2 ** dimindex (:β) + n < 2 ** i) ∨ ¬(0 ≤ a') ∨ ¬(0 ≤ b'))
Status: Time Out

User theorems:  [] |- 0 < dimindex (:α)
 [] |- 0 < n ⇒ n ≠ 0

Goal: [dimindex (:β) = 0,2 ** (0 − 1) + p < dimword (:β),i < dimindex (:α),0 ≤ dimindex (:α),j ≤ INT_MAX (:β),INT_MIN (:β) ≤ j,j < 0] ?- F
CNF1: (n ≠ 0 ∨ ¬(0 < n)) ∧ 0 < dimindex (:α) ∧ (dimindex (:β) = 0) ∧
2 ** (0 − 1) + p < dimword (:β) ∧ i < dimindex (:α) ∧
0 ≤ dimindex (:α) ∧ j ≤ INT_MAX (:β) ∧ INT_MIN (:β) ≤ j ∧ j < 0
Numeral: (0 ≤ n ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ 2 ** (0 − 1) + p ∧ 0 ≤ 2 ** (0 − 1) ∧
 0 ≤ 0 − 1 ∧ 0 ≤ p ∧ 0 ≤ dimword (:β) ∧ 0 ≤ i ∧ 0 ≤ dimindex (:α)) ∧
(n ≠ 0 ∨ ¬(0 < n)) ∧ 0 < dimindex (:α) ∧ (dimindex (:β) = 0) ∧
2 ** (0 − 1) + p < dimword (:β) ∧ i < dimindex (:α) ∧
0 ≤ dimindex (:α) ∧ j ≤ INT_MAX (:β) ∧ INT_MIN (:β) ≤ j ∧ j < 0
CNF2: 0 ≤ dimindex (:α) ∧ 0 ≤ i ∧ 0 ≤ dimword (:β) ∧ 0 ≤ p ∧ 0 ≤ 0 − 1 ∧
0 ≤ 2 ** (0 − 1) ∧ 0 ≤ 2 ** (0 − 1) + p ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ n ∧
(n ≠ 0 ∨ ¬(0 < n)) ∧ 0 < dimindex (:α) ∧ (dimindex (:β) = 0) ∧
2 ** (0 − 1) + p < dimword (:β) ∧ i < dimindex (:α) ∧
0 ≤ dimindex (:α) ∧ j ≤ INT_MAX (:β) ∧ INT_MIN (:β) ≤ j ∧ j < 0
Status: Unsatisfiable

User theorems:  [] |- ∀m n. n < m ⇒ ∃p. m = n + (p + 1)
 [] |- ∀m n. m + n = n + m
 [] |- ∀m n p. m + (n + p) = m + n + p
 [] |- ∀m. SUC m = m + 1

Goal: [i < dimindex (:β),-n2w (Num (-j)) = n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n),-n2w (Num (-j)) = n2w n,n < dimword (:β),INT_MIN (:β) ≤ n,i < dimindex (:α),dimindex (:β) ≤ dimindex (:α),j ≤ INT_MAX (:β),INT_MIN (:β) ≤ j,j < 0] ?- ∃k. dimindex (:α) = k + SUC i
CNF1: ∃p.
  ∀k n' p'.
    (SUC k = k + 1) ∧ (k + (n' + p') = k + n' + p') ∧
    (k + n' = n' + k) ∧ ((k = n' + (p k n' + 1)) ∨ ¬(n' < k)) ∧ j < 0 ∧
    INT_MIN (:β) ≤ j ∧ j ≤ INT_MAX (:β) ∧
    dimindex (:β) ≤ dimindex (:α) ∧ i < dimindex (:α) ∧
    INT_MIN (:β) ≤ n ∧ n < dimword (:β) ∧ (-n2w (Num (-j)) = n2w n) ∧
    (-n2w (Num (-j)) =
     n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n)) ∧
    i < dimindex (:β) ∧ dimindex (:α) ≠ k + SUC i
Numeral: (0 ≤ INT_MIN (:β) ∧ 0 ≤ dimword (:β) ∧ 0 ≤ Num (-j) ∧
 0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) + n ∧
 0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) ∧ 0 ≤ 2 ** dimindex (:α) ∧
 0 ≤ 2 ** dimindex (:β) ∧ 0 ≤ n ∧ 0 ≤ dimindex (:β) ∧
 0 ≤ dimindex (:α) ∧ 0 ≤ SUC i ∧ 0 ≤ i) ∧
∃p.
  ∀k n' p'.
    0 ≤ p' ∧ 0 ≤ n' ∧ 0 ≤ k ⇒
    (0 ≤ SUC k ∧ 0 ≤ k + 1 ∧ 0 ≤ k + (n' + p') ∧ 0 ≤ n' + p' ∧
     0 ≤ k + n' + p' ∧ 0 ≤ k + n' ∧ 0 ≤ n' + k ∧ 0 ≤ n' + (p k n' + 1) ∧
     0 ≤ p k n' + 1 ∧ 0 ≤ p k n' ∧ 0 ≤ k + SUC i) ∧ (SUC k = k + 1) ∧
    (k + (n' + p') = k + n' + p') ∧ (k + n' = n' + k) ∧
    ((k = n' + (p k n' + 1)) ∨ ¬(n' < k)) ∧ j < 0 ∧ INT_MIN (:β) ≤ j ∧
    j ≤ INT_MAX (:β) ∧ dimindex (:β) ≤ dimindex (:α) ∧
    i < dimindex (:α) ∧ INT_MIN (:β) ≤ n ∧ n < dimword (:β) ∧
    (-n2w (Num (-j)) = n2w n) ∧
    (-n2w (Num (-j)) =
     n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n)) ∧
    i < dimindex (:β) ∧ dimindex (:α) ≠ k + SUC i
CNF2: ∃p.
  ∀k n' p'.
    0 ≤ i ∧ 0 ≤ SUC i ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ n ∧
    0 ≤ 2 ** dimindex (:β) ∧ 0 ≤ 2 ** dimindex (:α) ∧
    0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) ∧
    0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) + n ∧ 0 ≤ Num (-j) ∧
    0 ≤ dimword (:β) ∧ 0 ≤ INT_MIN (:β) ∧
    (0 ≤ k + SUC i ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ p k n' ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ p k n' + 1 ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ n' + (p k n' + 1) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ n' + k ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ k + n' ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ k + n' + p' ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ n' + p' ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ k + (n' + p') ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ k + 1 ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ SUC k ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    ((SUC k = k + 1) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    ((k + (n' + p') = k + n' + p') ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    ((k + n' = n' + k) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (¬(n' < k) ∨ (k = n' + (p k n' + 1)) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨
     ¬(0 ≤ k)) ∧ (j < 0 ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (INT_MIN (:β) ≤ j ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (j ≤ INT_MAX (:β) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (dimindex (:β) ≤ dimindex (:α) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (i < dimindex (:α) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (INT_MIN (:β) ≤ n ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (n < dimword (:β) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    ((-n2w (Num (-j)) = n2w n) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    ((-n2w (Num (-j)) =
      n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n)) ∨ ¬(0 ≤ p') ∨
     ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (i < dimindex (:β) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (dimindex (:α) ≠ k + SUC i ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k))
Status: Unsatisfiable

User theorems:  [] |- ∀m n. n < m ⇒ ∃p. m = n + (p + 1)
 [] |- ∀m n. m + n = n + m
 [] |- ∀m n p. m + (n + p) = m + n + p
 [] |- ∀m. SUC m = m + 1

Goal: [2 ** dimindex (:α) MOD 2 ** SUC i = 0,i < dimindex (:β),-n2w (Num (-j)) = n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n),-n2w (Num (-j)) = n2w n,n < dimword (:β),INT_MIN (:β) ≤ n,i < dimindex (:α),dimindex (:β) ≤ dimindex (:α),j ≤ INT_MAX (:β),INT_MIN (:β) ≤ j,j < 0] ?- ∃k. dimindex (:β) = k + SUC i
CNF1: ∃p.
  ∀k n' p'.
    (SUC k = k + 1) ∧ (k + (n' + p') = k + n' + p') ∧
    (k + n' = n' + k) ∧ ((k = n' + (p k n' + 1)) ∨ ¬(n' < k)) ∧ j < 0 ∧
    INT_MIN (:β) ≤ j ∧ j ≤ INT_MAX (:β) ∧
    dimindex (:β) ≤ dimindex (:α) ∧ i < dimindex (:α) ∧
    INT_MIN (:β) ≤ n ∧ n < dimword (:β) ∧ (-n2w (Num (-j)) = n2w n) ∧
    (-n2w (Num (-j)) =
     n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n)) ∧
    i < dimindex (:β) ∧ (2 ** dimindex (:α) MOD 2 ** SUC i = 0) ∧
    dimindex (:β) ≠ k + SUC i
Numeral: (0 ≤ INT_MIN (:β) ∧ 0 ≤ dimword (:β) ∧ 0 ≤ Num (-j) ∧
 0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) + n ∧
 0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) ∧ 0 ≤ 2 ** dimindex (:β) ∧
 0 ≤ n ∧ 0 ≤ 2 ** dimindex (:α) MOD 2 ** SUC i ∧
 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** SUC i ∧
 0 ≤ dimindex (:β) ∧ 0 ≤ SUC i ∧ 0 ≤ i) ∧
∃p.
  ∀k n' p'.
    0 ≤ p' ∧ 0 ≤ n' ∧ 0 ≤ k ⇒
    (0 ≤ SUC k ∧ 0 ≤ k + 1 ∧ 0 ≤ k + (n' + p') ∧ 0 ≤ n' + p' ∧
     0 ≤ k + n' + p' ∧ 0 ≤ k + n' ∧ 0 ≤ n' + k ∧ 0 ≤ n' + (p k n' + 1) ∧
     0 ≤ p k n' + 1 ∧ 0 ≤ p k n' ∧ 0 ≤ k + SUC i) ∧ (SUC k = k + 1) ∧
    (k + (n' + p') = k + n' + p') ∧ (k + n' = n' + k) ∧
    ((k = n' + (p k n' + 1)) ∨ ¬(n' < k)) ∧ j < 0 ∧ INT_MIN (:β) ≤ j ∧
    j ≤ INT_MAX (:β) ∧ dimindex (:β) ≤ dimindex (:α) ∧
    i < dimindex (:α) ∧ INT_MIN (:β) ≤ n ∧ n < dimword (:β) ∧
    (-n2w (Num (-j)) = n2w n) ∧
    (-n2w (Num (-j)) =
     n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n)) ∧
    i < dimindex (:β) ∧ (2 ** dimindex (:α) MOD 2 ** SUC i = 0) ∧
    dimindex (:β) ≠ k + SUC i
CNF2: ∃p.
  ∀k n' p'.
    0 ≤ i ∧ 0 ≤ SUC i ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ 2 ** SUC i ∧
    0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) ∧
    0 ≤ 2 ** dimindex (:α) MOD 2 ** SUC i ∧ 0 ≤ n ∧
    0 ≤ 2 ** dimindex (:β) ∧
    0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) ∧
    0 ≤ 2 ** dimindex (:α) − 2 ** dimindex (:β) + n ∧ 0 ≤ Num (-j) ∧
    0 ≤ dimword (:β) ∧ 0 ≤ INT_MIN (:β) ∧
    (0 ≤ k + SUC i ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ p k n' ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ p k n' + 1 ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ n' + (p k n' + 1) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ n' + k ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ k + n' ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ k + n' + p' ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ n' + p' ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ k + (n' + p') ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ k + 1 ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (0 ≤ SUC k ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    ((SUC k = k + 1) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    ((k + (n' + p') = k + n' + p') ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    ((k + n' = n' + k) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (¬(n' < k) ∨ (k = n' + (p k n' + 1)) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨
     ¬(0 ≤ k)) ∧ (j < 0 ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (INT_MIN (:β) ≤ j ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (j ≤ INT_MAX (:β) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (dimindex (:β) ≤ dimindex (:α) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (i < dimindex (:α) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (INT_MIN (:β) ≤ n ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (n < dimword (:β) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    ((-n2w (Num (-j)) = n2w n) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    ((-n2w (Num (-j)) =
      n2w (2 ** dimindex (:α) − 2 ** dimindex (:β) + n)) ∨ ¬(0 ≤ p') ∨
     ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    (i < dimindex (:β) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k)) ∧
    ((2 ** dimindex (:α) MOD 2 ** SUC i = 0) ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨
     ¬(0 ≤ k)) ∧
    (dimindex (:β) ≠ k + SUC i ∨ ¬(0 ≤ p') ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ k))
Status: Unsatisfiable

User theorems:  [] |- 0 < n ⇒ n − 1 < n
 [] |- 0 < dimindex (:α)

Goal: [¬b ' (dimindex (:α) − 1),a ' (dimindex (:α) − 1)] ?- ∃i. i < dimindex (:α) ∧ a ' i
CNF1: ∀i.
  0 < dimindex (:α) ∧ (n − 1 < n ∨ ¬(0 < n)) ∧ a ' (dimindex (:α) − 1) ∧
  ¬b ' (dimindex (:α) − 1) ∧ (¬(i < dimindex (:α)) ∨ ¬a ' i)
Numeral: (0 ≤ n − 1 ∧ 0 ≤ n ∧ 0 ≤ dimindex (:α) − 1 ∧ 0 ≤ dimindex (:α)) ∧
∀i.
  0 ≤ i ⇒
  0 < dimindex (:α) ∧ (n − 1 < n ∨ ¬(0 < n)) ∧ a ' (dimindex (:α) − 1) ∧
  ¬b ' (dimindex (:α) − 1) ∧ (¬(i < dimindex (:α)) ∨ ¬a ' i)
CNF2: ∀i.
  0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧ 0 ≤ n ∧ 0 ≤ n − 1 ∧
  (0 < dimindex (:α) ∨ ¬(0 ≤ i)) ∧ (¬(0 < n) ∨ n − 1 < n ∨ ¬(0 ≤ i)) ∧
  (a ' (dimindex (:α) − 1) ∨ ¬(0 ≤ i)) ∧
  (¬b ' (dimindex (:α) − 1) ∨ ¬(0 ≤ i)) ∧
  (¬a ' i ∨ ¬(i < dimindex (:α)) ∨ ¬(0 ≤ i))
Status: Unsatisfiable

User theorems:  [] |- 0 < n ⇒ n − 1 < n
 [] |- 0 < dimindex (:α)

Goal: [BIT (dimindex (:α)) (w2n a + w2n (-b)),b ' (dimindex (:α) − 1),a ' (dimindex (:α) − 1)] ?- ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∧
(∃i. i < dimindex (:α) ∧ b ' i) ⇔
¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∧
∃i. i < dimindex (:α) ∧ a ' i
CNF1: ∃i.
  ∀i' i''.
    0 < dimindex (:α) ∧ (n − 1 < n ∨ ¬(0 < n)) ∧
    a ' (dimindex (:α) − 1) ∧ b ' (dimindex (:α) − 1) ∧
    BIT (dimindex (:α)) (w2n a + w2n (-b)) ∧ (b ' i ∨ a ' i) ∧
    (i < dimindex (:α) ∨ a ' i) ∧
    (¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ a ' i) ∧
    (¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ i < dimindex (:α)) ∧
    i < dimindex (:α) ∧ (b ' i ∨ i < dimindex (:α)) ∧
    ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∧
    (i < dimindex (:α) ∨ ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b))) ∧
    (b ' i ∨ ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b))) ∧
    (¬b ' i' ∨ ¬(i' < dimindex (:α)) ∨
     BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨
     ¬(i'' < dimindex (:α)) ∨ ¬a ' i'')
Numeral: (0 ≤ n − 1 ∧ 0 ≤ n ∧ 0 ≤ dimindex (:α) − 1 ∧ 0 ≤ w2n a + w2n (-b) ∧
 0 ≤ w2n (-b) ∧ 0 ≤ w2n a + w2n (-1w * b) ∧ 0 ≤ w2n a ∧
 0 ≤ w2n (-1w * b) ∧ 0 ≤ dimindex (:α)) ∧
∃i.
  0 ≤ i ∧
  ∀i' i''.
    0 ≤ i' ∧ 0 ≤ i'' ⇒
    0 < dimindex (:α) ∧ (n − 1 < n ∨ ¬(0 < n)) ∧
    a ' (dimindex (:α) − 1) ∧ b ' (dimindex (:α) − 1) ∧
    BIT (dimindex (:α)) (w2n a + w2n (-b)) ∧ (b ' i ∨ a ' i) ∧
    (i < dimindex (:α) ∨ a ' i) ∧
    (¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ a ' i) ∧
    (¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ i < dimindex (:α)) ∧
    i < dimindex (:α) ∧ (b ' i ∨ i < dimindex (:α)) ∧
    ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∧
    (i < dimindex (:α) ∨ ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b))) ∧
    (b ' i ∨ ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b))) ∧
    (¬b ' i' ∨ ¬(i' < dimindex (:α)) ∨
     BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨
     ¬(i'' < dimindex (:α)) ∨ ¬a ' i'')
CNF2: ∃i.
  ∀i' i''.
    0 ≤ dimindex (:α) ∧ 0 ≤ w2n (-1w * b) ∧ 0 ≤ w2n a ∧
    0 ≤ w2n a + w2n (-1w * b) ∧ 0 ≤ w2n (-b) ∧ 0 ≤ w2n a + w2n (-b) ∧
    0 ≤ dimindex (:α) − 1 ∧ 0 ≤ n ∧ 0 ≤ n − 1 ∧ 0 ≤ i ∧
    (0 < dimindex (:α) ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (¬(0 < n) ∨ n − 1 < n ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (a ' (dimindex (:α) − 1) ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (b ' (dimindex (:α) − 1) ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (BIT (dimindex (:α)) (w2n a + w2n (-b)) ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (a ' i ∨ b ' i ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (a ' i ∨ i < dimindex (:α) ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (a ' i ∨ ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ ¬(0 ≤ i') ∨
     ¬(0 ≤ i'')) ∧
    (i < dimindex (:α) ∨ ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨
     ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (i < dimindex (:α) ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (i < dimindex (:α) ∨ b ' i ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ ¬(0 ≤ i') ∨
     ¬(0 ≤ i'')) ∧
    (¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ i < dimindex (:α) ∨
     ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ b ' i ∨ ¬(0 ≤ i') ∨
     ¬(0 ≤ i'')) ∧
    (¬a ' i'' ∨ ¬(i'' < dimindex (:α)) ∨
     BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨
     ¬(i' < dimindex (:α)) ∨ ¬b ' i' ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i''))
Status: Unsatisfiable

User theorems:  [] |- 0 < n ⇒ n − 1 < n
 [] |- 0 < dimindex (:α)

Goal: [¬BIT (dimindex (:α)) (w2n a + w2n (-b)),b ' (dimindex (:α) − 1),a ' (dimindex (:α) − 1)] ?- ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∧
(∃i. i < dimindex (:α) ∧ b ' i) ⇔
¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∧
∃i. i < dimindex (:α) ∧ a ' i
CNF1: ∃i.
  ∀i' i''.
    0 < dimindex (:α) ∧ (n − 1 < n ∨ ¬(0 < n)) ∧
    a ' (dimindex (:α) − 1) ∧ b ' (dimindex (:α) − 1) ∧
    ¬BIT (dimindex (:α)) (w2n a + w2n (-b)) ∧ (b ' i ∨ a ' i) ∧
    (i < dimindex (:α) ∨ a ' i) ∧
    (¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ a ' i) ∧
    (¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ i < dimindex (:α)) ∧
    i < dimindex (:α) ∧ (b ' i ∨ i < dimindex (:α)) ∧
    ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∧
    (i < dimindex (:α) ∨ ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b))) ∧
    (b ' i ∨ ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b))) ∧
    (¬b ' i' ∨ ¬(i' < dimindex (:α)) ∨
     BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨
     ¬(i'' < dimindex (:α)) ∨ ¬a ' i'')
Numeral: (0 ≤ n − 1 ∧ 0 ≤ n ∧ 0 ≤ dimindex (:α) − 1 ∧ 0 ≤ w2n a + w2n (-b) ∧
 0 ≤ w2n (-b) ∧ 0 ≤ w2n a + w2n (-1w * b) ∧ 0 ≤ w2n a ∧
 0 ≤ w2n (-1w * b) ∧ 0 ≤ dimindex (:α)) ∧
∃i.
  0 ≤ i ∧
  ∀i' i''.
    0 ≤ i' ∧ 0 ≤ i'' ⇒
    0 < dimindex (:α) ∧ (n − 1 < n ∨ ¬(0 < n)) ∧
    a ' (dimindex (:α) − 1) ∧ b ' (dimindex (:α) − 1) ∧
    ¬BIT (dimindex (:α)) (w2n a + w2n (-b)) ∧ (b ' i ∨ a ' i) ∧
    (i < dimindex (:α) ∨ a ' i) ∧
    (¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ a ' i) ∧
    (¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ i < dimindex (:α)) ∧
    i < dimindex (:α) ∧ (b ' i ∨ i < dimindex (:α)) ∧
    ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∧
    (i < dimindex (:α) ∨ ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b))) ∧
    (b ' i ∨ ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b))) ∧
    (¬b ' i' ∨ ¬(i' < dimindex (:α)) ∨
     BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨
     ¬(i'' < dimindex (:α)) ∨ ¬a ' i'')
CNF2: ∃i.
  ∀i' i''.
    0 ≤ dimindex (:α) ∧ 0 ≤ w2n (-1w * b) ∧ 0 ≤ w2n a ∧
    0 ≤ w2n a + w2n (-1w * b) ∧ 0 ≤ w2n (-b) ∧ 0 ≤ w2n a + w2n (-b) ∧
    0 ≤ dimindex (:α) − 1 ∧ 0 ≤ n ∧ 0 ≤ n − 1 ∧ 0 ≤ i ∧
    (0 < dimindex (:α) ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (¬(0 < n) ∨ n − 1 < n ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (a ' (dimindex (:α) − 1) ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (b ' (dimindex (:α) − 1) ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (¬BIT (dimindex (:α)) (w2n a + w2n (-b)) ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (a ' i ∨ b ' i ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (a ' i ∨ i < dimindex (:α) ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (a ' i ∨ ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ ¬(0 ≤ i') ∨
     ¬(0 ≤ i'')) ∧
    (i < dimindex (:α) ∨ ¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨
     ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (i < dimindex (:α) ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (i < dimindex (:α) ∨ b ' i ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ ¬(0 ≤ i') ∨
     ¬(0 ≤ i'')) ∧
    (¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ i < dimindex (:α) ∨
     ¬(0 ≤ i') ∨ ¬(0 ≤ i'')) ∧
    (¬BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨ b ' i ∨ ¬(0 ≤ i') ∨
     ¬(0 ≤ i'')) ∧
    (¬a ' i'' ∨ ¬(i'' < dimindex (:α)) ∨
     BIT (dimindex (:α)) (w2n a + w2n (-1w * b)) ∨
     ¬(i' < dimindex (:α)) ∨ ¬b ' i' ∨ ¬(0 ≤ i') ∨ ¬(0 ≤ i''))
Status: Unsatisfiable

User theorems:  [] |- ∀i. INT_MIN (:α) ≤ i ∧ i < 0 ⇒ Num (-i) ≤ INT_MIN (:α)
 [] |- INT_MIN (:α) < dimword (:α)
 [] |- ∀m n p. m ≤ n ∧ n < p ⇒ m < p

Goal: [] ?- ∀i. INT_MIN (:α) ≤ i ∧ i < 0 ⇒ Num (-i) < dimword (:α)
CNF1: ∃i.
  ∀i' m n p.
    (m < p ∨ ¬(m ≤ n) ∨ ¬(n < p)) ∧ INT_MIN (:α) < dimword (:α) ∧
    (Num (-i') ≤ INT_MIN (:α) ∨ ¬(INT_MIN (:α) ≤ i') ∨ ¬(i' < 0)) ∧
    i < 0 ∧ INT_MIN (:α) ≤ i ∧ ¬(Num (-i) < dimword (:α))
Numeral: (0 ≤ INT_MIN (:α) ∧ 0 ≤ dimword (:α)) ∧
∃i.
  0 ≤ Num (-i) ∧
  ∀i' m n p.
    0 ≤ m ∧ 0 ≤ n ∧ 0 ≤ p ⇒
    0 ≤ Num (-i') ∧ (m < p ∨ ¬(m ≤ n) ∨ ¬(n < p)) ∧
    INT_MIN (:α) < dimword (:α) ∧
    (Num (-i') ≤ INT_MIN (:α) ∨ ¬(INT_MIN (:α) ≤ i') ∨ ¬(i' < 0)) ∧
    i < 0 ∧ INT_MIN (:α) ≤ i ∧ ¬(Num (-i) < dimword (:α))
CNF2: ∃i.
  ∀i' m n p.
    0 ≤ dimword (:α) ∧ 0 ≤ INT_MIN (:α) ∧ 0 ≤ Num (-i) ∧
    (0 ≤ Num (-i') ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (¬(n < p) ∨ ¬(m ≤ n) ∨ m < p ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (INT_MIN (:α) < dimword (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (¬(i' < 0) ∨ ¬(INT_MIN (:α) ≤ i') ∨ Num (-i') ≤ INT_MIN (:α) ∨
     ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (i < 0 ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (INT_MIN (:α) ≤ i ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p)) ∧
    (¬(Num (-i) < dimword (:α)) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n) ∨ ¬(0 ≤ p))
Status: Unsatisfiable

User theorems:  [] |- ∀a b. a < b ⇒ 2 ** a < 2 ** b
 [] |- ∀m n p. m < n ∧ n < p ⇒ m < p

Goal: [dimindex (:α) − 1 < i' + n,Num i < 2 ** (dimindex (:α) − 1),dimindex (:α) ≤ i' + n,i' < dimindex (:α),i < &(2 ** (dimindex (:α) − 1)),INT_MIN (:α) ≤ i,n < dimindex (:α),0 ≤ i] ?- Num i < 2 ** (i' + n)
CNF1: ∀m n' p.
  (m < p ∨ ¬(m < n') ∨ ¬(n' < p)) ∧ (2 ** m < 2 ** n' ∨ ¬(m < n')) ∧
  0 ≤ i ∧ n < dimindex (:α) ∧ INT_MIN (:α) ≤ i ∧
  i < &(2 ** (dimindex (:α) − 1)) ∧ i' < dimindex (:α) ∧
  dimindex (:α) ≤ i' + n ∧ Num i < 2 ** (dimindex (:α) − 1) ∧
  dimindex (:α) − 1 < i' + n ∧ ¬(Num i < 2 ** (i' + n))
Numeral: (0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ dimindex (:α) − 1 ∧
 0 ≤ dimindex (:α) ∧ 0 ≤ Num i ∧ 0 ≤ 2 ** (i' + n) ∧ 0 ≤ i' + n ∧
 0 ≤ i' ∧ 0 ≤ n) ∧
∀m n' p.
  0 ≤ p ∧ 0 ≤ m ∧ 0 ≤ n' ⇒
  (0 ≤ 2 ** m ∧ 0 ≤ 2 ** n') ∧ (m < p ∨ ¬(m < n') ∨ ¬(n' < p)) ∧
  (2 ** m < 2 ** n' ∨ ¬(m < n')) ∧ 0 ≤ i ∧ n < dimindex (:α) ∧
  INT_MIN (:α) ≤ i ∧ i < &(2 ** (dimindex (:α) − 1)) ∧
  i' < dimindex (:α) ∧ dimindex (:α) ≤ i' + n ∧
  Num i < 2 ** (dimindex (:α) − 1) ∧ dimindex (:α) − 1 < i' + n ∧
  ¬(Num i < 2 ** (i' + n))
CNF2: ∀m n' p.
  0 ≤ n ∧ 0 ≤ i' ∧ 0 ≤ i' + n ∧ 0 ≤ 2 ** (i' + n) ∧ 0 ≤ Num i ∧
  0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:α) − 1 ∧
  0 ≤ 2 ** (dimindex (:α) − 1) ∧
  (0 ≤ 2 ** n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ 2 ** m ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (¬(n' < p) ∨ ¬(m < n') ∨ m < p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (¬(m < n') ∨ 2 ** m < 2 ** n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ i ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (n < dimindex (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (INT_MIN (:α) ≤ i ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (i < &(2 ** (dimindex (:α) − 1)) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (i' < dimindex (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (dimindex (:α) ≤ i' + n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (Num i < 2 ** (dimindex (:α) − 1) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (dimindex (:α) − 1 < i' + n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (¬(Num i < 2 ** (i' + n)) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems:  [] |- ∀a b. a ≤ b ⇒ 2 ** a ≤ 2 ** b
 [] |- ∀m n p. m < n ∧ n ≤ p ⇒ m < p

Goal: [Num (-i) MOD 2 ** n ≠ 0,Num (-i) ≠ 0,dimindex (:α) ≤ i' + n,Num (-i) < 2 ** dimindex (:α),i' < dimindex (:α),i ≤ INT_MAX (:α),INT_MIN (:α) ≤ i,n < dimindex (:α),i < 0] ?- Num (-i) < 2 ** (i' + n)
CNF1: ∀m n' p.
  (m < p ∨ ¬(m < n') ∨ ¬(n' ≤ p)) ∧ (2 ** m ≤ 2 ** n' ∨ ¬(m ≤ n')) ∧
  i < 0 ∧ n < dimindex (:α) ∧ INT_MIN (:α) ≤ i ∧ i ≤ INT_MAX (:α) ∧
  i' < dimindex (:α) ∧ Num (-i) < 2 ** dimindex (:α) ∧
  dimindex (:α) ≤ i' + n ∧ Num (-i) ≠ 0 ∧ Num (-i) MOD 2 ** n ≠ 0 ∧
  ¬(Num (-i) < 2 ** (i' + n))
Numeral: (0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ Num (-i) MOD 2 ** n ∧
 0 ≤ 2 ** n ∧ 0 ≤ Num (-i) ∧ 0 ≤ 2 ** (i' + n) ∧ 0 ≤ i' + n ∧ 0 ≤ i' ∧
 0 ≤ n) ∧
∀m n' p.
  0 ≤ p ∧ 0 ≤ m ∧ 0 ≤ n' ⇒
  (0 ≤ 2 ** m ∧ 0 ≤ 2 ** n') ∧ (m < p ∨ ¬(m < n') ∨ ¬(n' ≤ p)) ∧
  (2 ** m ≤ 2 ** n' ∨ ¬(m ≤ n')) ∧ i < 0 ∧ n < dimindex (:α) ∧
  INT_MIN (:α) ≤ i ∧ i ≤ INT_MAX (:α) ∧ i' < dimindex (:α) ∧
  Num (-i) < 2 ** dimindex (:α) ∧ dimindex (:α) ≤ i' + n ∧
  Num (-i) ≠ 0 ∧ Num (-i) MOD 2 ** n ≠ 0 ∧ ¬(Num (-i) < 2 ** (i' + n))
CNF2: ∀m n' p.
  0 ≤ n ∧ 0 ≤ i' ∧ 0 ≤ i' + n ∧ 0 ≤ 2 ** (i' + n) ∧ 0 ≤ Num (-i) ∧
  0 ≤ 2 ** n ∧ 0 ≤ Num (-i) MOD 2 ** n ∧ 0 ≤ dimindex (:α) ∧
  0 ≤ 2 ** dimindex (:α) ∧
  (0 ≤ 2 ** n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ 2 ** m ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (¬(n' ≤ p) ∨ ¬(m < n') ∨ m < p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (¬(m ≤ n') ∨ 2 ** m ≤ 2 ** n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (i < 0 ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (n < dimindex (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (INT_MIN (:α) ≤ i ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (i ≤ INT_MAX (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (i' < dimindex (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (Num (-i) < 2 ** dimindex (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (dimindex (:α) ≤ i' + n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (Num (-i) ≠ 0 ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (Num (-i) MOD 2 ** n ≠ 0 ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (¬(Num (-i) < 2 ** (i' + n)) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems:  [] |- ∀m n p. m ≤ n ∧ n ≤ p ⇒ m ≤ p
 [] |- ∀m n p. m ≤ n ∧ n < p ⇒ m < p
 [] |- 2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α)
 [] |- ∀a b. a < b ⇒ 2 ** a < 2 ** b

Goal: [Num (-i) DIV 2 ** n + 1 ≤ Num (-i),Num (-i) DIV 2 ** n < Num (-i),1 < 2 ** n,Num (-i) < 2 ** (i' + n),Num (-i) MOD 2 ** n ≠ 0,Num (-i) ≠ 0,dimindex (:α) ≤ i' + n,Num (-i) < 2 ** dimindex (:α),i' < dimindex (:α),i ≤ INT_MAX (:α),INT_MIN (:α) ≤ i,n < dimindex (:α),i < 0] ?- Num (-i) DIV 2 ** n + 1 < 2 ** dimindex (:α)
CNF1: ∀a b p.
  (2 ** a < 2 ** b ∨ ¬(a < b)) ∧
  2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α) ∧
  (a < p ∨ ¬(a ≤ b) ∨ ¬(b < p)) ∧ (a ≤ p ∨ ¬(a ≤ b) ∨ ¬(b ≤ p)) ∧
  i < 0 ∧ n < dimindex (:α) ∧ INT_MIN (:α) ≤ i ∧ i ≤ INT_MAX (:α) ∧
  i' < dimindex (:α) ∧ Num (-i) < 2 ** dimindex (:α) ∧
  dimindex (:α) ≤ i' + n ∧ Num (-i) ≠ 0 ∧ Num (-i) MOD 2 ** n ≠ 0 ∧
  Num (-i) < 2 ** (i' + n) ∧ 1 < 2 ** n ∧
  Num (-i) DIV 2 ** n < Num (-i) ∧ Num (-i) DIV 2 ** n + 1 ≤ Num (-i) ∧
  ¬(Num (-i) DIV 2 ** n + 1 < 2 ** dimindex (:α))
Numeral: (0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ dimindex (:α) − 1 ∧
 0 ≤ Num (-i) MOD 2 ** n ∧ 0 ≤ 2 ** (i' + n) ∧ 0 ≤ i' + n ∧ 0 ≤ i' ∧
 0 ≤ Num (-i) DIV 2 ** n + 1 ∧ 0 ≤ Num (-i) DIV 2 ** n ∧ 0 ≤ Num (-i) ∧
 0 ≤ 2 ** n ∧ 0 ≤ n ∧ 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α)) ∧
∀a b p.
  0 ≤ a ∧ 0 ≤ b ∧ 0 ≤ p ⇒
  (0 ≤ 2 ** a ∧ 0 ≤ 2 ** b) ∧ (2 ** a < 2 ** b ∨ ¬(a < b)) ∧
  2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α) ∧
  (a < p ∨ ¬(a ≤ b) ∨ ¬(b < p)) ∧ (a ≤ p ∨ ¬(a ≤ b) ∨ ¬(b ≤ p)) ∧
  i < 0 ∧ n < dimindex (:α) ∧ INT_MIN (:α) ≤ i ∧ i ≤ INT_MAX (:α) ∧
  i' < dimindex (:α) ∧ Num (-i) < 2 ** dimindex (:α) ∧
  dimindex (:α) ≤ i' + n ∧ Num (-i) ≠ 0 ∧ Num (-i) MOD 2 ** n ≠ 0 ∧
  Num (-i) < 2 ** (i' + n) ∧ 1 < 2 ** n ∧
  Num (-i) DIV 2 ** n < Num (-i) ∧ Num (-i) DIV 2 ** n + 1 ≤ Num (-i) ∧
  ¬(Num (-i) DIV 2 ** n + 1 < 2 ** dimindex (:α))
CNF2: ∀a b p.
  0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ n ∧ 0 ≤ 2 ** n ∧
  0 ≤ Num (-i) ∧ 0 ≤ Num (-i) DIV 2 ** n ∧ 0 ≤ Num (-i) DIV 2 ** n + 1 ∧
  0 ≤ i' ∧ 0 ≤ i' + n ∧ 0 ≤ 2 ** (i' + n) ∧ 0 ≤ Num (-i) MOD 2 ** n ∧
  0 ≤ dimindex (:α) − 1 ∧ 0 ≤ 2 ** (dimindex (:α) − 1) ∧
  (0 ≤ 2 ** b ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (0 ≤ 2 ** a ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (¬(a < b) ∨ 2 ** a < 2 ** b ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨
   ¬(0 ≤ p)) ∧
  (¬(b < p) ∨ ¬(a ≤ b) ∨ a < p ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (¬(b ≤ p) ∨ ¬(a ≤ b) ∨ a ≤ p ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (i < 0 ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (n < dimindex (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (INT_MIN (:α) ≤ i ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (i ≤ INT_MAX (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (i' < dimindex (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (Num (-i) < 2 ** dimindex (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (dimindex (:α) ≤ i' + n ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (Num (-i) ≠ 0 ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (Num (-i) MOD 2 ** n ≠ 0 ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (Num (-i) < 2 ** (i' + n) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (1 < 2 ** n ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (Num (-i) DIV 2 ** n < Num (-i) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (Num (-i) DIV 2 ** n + 1 ≤ Num (-i) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨
   ¬(0 ≤ p)) ∧
  (¬(Num (-i) DIV 2 ** n + 1 < 2 ** dimindex (:α)) ∨ ¬(0 ≤ a) ∨
   ¬(0 ≤ b) ∨ ¬(0 ≤ p))
Status: Time Out

User theorems:  [] |- ∀m n p. m ≤ n ∧ n ≤ p ⇒ m ≤ p
 [] |- ∀m n p. m ≤ n ∧ n < p ⇒ m < p
 [] |- 2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α)
 [] |- ∀a b. a < b ⇒ 2 ** a < 2 ** b

Goal: [Num (-i) DIV 2 ** n + 1 ≤ Num (-i),Num (-i) DIV 2 ** n < Num (-i),1 < 2 ** n,Num (-i) ≤ 2 ** (dimindex (:α) − 1),Num (-i) MOD 2 ** n ≠ 0,Num (-i) ≠ 0,dimindex (:α) ≤ i' + n,Num (-i) < 2 ** dimindex (:α),i' < dimindex (:α),i ≤ INT_MAX (:α),INT_MIN (:α) ≤ i,n < dimindex (:α),i < 0] ?- Num (-i) DIV 2 ** n + 1 < 2 ** dimindex (:α)
CNF1: ∀a b p.
  (2 ** a < 2 ** b ∨ ¬(a < b)) ∧
  2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α) ∧
  (a < p ∨ ¬(a ≤ b) ∨ ¬(b < p)) ∧ (a ≤ p ∨ ¬(a ≤ b) ∨ ¬(b ≤ p)) ∧
  i < 0 ∧ n < dimindex (:α) ∧ INT_MIN (:α) ≤ i ∧ i ≤ INT_MAX (:α) ∧
  i' < dimindex (:α) ∧ Num (-i) < 2 ** dimindex (:α) ∧
  dimindex (:α) ≤ i' + n ∧ Num (-i) ≠ 0 ∧ Num (-i) MOD 2 ** n ≠ 0 ∧
  Num (-i) ≤ 2 ** (dimindex (:α) − 1) ∧ 1 < 2 ** n ∧
  Num (-i) DIV 2 ** n < Num (-i) ∧ Num (-i) DIV 2 ** n + 1 ≤ Num (-i) ∧
  ¬(Num (-i) DIV 2 ** n + 1 < 2 ** dimindex (:α))
Numeral: (0 ≤ i' + n ∧ 0 ≤ i' ∧ 0 ≤ Num (-i) MOD 2 ** n ∧
 0 ≤ 2 ** (dimindex (:α) − 1) ∧ 0 ≤ dimindex (:α) − 1 ∧
 0 ≤ Num (-i) DIV 2 ** n + 1 ∧ 0 ≤ Num (-i) DIV 2 ** n ∧ 0 ≤ Num (-i) ∧
 0 ≤ 2 ** n ∧ 0 ≤ n ∧ 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α)) ∧
∀a b p.
  0 ≤ a ∧ 0 ≤ b ∧ 0 ≤ p ⇒
  (0 ≤ 2 ** a ∧ 0 ≤ 2 ** b) ∧ (2 ** a < 2 ** b ∨ ¬(a < b)) ∧
  2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α) ∧
  (a < p ∨ ¬(a ≤ b) ∨ ¬(b < p)) ∧ (a ≤ p ∨ ¬(a ≤ b) ∨ ¬(b ≤ p)) ∧
  i < 0 ∧ n < dimindex (:α) ∧ INT_MIN (:α) ≤ i ∧ i ≤ INT_MAX (:α) ∧
  i' < dimindex (:α) ∧ Num (-i) < 2 ** dimindex (:α) ∧
  dimindex (:α) ≤ i' + n ∧ Num (-i) ≠ 0 ∧ Num (-i) MOD 2 ** n ≠ 0 ∧
  Num (-i) ≤ 2 ** (dimindex (:α) − 1) ∧ 1 < 2 ** n ∧
  Num (-i) DIV 2 ** n < Num (-i) ∧ Num (-i) DIV 2 ** n + 1 ≤ Num (-i) ∧
  ¬(Num (-i) DIV 2 ** n + 1 < 2 ** dimindex (:α))
CNF2: ∀a b p.
  0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ n ∧ 0 ≤ 2 ** n ∧
  0 ≤ Num (-i) ∧ 0 ≤ Num (-i) DIV 2 ** n ∧ 0 ≤ Num (-i) DIV 2 ** n + 1 ∧
  0 ≤ dimindex (:α) − 1 ∧ 0 ≤ 2 ** (dimindex (:α) − 1) ∧
  0 ≤ Num (-i) MOD 2 ** n ∧ 0 ≤ i' ∧ 0 ≤ i' + n ∧
  (0 ≤ 2 ** b ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (0 ≤ 2 ** a ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (¬(a < b) ∨ 2 ** a < 2 ** b ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (2 ** (dimindex (:α) − 1) < 2 ** dimindex (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨
   ¬(0 ≤ p)) ∧
  (¬(b < p) ∨ ¬(a ≤ b) ∨ a < p ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (¬(b ≤ p) ∨ ¬(a ≤ b) ∨ a ≤ p ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (i < 0 ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (n < dimindex (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (INT_MIN (:α) ≤ i ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (i ≤ INT_MAX (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (i' < dimindex (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (Num (-i) < 2 ** dimindex (:α) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (dimindex (:α) ≤ i' + n ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (Num (-i) ≠ 0 ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (Num (-i) MOD 2 ** n ≠ 0 ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (Num (-i) ≤ 2 ** (dimindex (:α) − 1) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨
   ¬(0 ≤ p)) ∧ (1 < 2 ** n ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (Num (-i) DIV 2 ** n < Num (-i) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ p)) ∧
  (Num (-i) DIV 2 ** n + 1 ≤ Num (-i) ∨ ¬(0 ≤ a) ∨ ¬(0 ≤ b) ∨
   ¬(0 ≤ p)) ∧
  (¬(Num (-i) DIV 2 ** n + 1 < 2 ** dimindex (:α)) ∨ ¬(0 ≤ a) ∨
   ¬(0 ≤ b) ∨ ¬(0 ≤ p))
Status: Time Out

User theorems:  [] |- ∀a b. a ≤ b ⇒ 2 ** a ≤ 2 ** b
 [] |- ∀m n p. m < n ∧ n ≤ p ⇒ m < p

Goal: [Num (-i) DIV 2 ** n − 1 = (Num (-i) − 1) DIV 2 ** n,2 ** n ≤ Num (-i),Num (-i) MOD 2 ** n = 0,Num (-i) ≠ 0,dimindex (:α) ≤ i' + n,Num (-i) < 2 ** dimindex (:α),i' < dimindex (:α),i ≤ INT_MAX (:α),INT_MIN (:α) ≤ i,n < dimindex (:α),i < 0] ?- Num (-i) < 2 ** (i' + n)
CNF1: ∀m n' p.
  (m < p ∨ ¬(m < n') ∨ ¬(n' ≤ p)) ∧ (2 ** m ≤ 2 ** n' ∨ ¬(m ≤ n')) ∧
  i < 0 ∧ n < dimindex (:α) ∧ INT_MIN (:α) ≤ i ∧ i ≤ INT_MAX (:α) ∧
  i' < dimindex (:α) ∧ Num (-i) < 2 ** dimindex (:α) ∧
  dimindex (:α) ≤ i' + n ∧ Num (-i) ≠ 0 ∧ (Num (-i) MOD 2 ** n = 0) ∧
  2 ** n ≤ Num (-i) ∧
  (Num (-i) DIV 2 ** n − 1 = (Num (-i) − 1) DIV 2 ** n) ∧
  ¬(Num (-i) < 2 ** (i' + n))
Numeral: (0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ Num (-i) MOD 2 ** n ∧
 0 ≤ Num (-i) DIV 2 ** n − 1 ∧ 0 ≤ Num (-i) DIV 2 ** n ∧
 0 ≤ (Num (-i) − 1) DIV 2 ** n ∧ 0 ≤ Num (-i) − 1 ∧ 0 ≤ 2 ** n ∧
 0 ≤ Num (-i) ∧ 0 ≤ 2 ** (i' + n) ∧ 0 ≤ i' + n ∧ 0 ≤ i' ∧ 0 ≤ n) ∧
∀m n' p.
  0 ≤ p ∧ 0 ≤ m ∧ 0 ≤ n' ⇒
  (0 ≤ 2 ** m ∧ 0 ≤ 2 ** n') ∧ (m < p ∨ ¬(m < n') ∨ ¬(n' ≤ p)) ∧
  (2 ** m ≤ 2 ** n' ∨ ¬(m ≤ n')) ∧ i < 0 ∧ n < dimindex (:α) ∧
  INT_MIN (:α) ≤ i ∧ i ≤ INT_MAX (:α) ∧ i' < dimindex (:α) ∧
  Num (-i) < 2 ** dimindex (:α) ∧ dimindex (:α) ≤ i' + n ∧
  Num (-i) ≠ 0 ∧ (Num (-i) MOD 2 ** n = 0) ∧ 2 ** n ≤ Num (-i) ∧
  (Num (-i) DIV 2 ** n − 1 = (Num (-i) − 1) DIV 2 ** n) ∧
  ¬(Num (-i) < 2 ** (i' + n))
CNF2: ∀m n' p.
  0 ≤ n ∧ 0 ≤ i' ∧ 0 ≤ i' + n ∧ 0 ≤ 2 ** (i' + n) ∧ 0 ≤ Num (-i) ∧
  0 ≤ 2 ** n ∧ 0 ≤ Num (-i) − 1 ∧ 0 ≤ (Num (-i) − 1) DIV 2 ** n ∧
  0 ≤ Num (-i) DIV 2 ** n ∧ 0 ≤ Num (-i) DIV 2 ** n − 1 ∧
  0 ≤ Num (-i) MOD 2 ** n ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ 2 ** dimindex (:α) ∧
  (0 ≤ 2 ** n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ 2 ** m ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (¬(n' ≤ p) ∨ ¬(m < n') ∨ m < p ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (¬(m ≤ n') ∨ 2 ** m ≤ 2 ** n' ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (i < 0 ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (n < dimindex (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (INT_MIN (:α) ≤ i ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (i ≤ INT_MAX (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (i' < dimindex (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (Num (-i) < 2 ** dimindex (:α) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (dimindex (:α) ≤ i' + n ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (Num (-i) ≠ 0 ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  ((Num (-i) MOD 2 ** n = 0) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (2 ** n ≤ Num (-i) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  ((Num (-i) DIV 2 ** n − 1 = (Num (-i) − 1) DIV 2 ** n) ∨ ¬(0 ≤ p) ∨
   ¬(0 ≤ m) ∨ ¬(0 ≤ n')) ∧
  (¬(Num (-i) < 2 ** (i' + n)) ∨ ¬(0 ≤ p) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems:  [] |- ∀n a. a ≠ 0 ∧ (a MOD 2 ** n = 0) ⇒ 2 ** n ≤ a
 [] |- ∀a b. b ≤ a ∧ 0 < b ⇒ 0 < a DIV b
 [] |- ∀n. 0 < 2 ** n
 [] |- 0 < x ⇒ x ≠ 0

Goal: [Num (-i) MOD 2 ** n = 0,Num (-i) ≠ 0,dimindex (:α) ≤ i' + n,Num (-i) < 2 ** dimindex (:α),i' < dimindex (:α),i ≤ INT_MAX (:α),INT_MIN (:α) ≤ i,n < dimindex (:α),i < 0] ?- Num (-i) DIV 2 ** n ≠ 0
CNF1: ∀n' b.
  (x ≠ 0 ∨ ¬(0 < x)) ∧ 0 < 2 ** n' ∧
  (0 < n' DIV b ∨ ¬(b ≤ n') ∨ ¬(0 < b)) ∧
  (2 ** n' ≤ b ∨ (b = 0) ∨ b MOD 2 ** n' ≠ 0) ∧ i < 0 ∧
  n < dimindex (:α) ∧ INT_MIN (:α) ≤ i ∧ i ≤ INT_MAX (:α) ∧
  i' < dimindex (:α) ∧ Num (-i) < 2 ** dimindex (:α) ∧
  dimindex (:α) ≤ i' + n ∧ Num (-i) ≠ 0 ∧ (Num (-i) MOD 2 ** n = 0) ∧
  (Num (-i) DIV 2 ** n = 0)
Numeral: (0 ≤ x ∧ 0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ dimindex (:α) ∧ 0 ≤ i' + n ∧
 0 ≤ i' ∧ 0 ≤ Num (-i) MOD 2 ** n ∧ 0 ≤ Num (-i) DIV 2 ** n ∧
 0 ≤ Num (-i) ∧ 0 ≤ 2 ** n ∧ 0 ≤ n) ∧
∀n' b.
  0 ≤ b ∧ 0 ≤ n' ⇒
  (0 ≤ n' DIV b ∧ 0 ≤ b MOD 2 ** n' ∧ 0 ≤ 2 ** n') ∧
  (x ≠ 0 ∨ ¬(0 < x)) ∧ 0 < 2 ** n' ∧
  (0 < n' DIV b ∨ ¬(b ≤ n') ∨ ¬(0 < b)) ∧
  (2 ** n' ≤ b ∨ (b = 0) ∨ b MOD 2 ** n' ≠ 0) ∧ i < 0 ∧
  n < dimindex (:α) ∧ INT_MIN (:α) ≤ i ∧ i ≤ INT_MAX (:α) ∧
  i' < dimindex (:α) ∧ Num (-i) < 2 ** dimindex (:α) ∧
  dimindex (:α) ≤ i' + n ∧ Num (-i) ≠ 0 ∧ (Num (-i) MOD 2 ** n = 0) ∧
  (Num (-i) DIV 2 ** n = 0)
CNF2: ∀n' b.
  0 ≤ n ∧ 0 ≤ 2 ** n ∧ 0 ≤ Num (-i) ∧ 0 ≤ Num (-i) DIV 2 ** n ∧
  0 ≤ Num (-i) MOD 2 ** n ∧ 0 ≤ i' ∧ 0 ≤ i' + n ∧ 0 ≤ dimindex (:α) ∧
  0 ≤ 2 ** dimindex (:α) ∧ 0 ≤ x ∧
  (0 ≤ 2 ** n' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ b MOD 2 ** n' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  (0 ≤ n' DIV b ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  (¬(0 < x) ∨ x ≠ 0 ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  (0 < 2 ** n' ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  (¬(0 < b) ∨ ¬(b ≤ n') ∨ 0 < n' DIV b ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  (b MOD 2 ** n' ≠ 0 ∨ (b = 0) ∨ 2 ** n' ≤ b ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  (i < 0 ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  (n < dimindex (:α) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  (INT_MIN (:α) ≤ i ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  (i ≤ INT_MAX (:α) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  (i' < dimindex (:α) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  (Num (-i) < 2 ** dimindex (:α) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  (dimindex (:α) ≤ i' + n ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  (Num (-i) ≠ 0 ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  ((Num (-i) MOD 2 ** n = 0) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n')) ∧
  ((Num (-i) DIV 2 ** n = 0) ∨ ¬(0 ≤ b) ∨ ¬(0 ≤ n'))
Status: Unsatisfiable

User theorems:  [] |- ∀w. w2i w ≤ INT_MAX (:α)
 [] |- ∀w. INT_MIN (:α) ≤ w2i w
 [] |- ∀w. INT_MIN (:α) ≤ w2i (sw2sw w) ∧ w2i (sw2sw w) ≤ INT_MAX (:α)

Goal: [dimindex (:β) ≤ dimindex (:α),i ≤ INT_MAX (:α),INT_MIN (:α) ≤ i,¬(INT_MIN (:β) ≤ i ∧ i ≤ INT_MAX (:β))] ?- (i = w2i (i2w i)) ⇔ (i = w2i (sw2sw (i2w i)))
CNF1: ∀w.
  w2i (sw2sw w) ≤ INT_MAX (:α) ∧ INT_MIN (:α) ≤ w2i (sw2sw w) ∧
  INT_MIN (:α) ≤ w2i w ∧ w2i w ≤ INT_MAX (:α) ∧
  (¬(INT_MIN (:β) ≤ i) ∨ ¬(i ≤ INT_MAX (:β))) ∧ INT_MIN (:α) ≤ i ∧
  i ≤ INT_MAX (:α) ∧ dimindex (:β) ≤ dimindex (:α) ∧
  ((i = w2i (i2w i)) ∨ (i = w2i (sw2sw (i2w i)))) ∧
  (i ≠ w2i (i2w i) ∨ i ≠ w2i (sw2sw (i2w i)))
Numeral: (0 ≤ dimindex (:β) ∧ 0 ≤ dimindex (:α)) ∧
∀w.
  w2i (sw2sw w) ≤ INT_MAX (:α) ∧ INT_MIN (:α) ≤ w2i (sw2sw w) ∧
  INT_MIN (:α) ≤ w2i w ∧ w2i w ≤ INT_MAX (:α) ∧
  (¬(INT_MIN (:β) ≤ i) ∨ ¬(i ≤ INT_MAX (:β))) ∧ INT_MIN (:α) ≤ i ∧
  i ≤ INT_MAX (:α) ∧ dimindex (:β) ≤ dimindex (:α) ∧
  ((i = w2i (i2w i)) ∨ (i = w2i (sw2sw (i2w i)))) ∧
  (i ≠ w2i (i2w i) ∨ i ≠ w2i (sw2sw (i2w i)))
CNF2: ∀w.
  0 ≤ dimindex (:α) ∧ 0 ≤ dimindex (:β) ∧ w2i (sw2sw w) ≤ INT_MAX (:α) ∧
  INT_MIN (:α) ≤ w2i (sw2sw w) ∧ INT_MIN (:α) ≤ w2i w ∧
  w2i w ≤ INT_MAX (:α) ∧ (¬(INT_MIN (:β) ≤ i) ∨ ¬(i ≤ INT_MAX (:β))) ∧
  INT_MIN (:α) ≤ i ∧ i ≤ INT_MAX (:α) ∧ dimindex (:β) ≤ dimindex (:α) ∧
  ((i = w2i (i2w i)) ∨ (i = w2i (sw2sw (i2w i)))) ∧
  (i ≠ w2i (i2w i) ∨ i ≠ w2i (sw2sw (i2w i)))
Status: Unknown

User theorems:  [] |- ∀m n p. m ≤ n ∧ n < p ⇒ m < p
 []
|- INT_MAX (:α) < INT_MIN (:α) ∧ INT_MIN (:α) ≤ UINT_MAX (:α) ∧
   UINT_MAX (:α) < dimword (:α)

Goal: [n < dimword (:α)] ?- INT_MIN (:β) < dimword (:β)
CNF1: ∀m n' p.
  UINT_MAX (:α) < dimword (:α) ∧ INT_MIN (:α) ≤ UINT_MAX (:α) ∧
  INT_MAX (:α) < INT_MIN (:α) ∧ (m < p ∨ ¬(m ≤ n') ∨ ¬(n' < p)) ∧
  n < dimword (:α) ∧ ¬(INT_MIN (:β) < dimword (:β))
Numeral: (0 ≤ UINT_MAX (:α) ∧ 0 ≤ INT_MAX (:α) ∧ 0 ≤ INT_MIN (:α) ∧ 0 ≤ n ∧
 0 ≤ dimword (:α) ∧ 0 ≤ INT_MIN (:β) ∧ 0 ≤ dimword (:β)) ∧
∀m n' p.
  0 ≤ m ∧ 0 ≤ n' ∧ 0 ≤ p ⇒
  UINT_MAX (:α) < dimword (:α) ∧ INT_MIN (:α) ≤ UINT_MAX (:α) ∧
  INT_MAX (:α) < INT_MIN (:α) ∧ (m < p ∨ ¬(m ≤ n') ∨ ¬(n' < p)) ∧
  n < dimword (:α) ∧ ¬(INT_MIN (:β) < dimword (:β))
CNF2: ∀m n' p.
  0 ≤ dimword (:β) ∧ 0 ≤ INT_MIN (:β) ∧ 0 ≤ dimword (:α) ∧ 0 ≤ n ∧
  0 ≤ INT_MIN (:α) ∧ 0 ≤ INT_MAX (:α) ∧ 0 ≤ UINT_MAX (:α) ∧
  (UINT_MAX (:α) < dimword (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (INT_MIN (:α) ≤ UINT_MAX (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (INT_MAX (:α) < INT_MIN (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (¬(n' < p) ∨ ¬(m ≤ n') ∨ m < p ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (n < dimword (:α) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p)) ∧
  (¬(INT_MIN (:β) < dimword (:β)) ∨ ¬(0 ≤ m) ∨ ¬(0 ≤ n') ∨ ¬(0 ≤ p))
Status: Unknown

User theorems: 
Goal: [UINT_MAX (:α) ≤ n ∧ n ≠ UINT_MAX (:α) ⇔ dimword (:α) ≤ n,n ≠ UINT_MAX (:α),n ≠ 0] ?- (if UINT_MAX (:α) ≤ n then n2w (UINT_MAX (:α)) else n2w n) =
if dimword (:α) ≤ n then n2w (UINT_MAX (:α)) else n2w n
CNF1: n ≠ 0 ∧ n ≠ UINT_MAX (:α) ∧ (n ≠ UINT_MAX (:α) ∨ ¬(dimword (:α) ≤ n)) ∧
(UINT_MAX (:α) ≤ n ∨ ¬(dimword (:α) ≤ n)) ∧
((n = UINT_MAX (:α)) ∨ ¬(UINT_MAX (:α) ≤ n) ∨ dimword (:α) ≤ n) ∧
(if UINT_MAX (:α) ≤ n then n2w (UINT_MAX (:α)) else n2w n) ≠
if dimword (:α) ≤ n then n2w (UINT_MAX (:α)) else n2w n
Numeral: (0 ≤ dimword (:α) ∧ 0 ≤ UINT_MAX (:α) ∧ 0 ≤ n) ∧ n ≠ 0 ∧
n ≠ UINT_MAX (:α) ∧ (n ≠ UINT_MAX (:α) ∨ ¬(dimword (:α) ≤ n)) ∧
(UINT_MAX (:α) ≤ n ∨ ¬(dimword (:α) ≤ n)) ∧
((n = UINT_MAX (:α)) ∨ ¬(UINT_MAX (:α) ≤ n) ∨ dimword (:α) ≤ n) ∧
(if UINT_MAX (:α) ≤ n then n2w (UINT_MAX (:α)) else n2w n) ≠
if dimword (:α) ≤ n then n2w (UINT_MAX (:α)) else n2w n
CNF2: 0 ≤ n ∧ 0 ≤ UINT_MAX (:α) ∧ 0 ≤ dimword (:α) ∧ n ≠ 0 ∧
n ≠ UINT_MAX (:α) ∧ (n ≠ UINT_MAX (:α) ∨ ¬(dimword (:α) ≤ n)) ∧
(UINT_MAX (:α) ≤ n ∨ ¬(dimword (:α) ≤ n)) ∧
((n = UINT_MAX (:α)) ∨ ¬(UINT_MAX (:α) ≤ n) ∨ dimword (:α) ≤ n) ∧
(if UINT_MAX (:α) ≤ n then n2w (UINT_MAX (:α)) else n2w n) ≠
if dimword (:α) ≤ n then n2w (UINT_MAX (:α)) else n2w n
Status: Unknown

User theorems:  []
|- INT_MAX (:α) < INT_MIN (:α) ∧ INT_MIN (:α) ≤ UINT_MAX (:α) ∧
   UINT_MAX (:α) < dimword (:α)

Goal: [dimindex (:β) ≤ dimindex (:α),n < dimword (:α),n < INT_MIN (:α)] ?- UINT_MAX (:β) < dimword (:β)
CNF1: UINT_MAX (:α) < dimword (:α) ∧ INT_MIN (:α) ≤ UINT_MAX (:α) ∧
INT_MAX (:α) < INT_MIN (:α) ∧ n < INT_MIN (:α) ∧ n < dimword (:α) ∧
dimindex (:β) ≤ dimindex (:α) ∧ ¬(UINT_MAX (:β) < dimword (:β))
Numeral: (0 ≤ UINT_MAX (:α) ∧ 0 ≤ INT_MAX (:α) ∧ 0 ≤ INT_MIN (:α) ∧ 0 ≤ n ∧
 0 ≤ dimword (:α) ∧ 0 ≤ dimindex (:β) ∧ 0 ≤ dimindex (:α) ∧
 0 ≤ UINT_MAX (:β) ∧ 0 ≤ dimword (:β)) ∧ UINT_MAX (:α) < dimword (:α) ∧
INT_MIN (:α) ≤ UINT_MAX (:α) ∧ INT_MAX (:α) < INT_MIN (:α) ∧
n < INT_MIN (:α) ∧ n < dimword (:α) ∧ dimindex (:β) ≤ dimindex (:α) ∧
¬(UINT_MAX (:β) < dimword (:β))
CNF2: 0 ≤ dimword (:β) ∧ 0 ≤ UINT_MAX (:β) ∧ 0 ≤ dimindex (:α) ∧
0 ≤ dimindex (:β) ∧ 0 ≤ dimword (:α) ∧ 0 ≤ n ∧ 0 ≤ INT_MIN (:α) ∧
0 ≤ INT_MAX (:α) ∧ 0 ≤ UINT_MAX (:α) ∧ UINT_MAX (:α) < dimword (:α) ∧
INT_MIN (:α) ≤ UINT_MAX (:α) ∧ INT_MAX (:α) < INT_MIN (:α) ∧
n < INT_MIN (:α) ∧ n < dimword (:α) ∧ dimindex (:β) ≤ dimindex (:α) ∧
¬(UINT_MAX (:β) < dimword (:β))
Status: Unknown

User theorems: 
Goal: [llist_abs r1 = llist_abs r2,llist_rep (llist_abs r2) = r2,llist_rep (llist_abs r1) = r1] ?- r1 = r2
CNF1: (llist_rep (llist_abs r1) = r1) ∧ (llist_rep (llist_abs r2) = r2) ∧
(llist_abs r1 = llist_abs r2) ∧ r1 ≠ r2
Status: Unsatisfiable

User theorems: 
Goal: [P f,∀g.
  P g ⇒
  (g = (λn. NONE)) ∨
  ∃h t. P t ∧ (g = (λn. if n = 0 then SOME h else t (n − 1)))] ?- ((λn. if n = 0 then SOME h else f (n − 1)) = (λn. NONE)) ∨
∃h' t.
  (P t ∨ (t = (λn. if n = 0 then SOME h else f (n − 1)))) ∧
  ((λn. if n = 0 then SOME h else f (n − 1)) =
   (λn. if n = 0 then SOME h' else t (n − 1)))
CNF1: ∃h' t.
  ∀g h'' t'.
    ((g = (λn. if n = 0 then SOME (h' g) else t g (n − 1))) ∨
     (g = (λn. NONE)) ∨ ¬P g) ∧ (P (t g) ∨ (g = (λn. NONE)) ∨ ¬P g) ∧
    P f ∧ (λn. if n = 0 then SOME h else f (n − 1)) ≠ (λn. NONE) ∧
    (¬P t' ∨
     (λn. if n = 0 then SOME h else f (n − 1)) ≠
     (λn. if n = 0 then SOME h'' else t' (n − 1))) ∧
    (t' ≠ (λn. if n = 0 then SOME h else f (n − 1)) ∨
     (λn. if n = 0 then SOME h else f (n − 1)) ≠
     (λn. if n = 0 then SOME h'' else t' (n − 1)))
Lambda: ∃f4.
  (∀n. f4 n = if n = 0 then SOME h else f (n − 1)) ∧
  ∃f3.
    (∀n. f3 n = NONE) ∧
    ∃h' t.
      ∀g h'' t'.
        ∃f2.
          (∀n. f2 n = if n = 0 then SOME h'' else t' (n − 1)) ∧
          ∃f1.
            (∀n. f1 n = if n = 0 then SOME (h' g) else t g (n − 1)) ∧
            ((g = f1) ∨ (g = f3) ∨ ¬P g) ∧ (P (t g) ∨ (g = f3) ∨ ¬P g) ∧
            P f ∧ f4 ≠ f3 ∧ (¬P t' ∨ f4 ≠ f2) ∧ (t' ≠ f4 ∨ f4 ≠ f2)
Numeral: ∃f4.
  (∀n.
     0 ≤ n ⇒ 0 ≤ n − 1 ∧ (f4 n = if n = 0 then SOME h else f (n − 1))) ∧
  ∃f3.
    (∀n. 0 ≤ n ⇒ (f3 n = NONE)) ∧
    ∃h' t.
      ∀g h'' t'.
        ∃f2.
          (∀n.
             0 ≤ n ⇒
             0 ≤ n − 1 ∧
             (f2 n = if n = 0 then SOME h'' else t' (n − 1))) ∧
          ∃f1.
            (∀n.
               0 ≤ n ⇒
               0 ≤ n − 1 ∧
               (f1 n = if n = 0 then SOME (h' g) else t g (n − 1))) ∧
            ((g = f1) ∨ (g = f3) ∨ ¬P g) ∧ (P (t g) ∨ (g = f3) ∨ ¬P g) ∧
            P f ∧ f4 ≠ f3 ∧ (¬P t' ∨ f4 ≠ f2) ∧ (t' ≠ f4 ∨ f4 ≠ f2)
CNF2: ∃f4 f3 h' t f2 f1.
  ∀n g h'' t' n'.
    ((f4 n = if n = 0 then SOME h else f (n − 1)) ∨ ¬(0 ≤ n)) ∧
    (0 ≤ n − 1 ∨ ¬(0 ≤ n)) ∧ ((f3 n = NONE) ∨ ¬(0 ≤ n)) ∧
    ((f2 g h'' t' n' = if n' = 0 then SOME h'' else t' (n' − 1)) ∨
     ¬(0 ≤ n')) ∧ (0 ≤ n' − 1 ∨ ¬(0 ≤ n')) ∧
    ((f1 g h'' t' n' = if n' = 0 then SOME (h' g) else t g (n' − 1)) ∨
     ¬(0 ≤ n')) ∧ (0 ≤ n' − 1 ∨ ¬(0 ≤ n')) ∧
    ((g = f1 g h'' t') ∨ (g = f3) ∨ ¬P g) ∧
    (P (t g) ∨ (g = f3) ∨ ¬P g) ∧ P f ∧ f4 ≠ f3 ∧
    (¬P t' ∨ f4 ≠ f2 g h'' t') ∧ (t' ≠ f4 ∨ f4 ≠ f2 g h'' t')
Status: Unsatisfiable

User theorems: 
Goal: [P g,P f,∀g.
  P g ⇒
  (g = (λn. NONE)) ∨
  ∃h t. P t ∧ (g = (λn. if n = 0 then SOME h else t (n − 1)))] ?- (g = (λn. NONE)) ∨
∃h' t.
  (P t ∨ (t = (λn. if n = 0 then SOME h else f (n − 1)))) ∧
  (g = (λn. if n = 0 then SOME h' else t (n − 1)))
CNF1: ∃h' t.
  ∀g' h'' t'.
    ((g' = (λn. if n = 0 then SOME (h' g') else t g' (n − 1))) ∨
     (g' = (λn. NONE)) ∨ ¬P g') ∧
    (P (t g') ∨ (g' = (λn. NONE)) ∨ ¬P g') ∧ P f ∧ P g ∧
    g ≠ (λn. NONE) ∧
    (¬P t' ∨ g ≠ (λn. if n = 0 then SOME h'' else t' (n − 1))) ∧
    (t' ≠ (λn. if n = 0 then SOME h else f (n − 1)) ∨
     g ≠ (λn. if n = 0 then SOME h'' else t' (n − 1)))
Lambda: ∃f4.
  (∀n. f4 n = if n = 0 then SOME h else f (n − 1)) ∧
  ∃f3.
    (∀n. f3 n = NONE) ∧
    ∃h' t.
      ∀g' h'' t'.
        ∃f2.
          (∀n. f2 n = if n = 0 then SOME h'' else t' (n − 1)) ∧
          ∃f1.
            (∀n. f1 n = if n = 0 then SOME (h' g') else t g' (n − 1)) ∧
            ((g' = f1) ∨ (g' = f3) ∨ ¬P g') ∧
            (P (t g') ∨ (g' = f3) ∨ ¬P g') ∧ P f ∧ P g ∧ g ≠ f3 ∧
            (¬P t' ∨ g ≠ f2) ∧ (t' ≠ f4 ∨ g ≠ f2)
Numeral: ∃f4.
  (∀n.
     0 ≤ n ⇒ 0 ≤ n − 1 ∧ (f4 n = if n = 0 then SOME h else f (n − 1))) ∧
  ∃f3.
    (∀n. 0 ≤ n ⇒ (f3 n = NONE)) ∧
    ∃h' t.
      ∀g' h'' t'.
        ∃f2.
          (∀n.
             0 ≤ n ⇒
             0 ≤ n − 1 ∧
             (f2 n = if n = 0 then SOME h'' else t' (n − 1))) ∧
          ∃f1.
            (∀n.
               0 ≤ n ⇒
               0 ≤ n − 1 ∧
               (f1 n = if n = 0 then SOME (h' g') else t g' (n − 1))) ∧
            ((g' = f1) ∨ (g' = f3) ∨ ¬P g') ∧
            (P (t g') ∨ (g' = f3) ∨ ¬P g') ∧ P f ∧ P g ∧ g ≠ f3 ∧
            (¬P t' ∨ g ≠ f2) ∧ (t' ≠ f4 ∨ g ≠ f2)
CNF2: ∃f4 f3 h' t f2 f1.
  ∀n g' h'' t' n'.
    ((f4 n = if n = 0 then SOME h else f (n − 1)) ∨ ¬(0 ≤ n)) ∧
    (0 ≤ n − 1 ∨ ¬(0 ≤ n)) ∧ ((f3 n = NONE) ∨ ¬(0 ≤ n)) ∧
    ((f2 g' h'' t' n' = if n' = 0 then SOME h'' else t' (n' − 1)) ∨
     ¬(0 ≤ n')) ∧ (0 ≤ n' − 1 ∨ ¬(0 ≤ n')) ∧
    ((f1 g' h'' t' n' =
      if n' = 0 then SOME (h' g') else t g' (n' − 1)) ∨ ¬(0 ≤ n')) ∧
    (0 ≤ n' − 1 ∨ ¬(0 ≤ n')) ∧
    ((g' = f1 g' h'' t') ∨ (g' = f3) ∨ ¬P g') ∧
    (P (t g') ∨ (g' = f3) ∨ ¬P g') ∧ P f ∧ P g ∧ g ≠ f3 ∧
    (¬P t' ∨ g ≠ f2 g' h'' t') ∧ (t' ≠ f4 ∨ g ≠ f2 g' h'' t')
Status: Unsatisfiable

User theorems:  [] |- ∀x. ∃q r. x = (q,r)
 [] |- ∀opt. (∃x. opt = SOME x) ∨ (opt = NONE)

Goal: [∀a. (llist_rep (g a) n = h f n a) ∧ (llist_rep (g' a) n = h f n a),∀x. LTL (g' x) = OPTION_MAP (g' o FST) (f x),∀x. LHD (g' x) = OPTION_MAP SND (f x),∀x. LTL (g x) = OPTION_MAP (g o FST) (f x),∀x. LHD (g x) = OPTION_MAP SND (f x),∀f x. lrep_ok (λn. h f n x),∀f n. h f (SUC n) = (λx. OPTION_JOIN (OPTION_MAP (h f n o FST) (f x))),∀f. h f 0 = (λx. OPTION_MAP SND (f x))] ?- (f a = NONE) ∨ ∃a' b. f a = SOME (a',b)
CNF1: ∃q r x.
  ∀x' opt a' f' x'' n' b.
    ((opt = SOME (x opt)) ∨ (opt = NONE)) ∧ (x' = (q x',r x')) ∧
    (h f' 0 = (λx. OPTION_MAP SND (f' x))) ∧
    (h f' (SUC n') =
     (λx. OPTION_JOIN (OPTION_MAP (h f' n' o FST) (f' x)))) ∧
    lrep_ok (λn. h f' n x'') ∧ (LHD (g a') = OPTION_MAP SND (f a')) ∧
    (LTL (g a') = OPTION_MAP (g o FST) (f a')) ∧
    (LHD (g' a') = OPTION_MAP SND (f a')) ∧
    (LTL (g' a') = OPTION_MAP (g' o FST) (f a')) ∧
    (llist_rep (g a') n = h f n a') ∧ (llist_rep (g' a') n = h f n a') ∧
    f a ≠ NONE ∧ f a ≠ SOME (a',b)
Lambda: ∃q r x.
  ∀x' opt a' f' x'' n' b.
    ∃f3.
      (∀n. f3 n = h f' n x'') ∧
      ∃f2.
        (∀x. f2 x = OPTION_JOIN (OPTION_MAP (h f' n' o FST) (f' x))) ∧
        ∃f1.
          (∀x. f1 x = OPTION_MAP SND (f' x)) ∧
          ((opt = SOME (x opt)) ∨ (opt = NONE)) ∧ (x' = (q x',r x')) ∧
          (h f' 0 = f1) ∧ (h f' (SUC n') = f2) ∧ lrep_ok f3 ∧
          (LHD (g a') = OPTION_MAP SND (f a')) ∧
          (LTL (g a') = OPTION_MAP (g o FST) (f a')) ∧
          (LHD (g' a') = OPTION_MAP SND (f a')) ∧
          (LTL (g' a') = OPTION_MAP (g' o FST) (f a')) ∧
          (llist_rep (g a') n = h f n a') ∧
          (llist_rep (g' a') n = h f n a') ∧ f a ≠ NONE ∧
          f a ≠ SOME (a',b)
Numeral: 0 ≤ n ∧
∃q r x.
  ∀x' opt a' f' x'' n' b.
    0 ≤ n' ⇒
    0 ≤ SUC n' ∧
    ∃f3.
      (∀n. 0 ≤ n ⇒ (f3 n = h f' n x'')) ∧
      ∃f2.
        (∀x. f2 x = OPTION_JOIN (OPTION_MAP (h f' n' o FST) (f' x))) ∧
        ∃f1.
          (∀x. f1 x = OPTION_MAP SND (f' x)) ∧
          ((opt = SOME (x opt)) ∨ (opt = NONE)) ∧ (x' = (q x',r x')) ∧
          (h f' 0 = f1) ∧ (h f' (SUC n') = f2) ∧ lrep_ok f3 ∧
          (LHD (g a') = OPTION_MAP SND (f a')) ∧
          (LTL (g a') = OPTION_MAP (g o FST) (f a')) ∧
          (LHD (g' a') = OPTION_MAP SND (f a')) ∧
          (LTL (g' a') = OPTION_MAP (g' o FST) (f a')) ∧
          (llist_rep (g a') n = h f n a') ∧
          (llist_rep (g' a') n = h f n a') ∧ f a ≠ NONE ∧
          f a ≠ SOME (a',b)
CNF2: ∃q r x f3 f2 f1.
  ∀x' opt a' f' x'' n' b n'' x'''.
    0 ≤ n ∧ (0 ≤ SUC n' ∨ ¬(0 ≤ n')) ∧
    (¬(0 ≤ n'') ∨ (f3 x' opt a' f' x'' n' b n'' = h f' n'' x'') ∨
     ¬(0 ≤ n')) ∧
    ((f2 x' opt a' f' x'' n' b x''' =
      OPTION_JOIN (OPTION_MAP (h f' n' o FST) (f' x'''))) ∨ ¬(0 ≤ n')) ∧
    ((f1 x' opt a' f' x'' n' b x''' = OPTION_MAP SND (f' x''')) ∨
     ¬(0 ≤ n')) ∧ ((opt = NONE) ∨ (opt = SOME (x opt)) ∨ ¬(0 ≤ n')) ∧
    ((x' = (q x',r x')) ∨ ¬(0 ≤ n')) ∧
    ((h f' 0 = f1 x' opt a' f' x'' n' b) ∨ ¬(0 ≤ n')) ∧
    ((h f' (SUC n') = f2 x' opt a' f' x'' n' b) ∨ ¬(0 ≤ n')) ∧
    (lrep_ok (f3 x' opt a' f' x'' n' b) ∨ ¬(0 ≤ n')) ∧
    ((LHD (g a') = OPTION_MAP SND (f a')) ∨ ¬(0 ≤ n')) ∧
    ((LTL (g a') = OPTION_MAP (g o FST) (f a')) ∨ ¬(0 ≤ n')) ∧
    ((LHD (g' a') = OPTION_MAP SND (f a')) ∨ ¬(0 ≤ n')) ∧
    ((LTL (g' a') = OPTION_MAP (g' o FST) (f a')) ∨ ¬(0 ≤ n')) ∧
    ((llist_rep (g a') n = h f n a') ∨ ¬(0 ≤ n')) ∧
    ((llist_rep (g' a') n = h f n a') ∨ ¬(0 ≤ n')) ∧
    (f a ≠ NONE ∨ ¬(0 ≤ n')) ∧ (f a ≠ SOME (a',b) ∨ ¬(0 ≤ n'))
Status: Time Out

User theorems:  []
|- ∀ll.
     ((LHD ll = NONE) ⇔ (ll = [||])) ∧ ((NONE = LHD ll) ⇔ (ll = [||]))

Goal: [LHD (g' a) = NONE,LHD (g a) = NONE,f a = NONE,∀a. (llist_rep (g a) n = h f n a) ∧ (llist_rep (g' a) n = h f n a),∀x. LTL (g' x) = OPTION_MAP (g' o FST) (f x),∀x. LHD (g' x) = OPTION_MAP SND (f x),∀x. LTL (g x) = OPTION_MAP (g o FST) (f x),∀x. LHD (g x) = OPTION_MAP SND (f x),∀f x. lrep_ok (λn. h f n x),∀f n. h f (SUC n) = (λx. OPTION_JOIN (OPTION_MAP (h f n o FST) (f x))),∀f. h f 0 = (λx. OPTION_MAP SND (f x))] ?- (g a = [||]) ∧ (g' a = [||])
CNF1: ∀ll x f' x' n'.
  (NONE ≠ LHD ll ∨ (ll = [||])) ∧ ((NONE = LHD ll) ∨ ll ≠ [||]) ∧
  ((LHD ll = NONE) ∨ ll ≠ [||]) ∧ (LHD ll ≠ NONE ∨ (ll = [||])) ∧
  (h f' 0 = (λx. OPTION_MAP SND (f' x))) ∧
  (h f' (SUC n') =
   (λx. OPTION_JOIN (OPTION_MAP (h f' n' o FST) (f' x)))) ∧
  lrep_ok (λn. h f' n x') ∧ (LHD (g x) = OPTION_MAP SND (f x)) ∧
  (LTL (g x) = OPTION_MAP (g o FST) (f x)) ∧
  (LHD (g' x) = OPTION_MAP SND (f x)) ∧
  (LTL (g' x) = OPTION_MAP (g' o FST) (f x)) ∧
  (llist_rep (g x) n = h f n x) ∧ (llist_rep (g' x) n = h f n x) ∧
  (f a = NONE) ∧ (LHD (g a) = NONE) ∧ (LHD (g' a) = NONE) ∧
  (g a ≠ [||] ∨ g' a ≠ [||])
Lambda: ∀ll x f' x' n'.
  ∃f3.
    (∀n. f3 n = h f' n x') ∧
    ∃f2.
      (∀x. f2 x = OPTION_JOIN (OPTION_MAP (h f' n' o FST) (f' x))) ∧
      ∃f1.
        (∀x. f1 x = OPTION_MAP SND (f' x)) ∧
        (NONE ≠ LHD ll ∨ (ll = [||])) ∧ ((NONE = LHD ll) ∨ ll ≠ [||]) ∧
        ((LHD ll = NONE) ∨ ll ≠ [||]) ∧ (LHD ll ≠ NONE ∨ (ll = [||])) ∧
        (h f' 0 = f1) ∧ (h f' (SUC n') = f2) ∧ lrep_ok f3 ∧
        (LHD (g x) = OPTION_MAP SND (f x)) ∧
        (LTL (g x) = OPTION_MAP (g o FST) (f x)) ∧
        (LHD (g' x) = OPTION_MAP SND (f x)) ∧
        (LTL (g' x) = OPTION_MAP (g' o FST) (f x)) ∧
        (llist_rep (g x) n = h f n x) ∧ (llist_rep (g' x) n = h f n x) ∧
        (f a = NONE) ∧ (LHD (g a) = NONE) ∧ (LHD (g' a) = NONE) ∧
        (g a ≠ [||] ∨ g' a ≠ [||])
Numeral: 0 ≤ n ∧
∀ll x f' x' n'.
  0 ≤ n' ⇒
  0 ≤ SUC n' ∧
  ∃f3.
    (∀n. 0 ≤ n ⇒ (f3 n = h f' n x')) ∧
    ∃f2.
      (∀x. f2 x = OPTION_JOIN (OPTION_MAP (h f' n' o FST) (f' x))) ∧
      ∃f1.
        (∀x. f1 x = OPTION_MAP SND (f' x)) ∧
        (NONE ≠ LHD ll ∨ (ll = [||])) ∧ ((NONE = LHD ll) ∨ ll ≠ [||]) ∧
        ((LHD ll = NONE) ∨ ll ≠ [||]) ∧ (LHD ll ≠ NONE ∨ (ll = [||])) ∧
        (h f' 0 = f1) ∧ (h f' (SUC n') = f2) ∧ lrep_ok f3 ∧
        (LHD (g x) = OPTION_MAP SND (f x)) ∧
        (LTL (g x) = OPTION_MAP (g o FST) (f x)) ∧
        (LHD (g' x) = OPTION_MAP SND (f x)) ∧
        (LTL (g' x) = OPTION_MAP (g' o FST) (f x)) ∧
        (llist_rep (g x) n = h f n x) ∧ (llist_rep (g' x) n = h f n x) ∧
        (f a = NONE) ∧ (LHD (g a) = NONE) ∧ (LHD (g' a) = NONE) ∧
        (g a ≠ [||] ∨ g' a ≠ [||])
CNF2: ∃f3 f2 f1.
  ∀ll x f' x' n' n'' x''.
    0 ≤ n ∧ (0 ≤ SUC n' ∨ ¬(0 ≤ n')) ∧
    (¬(0 ≤ n'') ∨ (f3 ll x f' x' n' n'' = h f' n'' x') ∨ ¬(0 ≤ n')) ∧
    ((f2 ll x f' x' n' x'' =
      OPTION_JOIN (OPTION_MAP (h f' n' o FST) (f' x''))) ∨ ¬(0 ≤ n')) ∧
    ((f1 ll x f' x' n' x'' = OPTION_MAP SND (f' x'')) ∨ ¬(0 ≤ n')) ∧
    ((ll = [||]) ∨ NONE ≠ LHD ll ∨ ¬(0 ≤ n')) ∧
    (ll ≠ [||] ∨ (NONE = LHD ll) ∨ ¬(0 ≤ n')) ∧
    (ll ≠ [||] ∨ (LHD ll = NONE) ∨ ¬(0 ≤ n')) ∧
    ((ll = [||]) ∨ LHD ll ≠ NONE ∨ ¬(0 ≤ n')) ∧
    ((h f' 0 = f1 ll x f' x' n') ∨ ¬(0 ≤ n')) ∧
    ((h f' (SUC n') = f2 ll x f' x' n') ∨ ¬(0 ≤ n')) ∧
    (lrep_ok (f3 ll x f' x' n') ∨ ¬(0 ≤ n')) ∧
    ((LHD (g x) = OPTION_MAP SND (f x)) ∨ ¬(0 ≤ n')) ∧
    ((LTL (g x) = OPTION_MAP (g o FST) (f x)) ∨ ¬(0 ≤ n')) ∧
    ((LHD (g' x) = OPTION_MAP SND (f x)) ∨ ¬(0 ≤ n')) ∧
    ((LTL (g' x) = OPTION_MAP (g' o FST) (f x)) ∨ ¬(0 ≤ n')) ∧
    ((llist_rep (g x) n = h f n x) ∨ ¬(0 ≤ n')) ∧
    ((llist_rep (g' x) n = h f n x) ∨ ¬(0 ≤ n')) ∧
    ((f a = NONE) ∨ ¬(0 ≤ n')) ∧ ((LHD (g a) = NONE) ∨ ¬(0 ≤ n')) ∧
    ((LHD (g' a) = NONE) ∨ ¬(0 ≤ n')) ∧
    (g' a ≠ [||] ∨ g a ≠ [||] ∨ ¬(0 ≤ n'))
Status: Unknown

User theorems:  []
|- ∀ll.
     ((LHD ll = NONE) ⇔ (ll = [||])) ∧ ((NONE = LHD ll) ⇔ (ll = [||]))
 []
|- (∀f x. OPTION_MAP f (SOME x) = SOME (f x)) ∧
   ∀f. OPTION_MAP f NONE = NONE

Goal: [f x = NONE,∀x. LTL (g x) = OPTION_MAP (g o FST) (f x),∀x. LHD (g x) = OPTION_MAP SND (f x)] ?- g x = [||]
CNF1: ∀ll f' x'.
  (OPTION_MAP f' NONE = NONE) ∧
  (OPTION_MAP f' (SOME x') = SOME (f' x')) ∧
  (LHD ll ≠ NONE ∨ (ll = [||])) ∧ ((LHD ll = NONE) ∨ ll ≠ [||]) ∧
  ((NONE = LHD ll) ∨ ll ≠ [||]) ∧ (NONE ≠ LHD ll ∨ (ll = [||])) ∧
  (LHD (g x') = OPTION_MAP SND (f x')) ∧
  (LTL (g x') = OPTION_MAP (g o FST) (f x')) ∧ (f x = NONE) ∧ g x ≠ [||]
Status: Satisfiable

User theorems:  [] |- ∀x. ∃q r. x = (q,r)
 [] |- ∀opt. (∃x. opt = SOME x) ∨ (opt = NONE)

Goal: [∀x. f2 x = case f x of NONE => [||] | SOME (a,b) => b:::f2 a,∀x. f1 x = case f x of NONE => [||] | SOME (a,b) => b:::f1 a,∀x. LTL (g x) = OPTION_MAP (g o FST) (f x),∀x. LHD (g x) = OPTION_MAP SND (f x)] ?- (f x = NONE) ∨ ∃a b. f x = SOME (a,b)
CNF1: ∃q r x'.
  ∀x'' opt a b.
    ((opt = SOME (x' opt)) ∨ (opt = NONE)) ∧ (x'' = (q x'',r x'')) ∧
    (LHD (g a) = OPTION_MAP SND (f a)) ∧
    (LTL (g a) = OPTION_MAP (g o FST) (f a)) ∧
    (f1 a = case f a of NONE => [||] | SOME (a,b) => b:::f1 a) ∧
    (f2 a = case f a of NONE => [||] | SOME (a,b) => b:::f2 a) ∧
    f x ≠ NONE ∧ f x ≠ SOME (a,b)
Lambda: ∃f6.
  (∀a b. f6 a b = b:::f2 a) ∧
  ∃f5.
    (∀v. f5 v = pair_CASE v f6) ∧
    ∃f4.
      (∀a b. f4 a b = b:::f1 a) ∧
      ∃f3.
        (∀v. f3 v = pair_CASE v f4) ∧
        ∃q r x'.
          ∀x'' opt a b.
            ((opt = SOME (x' opt)) ∨ (opt = NONE)) ∧
            (x'' = (q x'',r x'')) ∧ (LHD (g a) = OPTION_MAP SND (f a)) ∧
            (LTL (g a) = OPTION_MAP (g o FST) (f a)) ∧
            (f1 a = option_CASE (f a) [||] f3) ∧
            (f2 a = option_CASE (f a) [||] f5) ∧ f x ≠ NONE ∧
            f x ≠ SOME (a,b)
CNF2: ∃f6 f5 f4 f3 q r x'.
  ∀a b v a' b' x'' opt a'' b''.
    (f6 a b = b:::f2 a) ∧ (f5 v = pair_CASE v f6) ∧
    (f4 a' b' = b':::f1 a') ∧ (f3 x'' = pair_CASE x'' f4) ∧
    ((opt = SOME (x' opt)) ∨ (opt = NONE)) ∧ (x'' = (q x'',r x'')) ∧
    (LHD (g a'') = OPTION_MAP SND (f a'')) ∧
    (LTL (g a'') = OPTION_MAP (g o FST) (f a'')) ∧
    (f1 a'' = option_CASE (f a'') [||] f3) ∧
    (f2 a'' = option_CASE (f a'') [||] f5) ∧ f x ≠ NONE ∧
    f x ≠ SOME (a'',b'')
Status: Satisfiable

User theorems:  [] |- ∀x. ∃q r. x = (q,r)
 [] |- ∀opt. (∃x. opt = SOME x) ∨ (opt = NONE)

Goal: [∀x. f2 x = case f x of NONE => [||] | SOME (a,b) => b:::f2 a,∀x. f1 x = case f x of NONE => [||] | SOME (a,b) => b:::f1 a,∀x. LTL (g x) = OPTION_MAP (g o FST) (f x),∀x. LHD (g x) = OPTION_MAP SND (f x)] ?- (f x = NONE) ∨ ∃a b. f x = SOME (a,b)
CNF1: ∃q r x'.
  ∀x'' opt a b.
    ((opt = SOME (x' opt)) ∨ (opt = NONE)) ∧ (x'' = (q x'',r x'')) ∧
    (LHD (g a) = OPTION_MAP SND (f a)) ∧
    (LTL (g a) = OPTION_MAP (g o FST) (f a)) ∧
    (f1 a = case f a of NONE => [||] | SOME (a,b) => b:::f1 a) ∧
    (f2 a = case f a of NONE => [||] | SOME (a,b) => b:::f2 a) ∧
    f x ≠ NONE ∧ f x ≠ SOME (a,b)
Lambda: ∃f6.
  (∀a b. f6 a b = b:::f2 a) ∧
  ∃f5.
    (∀v. f5 v = pair_CASE v f6) ∧
    ∃f4.
      (∀a b. f4 a b = b:::f1 a) ∧
      ∃f3.
        (∀v. f3 v = pair_CASE v f4) ∧
        ∃q r x'.
          ∀x'' opt a b.
            ((opt = SOME (x' opt)) ∨ (opt = NONE)) ∧
            (x'' = (q x'',r x'')) ∧ (LHD (g a) = OPTION_MAP SND (f a)) ∧
            (LTL (g a) = OPTION_MAP (g o FST) (f a)) ∧
            (f1 a = option_CASE (f a) [||] f3) ∧
            (f2 a = option_CASE (f a) [||] f5) ∧ f x ≠ NONE ∧
            f x ≠ SOME (a,b)
CNF2: ∃f6 f5 f4 f3 q r x'.
  ∀a b v a' b' x'' opt a'' b''.
    (f6 a b = b:::f2 a) ∧ (f5 v = pair_CASE v f6) ∧
    (f4 a' b' = b':::f1 a') ∧ (f3 x'' = pair_CASE x'' f4) ∧
    ((opt = SOME (x' opt)) ∨ (opt = NONE)) ∧ (x'' = (q x'',r x'')) ∧
    (LHD (g a'') = OPTION_MAP SND (f a'')) ∧
    (LTL (g a'') = OPTION_MAP (g o FST) (f a'')) ∧
    (f1 a'' = option_CASE (f a'') [||] f3) ∧
    (f2 a'' = option_CASE (f a'') [||] f5) ∧ f x ≠ NONE ∧
    f x ≠ SOME (a'',b'')
Status: Satisfiable

User theorems:  [] |- ∀x. ∃q r. x = (q,r)
 [] |- ∀opt. (∃x. opt = SOME x) ∨ (opt = NONE)

Goal: [∀x. f2 x = case f x of NONE => [||] | SOME (a,b) => b:::f2 a,∀x. f1 x = case f x of NONE => [||] | SOME (a,b) => b:::f1 a,∀x. LTL (g x) = OPTION_MAP (g o FST) (f x),∀x. LHD (g x) = OPTION_MAP SND (f x)] ?- (f x = NONE) ∨ ∃a b. f x = SOME (a,b)
CNF1: ∃q r x'.
  ∀x'' opt a b.
    ((opt = SOME (x' opt)) ∨ (opt = NONE)) ∧ (x'' = (q x'',r x'')) ∧
    (LHD (g a) = OPTION_MAP SND (f a)) ∧
    (LTL (g a) = OPTION_MAP (g o FST) (f a)) ∧
    (f1 a = case f a of NONE => [||] | SOME (a,b) => b:::f1 a) ∧
    (f2 a = case f a of NONE => [||] | SOME (a,b) => b:::f2 a) ∧
    f x ≠ NONE ∧ f x ≠ SOME (a,b)
Lambda: ∃f6.
  (∀a b. f6 a b = b:::f2 a) ∧
  ∃f5.
    (∀v. f5 v = pair_CASE v f6) ∧
    ∃f4.
      (∀a b. f4 a b = b:::f1 a) ∧
      ∃f3.
        (∀v. f3 v = pair_CASE v f4) ∧
        ∃q r x'.
          ∀x'' opt a b.
            ((opt = SOME (x' opt)) ∨ (opt = NONE)) ∧
            (x'' = (q x'',r x'')) ∧ (LHD (g a) = OPTION_MAP SND (f a)) ∧
            (LTL (g a) = OPTION_MAP (g o FST) (f a)) ∧
            (f1 a = option_CASE (f a) [||] f3) ∧
            (f2 a = option_CASE (f a) [||] f5) ∧ f x ≠ NONE ∧
            f x ≠ SOME (a,b)
CNF2: ∃f6 f5 f4 f3 q r x'.
  ∀a b v a' b' x'' opt a'' b''.
    (f6 a b = b:::f2 a) ∧ (f5 v = pair_CASE v f6) ∧
    (f4 a' b' = b':::f1 a') ∧ (f3 x'' = pair_CASE x'' f4) ∧
    ((opt = SOME (x' opt)) ∨ (opt = NONE)) ∧ (x'' = (q x'',r x'')) ∧
    (LHD (g a'') = OPTION_MAP SND (f a'')) ∧
    (LTL (g a'') = OPTION_MAP (g o FST) (f a'')) ∧
    (f1 a'' = option_CASE (f a'') [||] f3) ∧
    (f2 a'' = option_CASE (f a'') [||] f5) ∧ f x ≠ NONE ∧
    f x ≠ SOME (a'',b'')
Status: Satisfiable

User theorems:  [] |- ∀x. ∃q r. x = (q,r)
 [] |- ∀opt. (∃x. opt = SOME x) ∨ (opt = NONE)

Goal: [∀x. f2 x = case f x of NONE => [||] | SOME (a,b) => b:::f2 a,∀x. f1 x = case f x of NONE => [||] | SOME (a,b) => b:::f1 a,∀x. LTL (g x) = OPTION_MAP (g o FST) (f x),∀x. LHD (g x) = OPTION_MAP SND (f x)] ?- (f x = NONE) ∨ ∃a b. f x = SOME (a,b)
CNF1: ∃q r x'.
  ∀x'' opt a b.
    ((opt = SOME (x' opt)) ∨ (opt = NONE)) ∧ (x'' = (q x'',r x'')) ∧
    (LHD (g a) = OPTION_MAP SND (f a)) ∧
    (LTL (g a) = OPTION_MAP (g o FST) (f a)) ∧
    (f1 a = case f a of NONE => [||] | SOME (a,b) => b:::f1 a) ∧
    (f2 a = case f a of NONE => [||] | SOME (a,b) => b:::f2 a) ∧
    f x ≠ NONE ∧ f x ≠ SOME (a,b)
Lambda: ∃f6.
  (∀a b. f6 a b = b:::f2 a) ∧
  ∃f5.
    (∀v. f5 v = pair_CASE v f6) ∧
    ∃f4.
      (∀a b. f4 a b = b:::f1 a) ∧
      ∃f3.
        (∀v. f3 v = pair_CASE v f4) ∧
        ∃q r x'.
          ∀x'' opt a b.
            ((opt = SOME (x' opt)) ∨ (opt = NONE)) ∧
            (x'' = (q x'',r x'')) ∧ (LHD (g a) = OPTION_MAP SND (f a)) ∧
            (LTL (g a) = OPTION_MAP (g o FST) (f a)) ∧
            (f1 a = option_CASE (f a) [||] f3) ∧
            (f2 a = option_CASE (f a) [||] f5) ∧ f x ≠ NONE ∧
            f x ≠ SOME (a,b)
CNF2: ∃f6 f5 f4 f3 q r x'.
  ∀a b v a' b' x'' opt a'' b''.
    (f6 a b = b:::f2 a) ∧ (f5 v = pair_CASE v f6) ∧
    (f4 a' b' = b':::f1 a') ∧ (f3 x'' = pair_CASE x'' f4) ∧
    ((opt = SOME (x' opt)) ∨ (opt = NONE)) ∧ (x'' = (q x'',r x'')) ∧
    (LHD (g a'') = OPTION_MAP SND (f a'')) ∧
    (LTL (g a'') = OPTION_MAP (g o FST) (f a'')) ∧
    (f1 a'' = option_CASE (f a'') [||] f3) ∧
    (f2 a'' = option_CASE (f a'') [||] f5) ∧ f x ≠ NONE ∧
    f x ≠ SOME (a'',b'')
Status: Satisfiable

User theorems:  []
|- ∀ll.
     ((LHD ll = NONE) ⇔ (ll = [||])) ∧ ((NONE = LHD ll) ⇔ (ll = [||]))
 []
|- (∀f x. OPTION_MAP f (SOME x) = SOME (f x)) ∧
   ∀f. OPTION_MAP f NONE = NONE

Goal: [f x = NONE,∀g g'.
  ((∀x. LHD (g x) = OPTION_MAP SND (f x)) ∧
   ∀x. LTL (g x) = OPTION_MAP (g o FST) (f x)) ∧
  (∀x. LHD (g' x) = OPTION_MAP SND (f x)) ∧
  (∀x. LTL (g' x) = OPTION_MAP (g' o FST) (f x)) ⇒
  (g = g'),∀x. LTL (g x) = OPTION_MAP (g o FST) (f x),∀x. LHD (g x) = OPTION_MAP SND (f x)] ?- g x = [||]
CNF1: ∃x'.
  ∀ll f' x'' g' g'' x'''.
    (OPTION_MAP f' NONE = NONE) ∧
    (OPTION_MAP f' (SOME x'') = SOME (f' x'')) ∧
    (LHD ll ≠ NONE ∨ (ll = [||])) ∧ ((LHD ll = NONE) ∨ ll ≠ [||]) ∧
    ((NONE = LHD ll) ∨ ll ≠ [||]) ∧ (NONE ≠ LHD ll ∨ (ll = [||])) ∧
    (LHD (g x''') = OPTION_MAP SND (f x''')) ∧
    (LTL (g x''') = OPTION_MAP (g o FST) (f x''')) ∧
    ((g' = g'') ∨
     LTL (g' (x' g' g'')) ≠ OPTION_MAP (g' o FST) (f (x' g' g'')) ∨
     LHD (g' (x' g' g'')) ≠ OPTION_MAP SND (f (x' g' g'')) ∨
     LHD (g'' (x' g' g'')) ≠ OPTION_MAP SND (f (x' g' g'')) ∨
     LTL (g'' (x' g' g'')) ≠ OPTION_MAP (g'' o FST) (f (x' g' g''))) ∧
    (f x = NONE) ∧ g x ≠ [||]
Status: Satisfiable

User theorems:  []
|- ∀f. ∃g. ∀x. g x = case f x of NONE => [||] | SOME (a,b) => b:::g a

Goal: [] ?- ∃LUNFOLD.
  ∀f x.
    LUNFOLD f x =
    case f x of NONE => [||] | SOME (v1,v2) => v2:::LUNFOLD f v1
CNF1: ∃g f x.
  ∀f' x' LUNFOLD.
    (g f' x' = case f' x' of NONE => [||] | SOME (a,b) => b:::g f' a) ∧
    LUNFOLD (f LUNFOLD) (x LUNFOLD) ≠
    case f LUNFOLD (x LUNFOLD) of
      NONE => [||]
    | SOME (v1,v2) => v2:::LUNFOLD (f LUNFOLD) v1
Lambda: ∃g f x.
  ∀f' x' LUNFOLD.
    ∃f4.
      (∀v1 v2. f4 v1 v2 = v2:::LUNFOLD (f LUNFOLD) v1) ∧
      ∃f3.
        (∀v. f3 v = pair_CASE v f4) ∧
        ∃f2.
          (∀a b. f2 a b = b:::g f' a) ∧
          ∃f1.
            (∀v. f1 v = pair_CASE v f2) ∧
            (g f' x' = option_CASE (f' x') [||] f1) ∧
            LUNFOLD (f LUNFOLD) (x LUNFOLD) ≠
            option_CASE (f LUNFOLD (x LUNFOLD)) [||] f3
CNF2: ∃g f x f4 f3 f2 f1.
  ∀f' x' LUNFOLD v1 v2 v a b v'.
    (f4 f' x' LUNFOLD v1 v2 = v2:::LUNFOLD (f LUNFOLD) v1) ∧
    (f3 f' x' LUNFOLD v = pair_CASE v (f4 f' x' LUNFOLD)) ∧
    (f2 f' x' LUNFOLD a b = b:::g f' a) ∧
    (f1 f' x' LUNFOLD v' = pair_CASE v' (f2 f' x' LUNFOLD)) ∧
    (g f' x' = option_CASE (f' x') [||] (f1 f' x' LUNFOLD)) ∧
    LUNFOLD (f LUNFOLD) (x LUNFOLD) ≠
    option_CASE (f LUNFOLD (x LUNFOLD)) [||] (f3 f' x' LUNFOLD)
Status: Satisfiable

User theorems: 
Goal: [R ll3 ll4,∀ll3 ll4.
  R ll3 ll4 ⇒
  (ll3 = [||]) ∧ (ll4 = [||]) ∨
  (LHD ll3 = LHD ll4) ∧ R (THE (LTL ll3)) (THE (LTL ll4)),R ll1 ll2] ?- (ll3 = [||]) ∧ (ll4 = [||]) ∨
(LHD ll3 = LHD ll4) ∧ R (THE (LTL ll3)) (THE (LTL ll4))
CNF1: ∀ll3' ll4'.
  R ll1 ll2 ∧ ((LHD ll3' = LHD ll4') ∨ (ll4' = [||]) ∨ ¬R ll3' ll4') ∧
  ((LHD ll3' = LHD ll4') ∨ (ll3' = [||]) ∨ ¬R ll3' ll4') ∧
  (R (THE (LTL ll3')) (THE (LTL ll4')) ∨ (ll3' = [||]) ∨ ¬R ll3' ll4') ∧
  (R (THE (LTL ll3')) (THE (LTL ll4')) ∨ (ll4' = [||]) ∨ ¬R ll3' ll4') ∧
  R ll3 ll4 ∧ (ll3 ≠ [||] ∨ ll4 ≠ [||]) ∧
  (LHD ll3 ≠ LHD ll4 ∨ ¬R (THE (LTL ll3)) (THE (LTL ll4)))
Status: Unsatisfiable

